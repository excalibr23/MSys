{"type":"group","name":"MSys","enabled":true,"id":1,"items":[{"type":"function","name":"onLoad","enabled":true,"id":2,"code":"// Place any code here you'd like to autorun when the system is loaded\n\nMSys = {\n//Character    \n    attack: 'swarm ',\n    class: '',\n    health: 0,\n    maxHealth: 0,\n    useHeal: get_variable('useHeal'),\n    healReady: true,\n    interrupt: false,\n    ttk: 0,\n//Nano\n    multistrike: false,\n    frenzy: false,\n    freeze: false,\n    delaySwarm: false,\n    useDelay: get_variable('useDelay'),\n    useMultistrike: get_variable('useMultistrike'),\n    useFrenzy: get_variable('useFrenzy'),\n    useFreeze: get_variable('useFreeze'),\n//Fury\n    stance: '',\n    windshape: false,\n    rage: 0,\n    maxRage: 0,\n    unstoppable: false,\n    berserk: false,\n    useBerserk: get_variable('useBerserk'),\n    fever: false,\n    useFever: get_variable('useFever'),\n    hypertension: false,\n    infernoCharging: false,\n//Scoundrel\n    bullets: 0,\n    ambush: false,\n    useAmbush: get_variable('useAmbush'),\n    rapidfire: false,\n    useRapidfire: get_variable('useRapidfire'),\n//B.E.A.S.T.\n    backhand: false,\n//Engineer\n    \n//Hunting\n    goal: 'hunt2',\n    matchList: get_variable('matchList'),\n    auto: false,\n    break: get_variable('break'),\n    itemsInRoom: [],\n    damageThisFight: 0,\n//Functions\n    log: function (x, fgcolor, bgcolor) {\n        let type = typeof x\n        switch(type) {\n          case 'number':\n          case 'string':\n          case 'boolean':\n            display_notice(x.toString(), fgcolor, bgcolor)\n            break;\n          case 'object':\n            for (var prop in x) {\n              display_notice(`${prop}: ${x[prop]}`, fgcolor, bgcolor)\n            }\n            break;\n          case 'undefined':\n            display_notice('undefined', fgcolor, bgcolor)\n            break;\n          default:\n            display_notice('wtf is this')\n        }\n    },\n    alert: function (text, fgcolor, bgcolor) {\n    \ttext = text.toUpperCase()\n        let fullText = '-'.repeat(text.length+1) + '-------\\n--  '+ text + '  --\\n-------' + '-'.repeat(text.length+1)\n        \n        display_notice(fullText, fgcolor, bgcolor)\n    },\n    findTarget: function() {\n        var itemList = this.itemsInRoom\n        var killList = get_variable('killList')\n        var targetFound = false\n\t\t\n        //Match room order\n        if (!this.matchList) {\n            for (i=0; i<itemList.length; i++) {\n                for (x=0; x<killList.length; x++) {\n                    if (itemList[i].name.includes(killList[x]) && itemList[i].attrib === 'm' && targetFound === false) {\n                        set_variable('tar', itemList[i].id)\n                        send_command('settarget ' + itemList[i].id)\n                        targetFound = true\n                        display_notice('New target: '+itemList[i].name, 'red', 'black')\n                    }\n                }\n            }\n        } else { //Match priority/list order\n            for (i=0; i<killList.length; i++) {\n                for (x=0; x<itemList.length; x++) {\n                    if (itemList[x].name.includes(killList[i]) && itemList[x].attrib === 'm' && targetFound === false) {\n                        set_variable('tar', itemList[x].id)\n                        send_command('settarget ' + itemList[x].id)\n                        targetFound = true\n                        display_notice('New target: '+itemList[x].name, 'red', 'black')\n                    }\n                }\n            }\n        }\n\n        if (!targetFound) {\n            //display_notice('No Target Found', 'red', 'black')\n            set_variable('tar', '')\n        }\n    },\n    huntingAttack: function() {\n        //Nano\n        if (this.class == 'Nanoseer') {\n            this.log('nano hunt')\n            if (!this.frenzy && !this.freeze && this.useFrenzy) {\n                send_command('frenzy')  \n            }else if (!this.delaySwarm && this.useDelay) {\n                send_command('delay swarm ' + get_variable('tar'))\n            }else if (!this.multistrike && !this.freeze && this.targetHealth > 40 && this.useMultistrike) {\n                send_command('multistrike ' + get_variable('tar'))\n            }else if (!this.freeze && this.useFreeze && this.targetHealth > 20 ) {\n                send_command('freeze ' + get_variable('tar'))\n            }else {\n                send_command(this.attack + get_variable('tar'))\n            }\n        //Fury\n        } else if (this.class == 'Fury') {\n        \tvar command = 'combo '\n            \n            if (this.interrupt) {\n                send_command('kith fever ' + get_variable('tar'))\n                return;\n            }else if (!this.fever && this.useFever) {\n            \tsend_command('kith fever ' + get_variable('tar'))\n                return;\n            }else if (this.health / this.maxHealth < .8 && this.healReady  && this.useHeal) {\n            \tsend_command('kith suffuse')\n                return;\n            }else if (this.goal == 'hunt1') {\n                //Battleflow attack\n                if (this.stance == 'Symmetry') {\n                    command += 'swiftcut '\n                } else if (this.stance == 'Flare') {\n                    command += 'wound '\n                } else if (this.stance == 'Eruption') {\n                    if (this.hypertension) {\n                        command += 'bloodburn '\n                    } else {\n                    \tcommand += 'hypertension '\n                    }\n                } else if (this.stance == 'Ember') {\n                    command += 'legspike '\n                }\n\n                //Rage Attack\n                if (this.unstoppable) {\n                    command += 'slice '\n                } else if (this.stance == 'Symmetry') {\n                    if (this.rage / this.maxRage > .12 && !this.berserk && this.useBerserk) {\n                    \tcommand += 'berserk '\n                    } else {\n                    \tcommand += 'flyinglash '\n                    }\n                } else if (this.stance == 'Flare') {\n                    command += 'rend '\n                } else if (this.stance == 'Eruption') {\n                    if (this.health / this.maxHealth < .7) {\n                        command += 'resistant '\n                    } else {\n                        command += 'upperlash '\n                    }\n                } else if (this.stance == 'Ember') {\n                    if (this.rage / this.maxRage >= .72  && this.unstoppable == false) {\n                        command += 'unstoppable '\n                    } else {\n                        command += 'strike '\n                    }\n                }\n            }else if (this.goal == 'hunt2') {\n            \t//Battleflow attack\n                if (this.stance == 'Symmetry') {\n                    command += 'swiftcut '\n                } else if (this.stance == 'Flare') {\n                    command += 'wound '\n                } else if (this.stance == 'Eruption') {\n                    command += 'rupture '\n                }\n\n                //Rage Attack\n                if (this.unstoppable) {\n                    command += 'slice '\n                } else if (this.stance == 'Symmetry') {\n                    if (this.rage / this.maxRage > .12 && !this.berserk && this.useBerserk) {\n                    \tcommand += 'berserk '\n                    } else {\n                    \tcommand += 'flyinglash '\n                    }\n                } else if (this.stance == 'Flare') {\n                    command += 'rend '\n                } else if (this.stance == 'Eruption') {\n                    if (this.rage / this.maxRage >= .72  && this.unstoppable == false) {\n                        command += 'unstoppable '\n                    } else {\n                        command += 'strike '\n                    }\n                }\n            }\n            \n            command += get_variable('tar')\n            send_command(command)\n        //Scoundrel    \n        }else if (this.class == 'Scoundrel') {\n            if (this.health / this.maxHealth < .8 && this.healReady && this.useHeal) {\n            \tsend_command('stim')\n            }else if (this.bullets == 0) {\n            \tsend_command('ied fling ripper at ' + get_variable('tar'))\n            }else if (!this.ambush && this.useAmbush) {\n                send_command('gun ambush ' + get_variable('tar'))  \n            }else if (!this.rapidfire && this.bullets > 1 && this.useRapidfire) {\n                send_command('gun rapidfire ' + get_variable('tar'))\n            }else {\n                send_command('gun crackshot ' + get_variable('tar'))\n            }\n        }else if (this.class == 'B.E.A.S.T.'){\n            if (this.health / this.maxHealth < .8 && this.healReady && this.useHeal) {\n            \tsend_command('suit support')\n            }else if (!this.backhand) {\n                send_command('suit backhand ' + get_variable('tar'))\n            }else {\n                send_command('mwp wristblade ' + get_variable('tar'))\n            }\n        }else if (this.class == 'Engineer'){\n            if (this.health / this.maxHealth < .8 && this.healReady && this.useHeal) {\n            \tsend_command('operate stimjector')\n            }else {\n                send_command('bot claw ' + get_variable('tar'))\n            }\n        }\n    },\n    checkMobsInRoom: function() {\n        if (MSys.class == \"Fury\"  && MSys.infernoCharging == true) {\n            var mobs = 0\n            for (i=0; i<MSys.itemsInRoom.length; i++) {\n                if (MSys.itemsInRoom[i].attrib == 'm') {\n                    mobs += 1\n                }\n            }\n\n            if (mobs > 1) {\n                send_command('asdf')\n                MSys.chargingInferno = false\n                MSys.alert('stopping inferno', 'white', 'red')\n            }\n            \n            return mobs\n        }\n    }\n}\n\n//Assail barrage sweep sting is the bread and butter for heartrend. flameshape\n\n//Send MSys to browser log for debugging\nconsole.log(MSys)\n\n//Commands to send on login\nMSys.alert('Montem System Implant Loaded. Have a nice day.', 'black', 'gold')","items":[]},{"type":"function","name":"onGMCP","enabled":true,"id":3,"code":"// Place any code here you'd like to run when a GMCP message is received\n// - The GMCP message is received as \"args.gmcp_method\" and \"args.gmcp_args\"\n\nGMCP[args.gmcp_method] = args.gmcp_args\n\n/* ------------------------------------------ CHARACTER STUFF ----------------------------------- */\n\nif (args.gmcp_method == \"Char.Vitals\") {\n\t\n    MSys.health = args.gmcp_args.hp\n    MSys.maxHealth = args.gmcp_args.maxhp\n\n\tif (MSys.class === 'Fury') {\n    \tMSys.stance = args.gmcp_args.st\n    \tMSys.rage = args.gmcp_args.rg\n    \tMSys.maxRage = args.gmcp_args.maxrg\n    } else if (MSys.class === 'Scoundrel') {\n    \tMSys.bullets = args.gmcp_args.bl\n    }\n    \n    if (!MSys.class || MSys.class !== args.gmcp_args.class) {\n    \tMSys.class = args.gmcp_args.class\n        if (MSys.class == 'Fury') {\n        \tvar reflexFury = reflex_find_by_name('group', 'Fury', false, false, 'MSys')\n            reflex_enable(reflexFury)\n            \n            var reflexNano = reflex_find_by_name('group', 'Nanoseer', false, false, 'MSys')\n            reflex_disable(reflexNano)\n            \n            var reflexScoundrel = reflex_find_by_name('group', 'Scoundrel', false, false, 'MSys')\n            reflex_disable(reflexScoundrel)\n            \n            var reflexBEAST = reflex_find_by_name('group', 'BEAST', false, false, 'MSys')\n            reflex_disable(reflexBEAST)\n            \n            var reflexEng = reflex_find_by_name('group', 'Engineer', false, false, 'MSys')\n            reflex_disable(reflexEng)\n        } \n        else if (MSys.class == 'Nanoseer') {\n        \tvar reflexFury = reflex_find_by_name('group', 'Fury', false, false, 'MSys')\n            reflex_disable(reflexFury)\n            \n            var reflexNano = reflex_find_by_name('group', 'Nanoseer', false, false, 'MSys')\n            reflex_enable(reflexNano)\n            \n            var reflexScoundrel = reflex_find_by_name('group', 'Scoundrel', false, false, 'MSys')\n            reflex_disable(reflexScoundrel)\n            \n            var reflexBEAST = reflex_find_by_name('group', 'BEAST', false, false, 'MSys')\n            reflex_disable(reflexBEAST)\n            \n            var reflexEng = reflex_find_by_name('group', 'Engineer', false, false, 'MSys')\n            reflex_disable(reflexEng)\n        } \n        else if (MSys.class == 'Scoundrel') {\n        \tvar reflexFury = reflex_find_by_name('group', 'Fury', false, false, 'MSys')\n            reflex_disable(reflexFury)\n            \n            var reflexNano = reflex_find_by_name('group', 'Nanoseer', false, false, 'MSys')\n            reflex_disable(reflexNano)\n            \n            var reflexScoundrel = reflex_find_by_name('group', 'Scoundrel', false, false, 'MSys')\n            reflex_enable(reflexScoundrel)\n            \n            var reflexBEAST = reflex_find_by_name('group', 'BEAST', false, false, 'MSys')\n            reflex_disable(reflexBEAST)\n            \n            var reflexEng = reflex_find_by_name('group', 'Engineer', false, false, 'MSys')\n            reflex_disable(reflexEng)\n        }\n        else if (MSys.class == 'B.E.A.S.T.') {\n        \tvar reflexFury = reflex_find_by_name('group', 'Fury', false, false, 'MSys')\n            reflex_disable(reflexFury)\n            \n            var reflexNano = reflex_find_by_name('group', 'Nanoseer', false, false, 'MSys')\n            reflex_disable(reflexNano)\n            \n            var reflexScoundrel = reflex_find_by_name('group', 'Scoundrel', false, false, 'MSys')\n            reflex_disable(reflexScoundrel)\n            \n            var reflexBEAST = reflex_find_by_name('group', 'BEAST', false, false, 'MSys')\n            reflex_enable(reflexBEAST)\n            \n            var reflexEng = reflex_find_by_name('group', 'Engineer', false, false, 'MSys')\n            reflex_disable(reflexEng)\n        }\n        else if (MSys.class == 'Engineer') {\n        \tvar reflexFury = reflex_find_by_name('group', 'Fury', false, false, 'MSys')\n            reflex_disable(reflexFury)\n            \n            var reflexNano = reflex_find_by_name('group', 'Nanoseer', false, false, 'MSys')\n            reflex_disable(reflexNano)\n            \n            var reflexScoundrel = reflex_find_by_name('group', 'Scoundrel', false, false, 'MSys')\n            reflex_disable(reflexScoundrel)\n            \n            var reflexBEAST = reflex_find_by_name('group', 'BEAST', false, false, 'MSys')\n            reflex_disable(reflexBEAST)\n            \n            var reflexEng = reflex_find_by_name('group', 'Engineer', false, false, 'MSys')\n            reflex_enable(reflexEng)\n        }\n    }\n}\n\n/* -------------------------------------------- ITEMS IN ROOM ----------------------------------- */\n\n//Get Items In Room\nif (args.gmcp_method == \"Char.Items.List\") {\n    MSys.itemsInRoom = args.gmcp_args['items']\n    MSys.checkMobsInRoom()\n}\n\n//Remove items when items leave\nif (args.gmcp_method == \"Char.Items.Remove\") {\n    let itemLeaving = args.gmcp_args['item']\n    \n    //Find index of item\n    MSys.itemsInRoom = MSys.itemsInRoom.filter(item => item.id !== itemLeaving.id);\n    MSys.checkMobsInRoom()\n    \n}\n\n//Add items when items enter\nif (args.gmcp_method == \"Char.Items.Add\") {\n    let itemJoining = args.gmcp_args['item']\n    \n    //Find index of item\n    MSys.itemsInRoom.push(itemJoining);\n    MSys.checkMobsInRoom()\n    \n    if (MSys.auto === true) {\n    \tif (!get_variable('tar')) {\n        \tMSys.findTarget()\n        }\n    }\n}\n\n/* -------------------------------------------- PLAYERS IN ROOM ----------------------------------- */\nif (args.gmcp_method == \"Room.Players\") {\n    MSys.playersInRoom = args.gmcp_args\n}\n\n/* --------------------------------------------- HELPERS --------------------------------- */\nif (args.gmcp_method == \"Room.Info\") {\n    if (MSys.auto === true) {\n        MSys.findTarget()\n    }\n}\n\nif (args.gmcp_method == \"IRE.Target.Info\") {\n\tMSys.targetHealth = args.gmcp_args['hpperc'].slice(0, -1)\n}\n\n//This is broken\nif (args.gmcp_method == \"IRE.CombatMessage\") {\n\tif (args.gmcp_args['target'] == 'montem') {\n    \tMSys.alert('you are being attacked by ' + args.gmcp_args['caster'] , 'yellow', 'red')\n    }\n}","items":[]},{"type":"group","name":"Auto Hunt","enabled":true,"id":8,"items":[{"type":"group","name":"Setup","enabled":true,"id":41,"items":[{"type":"alias","name":"Hunting List Setup - hsetup","enabled":true,"id":25,"matching":"begins","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"set_variable('killList', ['rockhopper','spiderax','mouse','shadow fox','vent rat','malfunctioning drone','glitch-riddled security robot','gang member','Bushraki','eel','Krel','terraworm','mutated','mutant','leech','algerion','eskama','silkmoth','shellback','coroxodon','drakkafly','balkrab','haerbist','beetle','tangutan','lizard','cania','tigrid','Fatar','salvage bot','rogue','eagle'])\n\nMSys.log('-- Hunting List Setup.  Use \\'hsave\\' to keep a backup.  \\'hload\\' will load your backup.', 'white', 'black')\nMSys.log('-- Use \\'hadd\\' <name> to add to the list and \\'hremove\\' <name> to remove items from this list. \\'hshow\\' will show the items on your list.', 'white', 'black')\nMSys.log('-- Use \\'hattack\\' <attackName> to make it your primary attack that will be auto used.', 'white')\nMSys.log('-- Use \\'hlist\\' to switch between room and priority list. Use \\'hup\\' or \\'hdown\\' <name> to increase or decrease an item on the priority list.', 'white')\nMSys.log('-- Make sure you use \\'config usequeueing on\\'.  Then you can use other attacks to overwrite auto attacks.', 'white')\n\nset_variable('useFreeze', false)\nset_variable('useMultistrike', false)\nset_variable('useFrenzy', false)\nset_variable('useDelay', false)\nset_variable('useBerserk', false)\nset_variable('useFever', false)\nset_variable('useAmbush', false)\nset_variable('useRapidfire', false)\nset_variable('useHeal', true)\nset_variable('matchList', true)\nset_variable('break', true)"}],"text":"hsetup","items":[]},{"type":"alias","name":"Change Auto Attack","enabled":false,"id":26,"matching":"regexp","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"MSys.attack = args[1] + ' '\nset_variable('huntingAttack', args[1] + ' ')\ndisplay_notice('Attack set to: ' + args[1], 'white', 'black')"}],"text":"hattack (.+)","items":[]},{"type":"alias","name":"Enable/Disable List Mode - hlist","enabled":true,"id":56,"matching":"begins","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"if (get_variable('matchList')) {\n    MSys.matchList = false\n    set_variable('matchList', false)\n    MSys.log('Will match room listing', 'white')\n} else {\n\tMSys.matchList = true\n    set_variable('matchList', true)\n    MSys.log('Will match priority listing', 'white')\n}"}],"text":"hlist","items":[]},{"type":"alias","name":"Enable/Disable Break After Kill Mode - hbreak","enabled":true,"id":82,"matching":"begins","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"if (get_variable('break')) {\n    MSys.break = false\n    set_variable('break', false)\n    MSys.log('Will continue after kill.', 'white')\n} else {\n\tMSys.break = true\n    set_variable('break', true)\n    MSys.log('Will break after kill.', 'white')\n}"}],"text":"hbreak","items":[]}],"actions":[]},{"type":"trigger","name":"Slain","enabled":true,"id":5,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^(You) have slain a.*$|^.*has been slain by (.+)\\.$","actions":[{"action":"script","script":"MSys.freeze = false\nMSys.frenzy = false\nMSys.delaySwarm = false\nMSys.fever = false\nMSys.hypertension = false\nMSys.ambush = false\nMSys.backhand = false\n\nvar a = new Audio('https://freesound.org/people/adcbicycle/sounds/13934/download/13934__adcbicycle__6.wav')\na.play()\n\nvar autoList = ['You', 'Chronoxi', 'Feraluna', 'Mee', 'Casimar', 'Albion']\nvar onList = ''\n\nif (args[1]) {\n\tonList = autoList.includes(args[1])\n} else {\n\tonList = autoList.includes(args[2])\n}\n\nif (MSys.auto === true && onList) {\n    MSys.targetHealth = 0\n\tMSys.findTarget()\n    if (get_variable('tar') != '' && !MSys.break) {\n\t\tMSys.huntingAttack()\n    } else {\n    \t//Disable reflex\n        if (MSys.class == 'Fury') {\n        \tvar reflex = reflex_find_by_name('trigger', 'Queue Attack Fury', false, false, 'MSys')\n        \treflex_disable(reflex)\n        } else if (MSys.class == 'Scoundrel') {\n        \tvar reflex = reflex_find_by_name('trigger', 'Queue Attack Scoundrel', false, false, 'MSys')\n        \treflex_disable(reflex)\n        } else if (MSys.class == 'B.E.A.S.T.') {\n        \tvar reflex = reflex_find_by_name('trigger', 'Queue Attack BEAST', false, false, 'MSys')\n        \treflex_disable(reflex)\n        } else if (MSys.class == 'Nanoseer') {\n        \tvar reflex = reflex_find_by_name('trigger', 'Queue Attack Nano', false, false, 'MSys')\n        \treflex_disable(reflex)\n        } else if (MSys.class == 'Engineer') {\n        \tvar reflex = reflex_find_by_name('trigger', 'Queue Attack Engineer', false, false, 'MSys')\n        \treflex_disable(reflex)\n        }\n    }\n}\n\nvar slainMessage = ''\nvar now = new Date()\nif (MSys.damageThisFight > 0 && MSys.ttk > 0){\n\tslainMessage = MSys.damageThisFight + ' damage done this fight. | TTK: ' + (now.getTime() - MSys.ttk)/1000 + 's'\n} else if (MSys.damageThisFight > 0) {\n\tslainMessage = MSys.damageThisFight + ' damage done this fight.'\n} else if (MSys.ttk > 0) {\n\tslainMessage = 'TTK: ' + (now.getTime() - MSys.ttk)/1000 + 's'\n}\n\nif (MSys.damageThisFight > 0 || MSys.ttk > 0){\n    MSys.alert(slainMessage, 'lightgreen', 'darkblue')\n}\n\n\nMSys.ttk = 0\nMSys.damageThisFight = 0"}],"items":[]},{"type":"trigger","name":"Crash - AUTO OFF","enabled":true,"id":18,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^You prepare to crash out of the room.*$","actions":[{"action":"script","script":"MSys.auto = false\ndisplay_notice('AUTO OFF', 'white', 'black')"}],"items":[]},{"type":"keybind","name":"","enabled":true,"id":10,"key":96,"actions":[{"action":"script","script":"if (MSys.class == 'Fury') {\n\tvar reflex = reflex_find_by_name('trigger', 'Queue Attack Fury', false, false, 'MSys')\n\treflex_enable(reflex)\n} else if (MSys.class == 'Scoundrel') {\n\tvar reflex = reflex_find_by_name('trigger', 'Queue Attack Scoundrel', false, false, 'MSys')\n\treflex_enable(reflex)\n} else if (MSys.class == 'B.E.A.S.T.') {\n\tvar reflex = reflex_find_by_name('trigger', 'Queue Attack BEAST', false, false, 'MSys')\n\treflex_enable(reflex)\n} else if (MSys.class == 'Nanoseer') {\n\tvar reflex = reflex_find_by_name('trigger', 'Queue Attack Nano', false, false, 'MSys')\n\treflex_enable(reflex)\n} else if (MSys.class == 'Engineer') {\n\tvar reflex = reflex_find_by_name('trigger', 'Queue Attack Engineer', false, false, 'MSys')\n\treflex_enable(reflex)\n}\n\n//send_command('crt I am attacking ' + get_variable('tar'))\nvar dt = new Date()\nMSys.ttk = dt.getTime()\nMSys.huntingAttack()"}],"key_alt":false,"key_ctrl":false,"key_shift":false,"items":[]},{"type":"keybind","name":"","enabled":true,"id":32,"key":187,"actions":[{"action":"script","script":"if (MSys.auto === true) {\n  MSys.auto = false\n  display_notice(\"AUTO OFF\", 'white', 'black')\n} else {\n  MSys.auto = true\n  display_notice(\"AUTO ON\", 'white', 'black')\n}"}],"key_alt":false,"key_ctrl":true,"key_shift":false,"items":[]},{"type":"alias","name":"Heal","enabled":true,"id":115,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"if (MSys.class == 'Nanoseer') {\n  send_command('NANO REPAIR')\n} else if (MSys.class == 'Fury') {\n  send_command('KITH SUFFUSE')\n} else if (MSys.class == 'Scoundrel') {\n  send_command('STIM')\n} else if (MSys.class == 'B.E.A.S.T.') {\n  send_command('suit support')\n} else if (MSys.class == 'Engineer') {\n  send_command('operate stimjector')\n}"}],"text":"h","items":[]},{"type":"alias","name":"Add to hunting list - hadd <mob>","enabled":true,"id":13,"matching":"regexp","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"display_notice('Adding: ' + args[1] + ' to list', 'white', 'black')\nlet newList = get_variable('killList')\nnewList.push(args[1])\nset_variable('killList', newList)"}],"text":"hadd (.+)","items":[]},{"type":"alias","name":"Remove from hunting list - hremove <mob>","enabled":true,"id":14,"matching":"regexp","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"display_notice('Removing: ' + args[1] + ' from list', 'white', 'black')\n\nlet newList = get_variable('killList')\nnewList = newList.filter(item => item !== args[1]);\n\nset_variable('killList', newList)"}],"text":"hremove (.+)","items":[]},{"type":"alias","name":"Save Hunting List To Backup - hsave","enabled":true,"id":15,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"let newSave = get_variable('killList')\nset_variable('killListBackup', newSave)\ndisplay_notice('Hunt List Saved', 'white', 'black')\n"}],"text":"hsave","items":[]},{"type":"alias","name":"Load Hunting List From Backup - hload","enabled":true,"id":16,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"let backupList = get_variable('killListBackup')\nset_variable('killList', backupList)\ndisplay_notice('Hunt List Loaded from Backup', 'white', 'black')"}],"text":"hload","items":[]},{"type":"alias","name":"Show Hunting Targets - hshow","enabled":true,"id":17,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"let killList = get_variable('killList')\nfor (i=0; i<killList.length; i++) {\n\tdisplay_notice(killList[i], 'white', 'black')\n}"}],"text":"hshow","items":[]},{"type":"alias","name":"Item Priority - hup/hdown <mob>","enabled":true,"id":52,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"var list = get_variable('killList')\nvar nameIndex = list.indexOf(args[2])\nvar name = list[nameIndex]\n\nif (list[nameIndex-1] && nameIndex && args[1] === 'hup') {\n\tlist[nameIndex] = list[nameIndex - 1]\n    list[nameIndex-1] = name\n} else if (list[nameIndex+1] && nameIndex && args[1] === 'hdown') {\n    list[nameIndex] = list[nameIndex + 1]\n    list[nameIndex+1] = name\n}\n\nset_variable('killList', list)\n\nfor (i=0; i<list.length; i++) {\n\tif(list[i] === name){\n    \tdisplay_notice(list[i], 'gold', 'black')\n    } else {\n    \tdisplay_notice(list[i])\n    }\n}"}],"text":"^(hup|hdown) (.+)$","items":[]},{"type":"alias","name":"Heal Toggle - hheal","enabled":true,"id":81,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"if (get_variable('useHeal')) {\n\tset_variable('useHeal', false)\n    MSys.useHeal = false\n    MSys.log('HEAL OFF', 'white')\n} else {\n\tset_variable('useHeal', true)\n    MSys.useHeal = true\n    MSys.log('HEAL ON', 'white')\n}"}],"text":"hheal","items":[]},{"type":"alias","name":"Kill","enabled":true,"id":120,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"if (MSys.class == 'Fury') {\n\tvar reflex = reflex_find_by_name('trigger', 'Queue Attack Fury', false, false, 'MSys')\n\treflex_enable(reflex)\n} else if (MSys.class == 'Scoundrel') {\n\tvar reflex = reflex_find_by_name('trigger', 'Queue Attack Scoundrel', false, false, 'MSys')\n\treflex_enable(reflex)\n} else if (MSys.class == 'B.E.A.S.T.') {\n\tvar reflex = reflex_find_by_name('trigger', 'Queue Attack BEAST', false, false, 'MSys')\n\treflex_enable(reflex)\n} else if (MSys.class == 'Nanoseer') {\n\tvar reflex = reflex_find_by_name('trigger', 'Queue Attack Nano', false, false, 'MSys')\n\treflex_enable(reflex)\n} else if (MSys.class == 'Engineer') {\n\tvar reflex = reflex_find_by_name('trigger', 'Queue Attack Engineer', false, false, 'MSys')\n\treflex_enable(reflex)\n}\n\n//send_command('crt I am attacking ' + get_variable('tar'))\nvar dt = new Date()\nMSys.ttk = dt.getTime()\nMSys.huntingAttack()"}],"text":"k","items":[]}],"actions":[]},{"type":"group","name":"Generic","enabled":true,"id":4,"items":[{"type":"group","name":"Chat","enabled":true,"id":34,"items":[{"type":"trigger","name":"Copy tells to main","enabled":true,"id":35,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^(.*tells you.*)$|^(.*you.*tell.*)$","actions":[{"action":"script","script":"if (args[2]) {\n\targs[1] = args[2]\n}\ndisplay_notice(args[1], 'gold', 'black')"}],"items":[]},{"type":"trigger","name":"Copy says to main","enabled":true,"id":49,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^((?!\\(Scatterhome\\)).*says.*)$|^(.*You say.*)$","actions":[{"action":"script","script":"if (args[2]) {\n\targs[1] = args[2]\n}else if (args[3]) {\n\targs[1] = args[3]\n}else if (args[4]) {\n\targs[1] = args[4]\n}\ndisplay_notice(args[1], 'lightblue', 'black')"}],"items":[]},{"type":"trigger","name":"","enabled":true,"id":48,"matching":"substring","whole_words":true,"case_sensitive":true,"text":"Chronoxi tells you, \"Follow chronoxi.\"","actions":[{"action":"command","command":"follow chronoxi"}],"items":[]}],"actions":[]},{"type":"group","name":"Interrupts","enabled":true,"id":123,"items":[{"type":"trigger","name":"Super - Interrupt","enabled":true,"id":122,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^Throwing back its grizzled head, a sly cania lets out a high-pitched, wavering howl.$|^A sluggish atzaparaki shakes off some of its torpor and draws in a deep breath, its sides beginning to swell alarmingly.$","actions":[{"action":"script","script":"MSys.interrupt = true\n\nif (MSys.auto === true) {\n    MSys.alert('interrupting super', 'white', 'blue')\n\tMSys.huntingAttack()\n}"}],"items":[]}],"actions":[]},{"type":"trigger","name":"","enabled":true,"id":6,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"You are no longer in the throes of battle.","actions":[{"action":"highlight","highlight":"match","highlight_backref":"1","highlight_fg":"#9488f6","highlight_bg":"#000000"}],"items":[]},{"type":"trigger","name":"Hide Queue","enabled":true,"id":7,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^\\[Queue\\]: You will attempt to do.*$|^Your swarm is already focused upon a multistrike.*$","actions":[{"action":"gag"}],"items":[]},{"type":"trigger","name":"Add Damage Per Kill","enabled":true,"id":57,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"Damage Dealt: (.+) .+","actions":[{"action":"script","script":"MSys.damageThisFight += parseInt(args[1])"}],"items":[]},{"type":"trigger","name":"Not following","enabled":true,"id":87,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"(.+) is no longer following you.","actions":[{"action":"script","script":"MSys.alert(args[1] + ' Stopped Following!', 'white', 'red')"}],"items":[]},{"type":"trigger","name":"Junk Sell","enabled":true,"id":88,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"A heap of rusty equipment indicates a JUNK shop here.","actions":[{"action":"command","command":"Junk Sell"}],"items":[]},{"type":"alias","name":"Crash + Direction - c<dir>","enabled":true,"id":33,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"send_command('cq')\nsend_command('crash ' + args[1])"}],"text":"c(nw|ne|se|sw|n|s|e|w|u|d|in|out)","items":[]},{"type":"alias","name":"Cosmpiercer list - cp","enabled":true,"id":50,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"command","command":"Cosmpiercer list","prefix_suffix":true}],"text":"cp","items":[]},{"type":"alias","name":"Cosmpiercer map - cpm","enabled":true,"id":51,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"command","command":"Cosmpiercer map","prefix_suffix":true}],"text":"cpm","items":[]},{"type":"alias","name":"Cosmpiecer Liberate - cpl","enabled":true,"id":68,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"command","command":"cosmpiercer liberate","prefix_suffix":true}],"text":"cpl","items":[]},{"type":"alias","name":"Javascript - js","enabled":true,"id":31,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"MSys.log(eval(args[1]))"}],"text":"^js (.+)$","items":[]},{"type":"alias","name":"Station Transfer List - stl","enabled":true,"id":83,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"command","command":"Station Transfer List","prefix_suffix":true}],"text":"stl","items":[]},{"type":"alias","name":"Takeoff List - tl","enabled":true,"id":119,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"command","command":"Takeoff List","prefix_suffix":true}],"text":"tl","items":[]}],"actions":[]},{"type":"group","name":"Spaceship","enabled":true,"id":11,"items":[{"type":"alias","name":"Ship Beacon - sb","enabled":true,"id":12,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"command","command":"SHIP BEACON","prefix_suffix":true}],"text":"sb","items":[]},{"type":"alias","name":"Incursion List - il","enabled":true,"id":60,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"command","command":"Incursion List","prefix_suffix":true}],"text":"il","items":[]},{"type":"alias","name":"Incursion Map - im","enabled":true,"id":62,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"command","command":"Incursion Map","prefix_suffix":true}],"text":"im","items":[]},{"type":"alias","name":"Starchart - sc <place>","enabled":true,"id":61,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"send_command('starchart ' + args[1])"}],"text":"^sc (.*)$","items":[]},{"type":"alias","name":"Cargo Recover - cr <dir>","enabled":true,"id":63,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"command","command":"cargo recover @1","prefix_suffix":true}],"text":"^cr (.+)$","items":[]}],"actions":[]},{"type":"group","name":"Nanoseer","enabled":false,"id":21,"items":[{"type":"alias","name":"Channel/Swap Empyreal","enabled":true,"id":22,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"var empyreal = {\n    a: \"architect\",\n    c: \"conqueror\",\n    p: \"progenitor\",\n    s: \"sunderer\",\n    t: \"traveller\"\n}\n\nvar command = {\n    ch: \"oblivion channel \",\n    sw: \"oblivion swap \"\n}\n\nsend_command(command[args[1]] + empyreal[args[2]])"}],"text":"^(ch|sw)(a|c|p|s|t)$","items":[]},{"type":"alias","name":"Void Soothe","enabled":true,"id":46,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"command","command":"Void Soothe","prefix_suffix":true}],"text":"vs","items":[]},{"type":"alias","name":"Delay","enabled":true,"id":47,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"var command = {\n\ts: 'swarm'\n}\n\nsend_command('delay ' + command[args[1]])"}],"text":"^d(s)$","items":[]},{"type":"alias","name":"","enabled":true,"id":44,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"command","command":"levitate","prefix_suffix":true}],"text":"fly","items":[]},{"type":"trigger","name":"Negation Down Alert","enabled":true,"id":36,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"The shadow of the Progenitor's protection springs to life around you, absorbing the damaging attack before lifting away from you, the air around you growing subtly lighter.","actions":[{"action":"script","script":"MSys.alert('Negation Down', 'white', 'red')"}],"items":[]},{"type":"trigger","name":"","enabled":true,"id":38,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"You break out of your frenzy.","actions":[{"action":"script","script":"MSys.alert('Frenzy Down', 'white', 'red')"}],"items":[]},{"type":"trigger","name":"Delay Swarm On","enabled":true,"id":54,"matching":"substring","whole_words":true,"case_sensitive":true,"text":"Quickly, you program a delayed swarm attack","actions":[{"action":"script","script":"MSys.delaySwarm = true"}],"items":[]},{"type":"trigger","name":"Freeze on","enabled":true,"id":29,"matching":"substring","whole_words":true,"case_sensitive":true,"text":"You brush your fingertips across","actions":[{"action":"script","script":"MSys.freeze = true"}],"items":[]},{"type":"trigger","name":"Freeze off","enabled":true,"id":30,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^.+has cured the effects of Frozen.$","actions":[{"action":"script","script":"MSys.freeze = false\nif (MSys.auto === true) {\n\tMSys.huntingAttack()\n}"}],"items":[]},{"type":"trigger","name":"Frenzy on","enabled":true,"id":39,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^A dark wave of madness rolls through your thoughts.*$|^.*To draw more of the Conquerer into your thoughts would utterly destroy your mind!$","actions":[{"action":"script","script":"MSys.frenzy = true"}],"items":[]},{"type":"trigger","name":"Frenzy off","enabled":false,"id":40,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"You break out of your frenzy.","actions":[{"action":"script","script":"MSys.frenzy = false"}],"items":[]},{"type":"trigger","name":"Multistrike return","enabled":true,"id":19,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^The nanites disperse, no longer striking at (.*)\\.$","actions":[{"action":"script","script":"MSys.multistrike = false"}],"items":[]},{"type":"trigger","name":"Multistrike out","enabled":true,"id":20,"matching":"substring","whole_words":true,"case_sensitive":true,"text":"You focus intently to direct a portion of your swarm towards","actions":[{"action":"script","script":"MSys.multistrike = true"}],"items":[]},{"type":"trigger","name":"Queue Attack Nano","enabled":true,"id":9,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^Focusing on becoming more attuned to your swarm.*$|^You inhale a cloud of your swarm.*$|^You focus intently to direct a portion of your swarm towards.*$|^Your swarm is already focused upon a multistrike.*$|^Electrical energy begins to discharge from the silvery mist of your swarm.*$|^You brush your fingertips across.*$|^Reaching into the void, you channel the collosal power of the Progenitor, and its aura descends over you like a giant, protective shadow.$|^A dark wave of madness rolls through your thoughts.*$|^Quickly, you program a delayed swarm attack.*$","actions":[{"action":"script","script":"if (MSys.auto === true) {\n\tMSys.huntingAttack()\n}"}],"items":[]},{"type":"alias","name":"Enable/Disable Freeze","enabled":true,"id":42,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"if (get_variable('useFreeze')) {\n\tset_variable('useFreeze', false)\n    MSys.useFreeze = false\n    MSys.log('FREEZE OFF', 'white')\n} else {\n\tset_variable('useFreeze', true)\n    MSys.useFreeze = true\n    MSys.log('FREEZE ON', 'white')\n}"}],"text":"hfreeze","items":[]},{"type":"alias","name":"Enable/Disable Multistrike","enabled":true,"id":43,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"if (get_variable('useMultistrike')) {\n\tset_variable('useMultistrike', false)\n    MSys.useMultistrike = false\n    MSys.log('MULTISTRIKE OFF', 'white')\n} else {\n\tset_variable('useMultistrike', true)\n    MSys.useMultistrike = true\n    MSys.log('MULTISTRIKE ON', 'white')\n}"}],"text":"hmulti","items":[]},{"type":"alias","name":"Enable/Disable Frenzy","enabled":true,"id":45,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"if (get_variable('useFrenzy')) {\n\tset_variable('useFrenzy', false)\n    MSys.useFrenzy = false\n    MSys.log('FRENZY OFF', 'white')\n} else {\n\tset_variable('useFrenzy', true)\n    MSys.useFrenzy = true\n    MSys.log('FRENZY ON', 'white')\n}"}],"text":"hfrenzy","items":[]},{"type":"alias","name":"Enable/Disable Delay Swarm","enabled":true,"id":55,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"if (get_variable('useDelay')) {\n\tset_variable('useDelay', false)\n    MSys.useDelay = false\n    MSys.log('DELAY OFF', 'white')\n} else {\n\tset_variable('useDelay', true)\n    MSys.useDelay = true\n    MSys.log('DELAY ON', 'white')\n}"}],"text":"hdelay","items":[]},{"type":"alias","name":"Limb drain","enabled":true,"id":53,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"limbs = {\n\tll: 'left leg',\n    rl: 'right leg',\n    ra: 'right arm',\n    la: 'left arm'\n}\n\nsend_command('limbdrain ' + get_variable('tar') + ' ' + limbs[args[1]])"}],"text":"l(ll|rl|la|ra)","items":[]},{"type":"alias","name":"Nano Abilities - hnanoseer","enabled":true,"id":90,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"var abilities = ''\nabilities += 'Freeze: ' + get_variable('useFreeze') + '\\n'\nabilities += 'Frenzy: ' + get_variable('useFrenzy') + '\\n'\nabilities += 'Multistrike: ' + get_variable('useMultistrike') + '\\n'\nabilities += 'DelaySwarm: ' + get_variable('useDelay') + '\\n'\n\nMSys.log(abilities, 'white')"}],"text":"hnanoseer","items":[]}],"actions":[]},{"type":"group","name":"Fury","enabled":true,"id":69,"items":[{"type":"group","name":"Hide Lines","enabled":true,"id":124,"items":[{"type":"trigger","name":"Attacks available hide","enabled":true,"id":125,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^Available attacks:.*$|^Rage attacks:.*$","actions":[{"action":"gag"}],"items":[]}],"actions":[]},{"type":"trigger","name":"Windshape On","enabled":true,"id":70,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"Resting your hand on the hilt of a.* you focus intently, and power ripples from your fingers out along the blade, reshaping it.","actions":[{"action":"script","script":"MSys.windshape = true"}],"items":[]},{"type":"trigger","name":"Windshape Off","enabled":true,"id":86,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"The blade of .+ shimmers and warps, returning to its original shape.","actions":[{"action":"script","script":"MSys.alert('Windshape off!!!!', 'white', 'red')\nMSys.windshape = false\n\nvar a = new Audio('https://freesound.org/people/Stopmotionbros/sounds/438991/download/438991__stopmotionbros__wind.m4a')\na.play()"}],"items":[]},{"type":"trigger","name":"Fever On","enabled":true,"id":79,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"Your mind extends towards the vulnerabilities of .+ body, and with your connection to the universe's energy, you begin to increase the heat in every cell, flushing .+ with a raging fever.","actions":[{"action":"script","script":"MSys.fever = true\nMSys.interrupt = false"}],"items":[]},{"type":"trigger","name":"Unstoppable On","enabled":true,"id":71,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"Your rage overwhelms you, you become unstoppable!","actions":[{"action":"script","script":"MSys.unstoppable = true\n\nvar reflexOn = reflex_find_by_name('trigger', 'Queue Attack Fury', false, false, 'MSys').enabled\n\nif (MSys.auto && reflexOn) {\n\tMSys.huntingAttack()\n}"}],"items":[]},{"type":"trigger","name":"Unstoppable Off","enabled":true,"id":72,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"You no longer feel unstoppable!","actions":[{"action":"script","script":"MSys.unstoppable = false\nMSys.alert('NO UNSTOPPABLE', 'red')\n\nvar reflexOn = reflex_find_by_name('trigger', 'Queue Attack Fury', false, false, 'MSys').enabled\n\nif (MSys.auto && reflexOn) {\n\tMSys.huntingAttack()\n}"}],"items":[]},{"type":"trigger","name":"Hypertension On","enabled":true,"id":85,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^Tossing .+ to your off hand, you extend a bloodied palm towards .+ and then clench it into a fist, feeling .+ heart spasm and beat more quickly within .+ chest.$","actions":[{"action":"script","script":"MSys.hypertension = true"}],"items":[]},{"type":"trigger","name":"Heal Ready","enabled":true,"id":77,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"It is safe to suffuse yourself with kith energy again.","actions":[{"action":"script","script":"MSys.alert('SUFFUSE UP', 'white', 'green')\nMSys.healReady = true"}],"items":[]},{"type":"trigger","name":"Heal Used","enabled":true,"id":78,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"The heart of distant stars and the fire at the center of every planet shimmers in your mind, and you draw upon that power, filling your body with an energy that heals your wounds and suffuses you with a flush of health.","actions":[{"action":"script","script":"MSys.healReady = false"}],"items":[]},{"type":"trigger","name":"Berserk On","enabled":true,"id":74,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^You go berserk, flailing .*$","actions":[{"action":"script","script":"MSys.berserk = true\n\nvar reflexOn = reflex_find_by_name('trigger', 'Queue Attack Fury', false, false, 'MSys').enabled\n\nif (MSys.auto && reflexOn) {\n\tMSys.huntingAttack()\n}"}],"items":[]},{"type":"trigger","name":"Berserk Off","enabled":true,"id":75,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"You are no longer berserk.","actions":[{"action":"script","script":"MSys.berserk = false\n\nvar reflexOn = reflex_find_by_name('trigger', 'Queue Attack Fury', false, false, 'MSys').enabled\n\nif (MSys.auto && reflexOn) {\n\tMSys.huntingAttack()\n}"}],"items":[]},{"type":"trigger","name":"Inferno Charging","enabled":true,"id":121,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"You close your eyes, lift your kithblade above your head, and reach for the fire inside yourself. Flames begin to dance and shimmer to life around your feet, and you are buffeted by the hot wind of the inferno you begin to call upon.","actions":[{"action":"script","script":"MSys.infernoCharging = true"}],"items":[]},{"type":"trigger","name":"Attack after Inferno","enabled":true,"id":118,"matching":"substring","whole_words":true,"case_sensitive":true,"text":"The searing wave of your inferno engulfs","actions":[{"action":"script","script":"MSys.infernoCharging = false\nif (MSys.auto === true) {\n    var reflex = reflex_find_by_name('trigger', 'Queue Attack Fury', false, false, 'MSys')\n\treflex_enable(reflex)\n   \n\tMSys.huntingAttack()\n}"}],"items":[]},{"type":"trigger","name":"Queue Attack Fury","enabled":false,"id":73,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^You flow smoothly into the (.+) stance.$|^You flow out of your stance, landing on your feet.$|^The heart of distant stars and the fire at the center of every planet shimmers in your mind, and you draw upon that power, filling your body with an energy that heals your wounds and suffuses you with a flush of health.$|^Your mind extends towards the vulnerabilities of .+ body, and with your connection to the universe's energy, you begin to increase the heat in every cell, flushing .+ with a raging fever.$","actions":[{"action":"script","script":"if (MSys.auto === true) {\n\tMSys.huntingAttack()\n}"}],"items":[]},{"type":"alias","name":"Berserk Toggle - hberserk","enabled":true,"id":76,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"if (get_variable('useBerserk')) {\n\tset_variable('useBerserk', false)\n    MSys.useBerserk = false\n    MSys.log('BERSERK OFF', 'white')\n} else {\n\tset_variable('useBerserk', true)\n    MSys.useBerserk = true\n    MSys.log('BERSERK ON', 'white')\n}"}],"text":"hberserk","items":[]},{"type":"alias","name":"Fever Toggle - hfever","enabled":true,"id":80,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"if (get_variable('useFever')) {\n\tset_variable('useFever', false)\n    MSys.useFever = false\n    MSys.log('FEVER OFF', 'white')\n} else {\n\tset_variable('useFever', true)\n    MSys.useFever = true\n    MSys.log('FEVER ON', 'white')\n}"}],"text":"hfever","items":[]},{"type":"alias","name":"Fury Abilities - hfury","enabled":true,"id":84,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"var abilities = ''\nabilities += 'Berserk: ' + get_variable('useBerserk') + '\\n'\nabilities += 'Fever: ' + get_variable('useFever') + '\\n'\nabilities += 'Heal: ' + get_variable('useHeal') + '\\n'\nabilities += 'Windshape: ' + MSys.windshape + '\\n'\nabilities += 'Goal: ' + MSys.goal + '\\n'\n\nMSys.log(abilities, 'white')"}],"text":"hfury","items":[]},{"type":"alias","name":"Inferno - inf","enabled":true,"id":116,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"command","command":"KITH INFERNO","prefix_suffix":true}],"text":"inf","items":[]},{"type":"keybind","name":"","enabled":true,"id":117,"key":110,"actions":[{"action":"script","script":"MSys.infernoCharging = true\n\nvar mobs = MSys.checkMobsInRoom()\nif (mobs > 1) {\n\tMSys.alert('Too many mobs for inferno', 'white', 'red')\n    MSys.infernoCharging = false\n} else {\n    var dt = new Date()\n\tMSys.ttk = dt.getTime()\n    \n\tsend_command('inf')\n}"}],"key_alt":false,"key_ctrl":false,"key_shift":false,"items":[]}],"actions":[]},{"type":"group","name":"Scoundrel","enabled":false,"id":89,"items":[{"type":"trigger","name":"Ambush Used","enabled":true,"id":91,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^Without warning, you snatch .* from your belt and fire it from the hip at .*, moving too rapidly to be spotted until the bullet is already leaving the barrel.$|^You cannot ambush anyone, as you already are fighting!$","actions":[{"action":"script","script":"MSys.ambush = true\n\nif (MSys.auto === true) {\n\tMSys.huntingAttack()\n}"}],"items":[]},{"type":"trigger","name":"Rapidfire Used","enabled":true,"id":92,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"Placing your hand on the hammer of .*, you quickly fire off two shots at .* in rapid succession.","actions":[{"action":"script","script":"MSys.rapidfire = true"}],"items":[]},{"type":"trigger","name":"Rapidfire Ready","enabled":true,"id":93,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"You are again ready to dualshoot.","actions":[{"action":"script","script":"MSys.rapidfire = false"}],"items":[]},{"type":"trigger","name":"Stim Used","enabled":true,"id":95,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"You jam a stim into your vein and healing nanites surge through your body.","actions":[{"action":"script","script":"MSys.healReady = false"}],"items":[]},{"type":"trigger","name":"Stim Ready","enabled":true,"id":96,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"You can again use a stim.","actions":[{"action":"script","script":"MSys.healReady = true\nMSys.alert('stim ready', 'white', 'green')"}],"items":[]},{"type":"trigger","name":"Queue Attack Scoundrel","enabled":false,"id":94,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^Drawing your shoulder back, you fling a handful.*$|^.*kicks in your grip and an explosive noise cracks.*$|^.*you quickly fire off two shots at.*$|^You jam a stim into your vein and healing nanites surge through your body.$","actions":[{"action":"script","script":"if (MSys.auto === true) {\n\tMSys.huntingAttack()\n}"}],"items":[]},{"type":"trigger","name":"Spin if empty and no target","enabled":true,"id":98,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"There is nothing and nobody here of that name - find a different target for your bomb.","actions":[{"action":"script","script":"if (MSys.bullets == 0) {\n\tsend_command('gun spin')\n}"}],"items":[]},{"type":"alias","name":"Construct Ripper - rip","enabled":true,"id":97,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"command","command":"ied construct ripper","prefix_suffix":true}],"text":"rip","items":[]},{"type":"alias","name":"Ambush Toggle - hambush","enabled":true,"id":99,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"if (get_variable('useAmbush')) {\n\tset_variable('useAmbush', false)\n    MSys.useAmbush = false\n    MSys.log('AMBUSH OFF', 'white')\n} else {\n\tset_variable('useAmbush', true)\n    MSys.useAmbush = true\n    MSys.log('AMBUSH ON', 'white')\n}"}],"text":"hambush","items":[]},{"type":"alias","name":"Rapidfire Toggle - hrapidfire ","enabled":true,"id":100,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"if (get_variable('useRapidfire')) {\n\tset_variable('useRapidfire', false)\n    MSys.useRapidfire = false\n    MSys.log('RAPIDFIRE OFF', 'white')\n} else {\n\tset_variable('useRapidfire', true)\n    MSys.useRapidfire = true\n    MSys.log('RAPIDFIRE ON', 'white')\n}"}],"text":"hrapidfire","items":[]},{"type":"alias","name":"Scoundrel Abilities - hscoundrel","enabled":true,"id":101,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"var abilities = ''\nabilities += 'Ambush: ' + get_variable('useAmbush') + '\\n'\nabilities += 'Rapidfire: ' + get_variable('useRapidfire') + '\\n'\nabilities += 'Heal: ' + get_variable('useHeal') + '\\n'\nabilities += 'Bullets: ' + MSys.bullets + '\\n'\n\nMSys.log(abilities, 'white')"}],"text":"hscoundrel","items":[]}],"actions":[]},{"type":"group","name":"BEAST","enabled":false,"id":102,"items":[{"type":"trigger","name":"Backhand Used","enabled":true,"id":103,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"You overdrive your suit's movement circuits, delivering a vicious backhanded blow.*","actions":[{"action":"script","script":"MSys.backhand = true"}],"items":[]},{"type":"trigger","name":"Support Used","enabled":true,"id":107,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^You activate your suit's emergency life support system.*$","actions":[{"action":"script","script":"MSys.healReady = false"}],"items":[]},{"type":"trigger","name":"Support Ready","enabled":true,"id":108,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"Your HUD indicates that you may use your life support system once again.","actions":[{"action":"script","script":"MSys.healReady = true\nMSys.alert('support ready', 'white', 'green')"}],"items":[]},{"type":"trigger","name":"Queue Attack BEAST","enabled":false,"id":106,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^You overdrive your suit's movement circuits.*$|^With servo-assisted might, you drive your wristblade.*$|^You activate your suit's emergency life support system.*$","actions":[{"action":"script","script":"if (MSys.auto === true) {\n\tMSys.huntingAttack()\n}"}],"items":[]},{"type":"alias","name":"Suit Contingency","enabled":true,"id":104,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"command","command":"suit contingency","prefix_suffix":true}],"text":"con","items":[]},{"type":"alias","name":"Overclock","enabled":true,"id":105,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"command","command":"suit overclock","prefix_suffix":true}],"text":"oc","items":[]},{"type":"alias","name":"","enabled":true,"id":110,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"var abilities = ''\nabilities += 'Heal: ' + get_variable('useHeal') + '\\n'\n\nMSys.log(abilities, 'white')"}],"text":"hbeast","items":[]}],"actions":[]},{"type":"group","name":"Engineer","enabled":false,"id":109,"items":[{"type":"trigger","name":"Stimjector Used","enabled":true,"id":111,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"You activate your stimjector, feeling a rush of vitality as it releases healing nanites into your bloodstream.","actions":[{"action":"script","script":"MSys.healReady = false"}],"items":[]},{"type":"trigger","name":"Stimjector Ready","enabled":true,"id":112,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"You can again use a stimjector.","actions":[{"action":"script","script":"MSys.healReady = true\nMSys.alert('stimjector ready', 'white', 'green')"}],"items":[]},{"type":"trigger","name":"Queue Attack Engineer","enabled":false,"id":114,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^A crane-armed carrybot claws .* shredding .* skin.$|^You activate your stimjector, feeling a rush of vitality as it releases healing nanites into your bloodstream.$","actions":[{"action":"script","script":"if (MSys.auto === true) {\n\tMSys.huntingAttack()\n}"}],"items":[]},{"type":"alias","name":"","enabled":true,"id":113,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"var abilities = ''\nabilities += 'Heal: ' + get_variable('useHeal') + '\\n'\n\nMSys.log(abilities, 'white')"}],"text":"hengineer","items":[]}],"actions":[]},{"type":"group","name":"Combat","enabled":true,"id":64,"items":[{"type":"group","name":"Chat","enabled":true,"id":65,"items":[{"type":"alias","name":"Target call - tt <name>","enabled":true,"id":67,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"MSys.target = args[1]\nset_variable('tar', args[1])\nsend_command('st ' + args[1])\nsend_command('crt Target: ' + args[1])"}],"text":"tt (.+)","items":[]}],"actions":[]}],"actions":[]}],"description":"Exported reflexes: MSys"}