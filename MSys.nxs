{"type":"group","name":"msys","enabled":true,"id":1,"items":[{"type":"function","name":"onLoad","enabled":true,"id":2,"code":"// Place any code here you'd like to autorun when the system is loaded\n// Changelog\n// 20190109--------: Add interrupt support for fury\n// 20190109--------: Cancel inferno if mob enters, fix inferno casting, add some QOL station transfer triggers\n// 20190106T0128EST: Added 'wakeup' command to onLoad to run personal defense ability setups\n// 20190106T0128EST: Modified hunting attack for Fury to exit if target is missing, but after suffuse and bladeshape buffs\n// 20190106T0128EST: Removed suffuse from queue attack trigger\n// 20190106T0128EST: Added queue attack to \"Heal Used\" trigger if auto is set to ensure attack occurs after variables being set\n// 20190106T0128EST: Added queue attack after \"Heal Ready\" to provide heal outside of combat\n// 20190106T0153EST: Removed empty target check from slain trigger to avoid incidentally disabled reflexes resulting in combat script being stuck\n// 20190106T0631EST: Changed launch banner, inverted colors, changed to Mindsim combat implant, and manually padded dashes\n// 20190106T0631EST: Modified heal ready highlight\n// 20190107T0550EST: Added reflexOn logic to healing triggers\n// 20190107T----EST: Added engineer configurations\n// 20190107T----EST: Set up engineer burrowbot functions\n// 20190107T----EST: Added utility scripts to build and deploy turrets\n// 20190107T----EST: Yes I know using waits suck, blow me. It's not an active combat feature\n// 20190107T----EST: Added engineer repeat attacks\n// 20190107T----EST: Incorporated recurring airdrops to fully refill parts\n// 20190109T1708EST: Rebranded as Starwraith Combat Package\n// 20190111T1419SAST: Added Oga-specific switches.\n\n//send_command('wakeup')\nMSys = {\n//System Variables\n    goal: 'kith',\n    matchList: get_variable('matchList'),\n    systemEnabled: true,\n    offenseEnabled: false,\n    break: get_variable('break'),\n    itemsInRoom: [],\n    damageThisFight: 0,\n    ttk: 0,\n    targetHealth: 0,\n    interrupt: false,\n//Character    \n    attack: 'swarm ',\n    class: '',\n    health: 0,\n    maxHealth: 0,\n    useHeal: get_variable('useHeal'),\n    healReady: true,\n//Nano\n    multistrike: false,\n    frenzy: false,\n    freeze: false,\n    delaySwarm: false,\n    pointZero: false,\n    speedUp: false,\n    empyreal: '',\n    useDelay: get_variable('useDelay'),\n    useMultistrike: get_variable('useMultistrike'),\n    useFrenzy: get_variable('useFrenzy'),\n    usePointZero: get_variable('usePointZero'),\n    useSpeedUp: get_variable('useSpeedUp'),\n    useFreeze: get_variable('useFreeze'),\n//Fury\n    stance: '',\n    bladeshape: false,\n    rage: 0,\n    maxRage: 0,\n    unstoppable: false,\n    berserk: false,\n    useBerserk: get_variable('useBerserk'),\n    fever: false,\n    useFever: get_variable('useFever'),\n    hypertension: false,\n    infernoCharging: false,\n//Scoundrel\n    bullets: 0,\n    ambush: false,\n    useAmbush: get_variable('useAmbush'),\n    rapidfire: false,\n    useRapidfire: get_variable('useRapidfire'),\n//B.E.A.S.T.\n    backhand: false,\n//Engineer\n    parts: 0,\n    repeat: true,\n    wormDeployed: false,\n    \n//Functions\n    log: function (x, fgcolor, bgcolor) {\n        let type = typeof x\n        switch(type) {\n          case 'number':\n          case 'string':\n          case 'boolean':\n            display_notice(x.toString(), fgcolor, bgcolor)\n            break;\n          case 'object':\n            for (var prop in x) {\n              display_notice(`${prop}: ${x[prop]}`, fgcolor, bgcolor)\n            }\n            break;\n          case 'undefined':\n            display_notice('undefined', fgcolor, bgcolor)\n            break;\n          default:\n            display_notice('wtf is this')\n        }\n    },\n    alert: function (text, fgcolor, bgcolor) {\n    \ttext = text.toUpperCase()\n        let fullText = '-'.repeat(text.length+1) + '-------\\n--  '+ text + '  --\\n-------' + '-'.repeat(text.length+1)\n        \n        display_notice(fullText, fgcolor, bgcolor)\n    },\n    findTarget: function() {\n        var itemList = this.itemsInRoom\n        var killList = get_variable('killList')\n        var targetFound = false\n\t\t\n        //Match room order\n        if (!this.matchList) {\n            for (i=0; i<itemList.length; i++) {\n                for (x=0; x<killList.length; x++) {\n                    if (itemList[i].name.includes(killList[x]) && itemList[i].attrib === 'm' && targetFound === false) {\n                        set_variable('tar', itemList[i].id)\n                        send_command('settarget ' + itemList[i].id)\n                        targetFound = true\n                        display_notice('New target: '+itemList[i].name, 'red', 'black')\n                    }\n                }\n            }\n        } else { //Match priority/list order\n            for (i=0; i<killList.length; i++) {\n                for (x=0; x<itemList.length; x++) {\n                    if (itemList[x].name.includes(killList[i]) && itemList[x].attrib === 'm' && targetFound === false) {\n                        set_variable('tar', itemList[x].id)\n                        send_command('settarget ' + itemList[x].id)\n                        targetFound = true\n                        display_notice('New target: '+itemList[x].name, 'red', 'black')\n                    }\n                }\n            }\n        }\n\n        if (!targetFound) {\n            //display_notice('No Target Found', 'red', 'black')\n            set_variable('tar', '')\n        }\n    },\n    huntingAttack: function() {\n        \n        if (!this.systemEnabled) {return}\n        \n        //Nano\n        if (this.class == 'Nanoseer') {\n            this.log('nano hunt')\n            if (!this.frenzy && !this.freeze && this.useFrenzy) {\n                send_command('frenzy')  \n            }else if (!this.delaySwarm && this.useDelay) {\n                send_command('delay swarm ' + get_variable('tar'))\n            }else if (!this.multistrike && !this.freeze && this.targetHealth > 40 && this.useMultistrike) {\n                send_command('multistrike ' + get_variable('tar'))\n            }else if (!this.freeze && this.useFreeze && this.targetHealth > 20 ) {\n                send_command('freeze ' + get_variable('tar'))\n            }else {\n                send_command(this.attack + get_variable('tar'))\n            }\n            \n        //Fury\n        } else if (this.class == 'Fury') {\n        \tvar command = 'combo '\n            \n            if (this.interrupt && this.offenseEnabled) {\n                send_command('kith fever ' + get_variable('tar'))\n                return;\n            }\n            \n            if (this.health / this.maxHealth < .8 && this.healReady  && this.useHeal) {\n            \tsend_command('kith suffuse')\n                return;\n            }else if (!this.bladeshape && get_variable('kithbladeshape') !== undefined && get_variable('kithbladeshape') !== '') {\n                send_command(get_variable('kithbladeshape'))\n                return;\n            }else if (get_variable('tar') == '' || this.offenseEnabled == false) {\n                return;\n            }else if (MSys.first_name != 'Oga' && !this.fever && this.useFever) {\n                command = 'kith fever ';\n            }else if (this.goal == 'hunt1') {\n                //Battleflow attack\n                if (this.stance == 'Symmetry') {\n                    command += 'swiftcut '\n                } else if (this.stance == 'Flare') {\n                    command += 'wound '\n                } else if (this.stance == 'Eruption') {\n                    if (this.hypertension) {\n                        command += 'bloodburn '\n                    } else {\n                    \tcommand += 'hypertension '\n                    }\n                } else if (this.stance == 'Ember') {\n                    command += 'legspike '\n                }\n\n                //Rage Attack\n                if (this.unstoppable) {\n                    command += 'slice '\n                } else if (this.stance == 'Symmetry') {\n                    if (this.rage / this.maxRage > .13 && !this.berserk && this.useBerserk) {\n                    \tcommand += 'berserk '\n                    } else {\n                    \tcommand += 'flyinglash '\n                    }\n                } else if (this.stance == 'Flare') {\n                    command += 'rend '\n                } else if (this.stance == 'Eruption') {\n                    if (this.health / this.maxHealth < .7) {\n                        command += 'resistant '\n                    } else {\n                        command += 'upperlash '\n                    }\n                } else if (this.stance == 'Ember') {\n                    if (this.rage / this.maxRage > .73  && this.unstoppable == false) {\n                        command += 'unstoppable '\n                    } else {\n                        command += 'strike '\n                    }\n                }\n            }else if (this.goal == 'hunt2' && MSys.first_name != 'Oga') {\n            \t//Battleflow attack\n                if (this.stance == 'Symmetry') {\n                    command += 'swiftcut '\n                } else if (this.stance == 'Flare') {\n                    command += 'wound '\n                } else if (this.stance == 'Eruption') {\n                    command += 'rupture '\n                }\n\n                //Rage Attack\n                if (this.unstoppable) {\n                    command += 'slice '\n                } else if (this.stance == 'Symmetry') {\n                    if (this.rage / this.maxRage > .13 && !this.berserk && this.useBerserk) {\n                    \tcommand += 'berserk '\n                    } else {\n                    \tcommand += 'flyinglash '\n                    }\n                } else if (this.stance == 'Flare') {\n                    command += 'rend '\n                } else if (this.stance == 'Eruption') {\n                    if (this.rage / this.maxRage > .73  && this.unstoppable == false) {\n                        command += 'unstoppable '\n                    } else {\n                        command += 'strike '\n                    }\n                }\n            }else if (MSys.first_name == 'Oga') {\n                var next = ''\n                command = 'combo '\n                \n                //Battleflow attack\n                if (this.stance == 'Symmetry') {\n                    command += 'gutrend '\n                    next = 'Ember'\n                } else if (this.stance == 'Ember') {\n                    command += 'legspike '\n                    next = 'Symmetry'\n                } else if (this.stance == 'Flare') {\n                    command += 'sear '\n                    next = 'Symmetry'\n                }\n\n                //Rage Attack\n                if (this.unstoppable) {\n                    command += 'slice '\n                } else if (next == 'Symmetry') {\n                    if (this.rage / this.maxRage > .8  && this.unstoppable == false) {\n                        command += 'unstoppable '\n                    } else {\n                        command += 'deflect '\n                    }\n                } else if (next == 'Ember') {\n                    command += 'resistant '\n                } else if (next == 'Flare') {\n                    command += 'reel '\n                }\n            }\n            \n            command += get_variable('tar')\n            send_command(command)\n            \n        //Scoundrel    \n        }else if (this.class == 'Scoundrel') {\n            var command = ''\n            \n            if (this.health / this.maxHealth < .8 && this.healReady && this.useHeal) {\n            \tsend_command('stim')\n            } else if (this.offenseEnabled == false || get_variable('tar') == '') {\n                return\n            } else if (this.bullets == 0) {\n            \tcommand += 'ied fling ripper at '\n            } else if (this.bullets == 1) {\n                command += 'gun crackshot '\n            } else if (!this.ambush && this.useAmbush && this.bullets) {\n                command += 'gun ambush '\n            } else if (!this.rapidfire && this.useRapidfire) {\n                command += 'gun rapidfire '\n            } else {\n                command += 'gun crackshot '\n            }\n            \n            command += get_variable('tar')\n            send_command(command)\n        \n        }else if (this.class == 'B.E.A.S.T.'){\n            if (this.health / this.maxHealth < .8 && this.healReady && this.useHeal) {\n            \tsend_command('suit support')\n            }else if (!this.backhand) {\n                send_command('suit backhand ' + get_variable('tar'))\n            }else {\n                send_command('mwp wristblade ' + get_variable('tar'))\n            }\n            \n        //Engineer\n        }else if (this.class == 'Engineer'){\n            if (this.health / this.maxHealth < .8 && this.healReady && this.useHeal) {\n                if (get_variable('debug')) {\n                    MSys.log('Activating stimjector',  'white')\n                }\n                \n            \tsend_command('operate stimjector')\n                \n            }else if (get_variable('tar') == '' || this.offenseEnabled == false) {\n                return;\n                \n            }else if (!this.repeat && get_variable('useRepeat') && get_variable('repeatAttack') != '') {\n                if (get_variable('debug')) {\n                    MSys.log('Initiating repeat',  'white')\n                    MSys.log('Attempting command: ' + ('bot repeat ' + get_variable('repeatAttack') + ' ' + get_variable('tar')), 'white')\n                }\n                \n                send_command('bot repeat ' + get_variable('engineerRepeatAttack') + ' ' + get_variable('tar'))\n                \n            } else if (get_variable('useWorm') && this.targetHealth > 0.7 && !this.wormDeployed) {\n                if (get_variable('debug')) {\n                    MSys.log('Executing burrowbot worm attack',  'white')\n                }\n                \n                send_command('bot worm ' + get_variable('tar'))\n            \n            } else if (get_variable('useRelease') && this.wormDeployed && this.targetHealth < 0.3) {\n                if (get_variable('debug')) {\n                    MSys.log('Releasing burrowbot',  'white')\n                }\n                \n                send_command('bot release')\n                \n            }\n            else {\n                if (get_variable('debug')) {\n                    MSys.log('Executing default engineer attack',  'white')\n                }\n                \n                send_command('bot claw ' + get_variable('tar'))\n            }\n        }\n    },\n    disableGroup: function(name) {\n        var group = reflex_find_by_name('group', name, false, false, 'MSys')\n        reflex_disable(group)\n    },\n    enableGroup: function(name) {\n        var group = reflex_find_by_name('group', name, false, false, 'MSys')\n        reflex_enable(group)\n    }\n}\n\n//Send MSys to browser log for debugging\nconsole.log(MSys)\n\nMSys.alert('Starwraith Combat Package Loaded. Good hunting.', 'gold')","items":[]},{"type":"function","name":"onGMCP","enabled":true,"id":3,"code":"// Place any code here you'd like to run when a GMCP message is received\n// - The GMCP message is received as \"args.gmcp_method\" and \"args.gmcp_args\"\n\nGMCP[args.gmcp_method] = args.gmcp_args\n\n/* ------------------------------------------ CHARACTER STUFF ----------------------------------- */\n\n// Seen when doing score\nif (args.gmcp_method == \"Char.Status\" && args.gmcp_args.first_name) {\n    MSys.first_name = args.gmcp_args.first_name;\n}\n\nif (args.gmcp_method == \"Char.Vitals\") {\n\n    // Track health changes\n    var change = MSys.health - args.gmcp_args.hp;\n   \n    if (change > 0) {\n    \tMSys.log('Damage taken: ' + change, 'yellow')\n    } else if (change < 0) {\n        MSys.log('Damage healed: ' + Math.abs(change), '#6bdaee')\n    }\n    \n    MSys.health = args.gmcp_args.hp\n    MSys.maxHealth = args.gmcp_args.maxhp\n\n    // Check class\n    if (!MSys.class || MSys.class !== args.gmcp_args.class) {\n        MSys.class = args.gmcp_args.class\n        \n        MSys.disableGroup('Fury')\n        MSys.disableGroup('Nanoseer')\n        MSys.disableGroup('Scoundrel')\n        MSys.disableGroup('B.E.A.S.T.')\n        MSys.disableGroup('Engineer')\n        \n        MSys.enableGroup(MSys.class)\n    }\n \n    if (MSys.class === 'Fury') {\n        MSys.stance = args.gmcp_args.st\n        MSys.rage = args.gmcp_args.rg\n        MSys.maxRage = args.gmcp_args.maxrg\n    } else if (MSys.class === 'Scoundrel') {\n        MSys.bullets = args.gmcp_args.bl\n    } else if (MSys.class == 'Engineer') {\n        MSys.parts = args.gmcp_args.pt\n    }\n}\n\n/* ----------------------------------- DEFENCES AND BUFFS --------------------------------------- */\n\nif (args.gmcp_method == 'Char.Defences.Add') {\n    \n    //Fury\n    if (args.gmcp_args.name == 'Oblivion: Conqueror')  {\n        MSys.empyreal = 'Conqueror'\n    } else if (args.gmcp_args.name == 'Oblivion: Traveller')  {\n        MSys.empyreal = 'Traveller'\n    } else if (args.gmcp_args.name == 'Oblivion: Architect')  {\n        MSys.empyreal = 'Architect'\n    } else if (args.gmcp_args.name == 'Oblivion: Progenitor') {\n        MSys.empyreal = 'Progenitor'\n    } else if (args.gmcp_args.name == 'Oblivion: Sunderer')   {\n        MSys.empyreal = 'Sunderer'\n    }\n}\n\n/* -------------------------------------------- ITEMS IN ROOM ----------------------------------- */\n\n//Get Items In Room\nif (args.gmcp_method == \"Char.Items.List\") {\n    MSys.itemsInRoom = args.gmcp_args['items']\n}\n\n//Remove items when items leave\nif (args.gmcp_method == \"Char.Items.Remove\") {\n    let itemLeaving = args.gmcp_args['item']\n    \n    //Find index of item\n    MSys.itemsInRoom = MSys.itemsInRoom.filter(item => item.id !== itemLeaving.id);\n    \n}\n\n//Add items when items enter\nif (args.gmcp_method == \"Char.Items.Add\") {\n    let itemJoining = args.gmcp_args['item']\n    \n    //Find index of item\n    MSys.itemsInRoom.push(itemJoining);\n    \n    if (MSys.systemEnabled === true) {\n    \tif (!get_variable('tar')) {\n        \tMSys.findTarget()\n        }\n    }\n    \n    if (MSys.infernoCharging && itemJoining.attrib === 'm') {\n    \tsend_command('asdf')\n        MSys.infernoCharging = false\n        MSys.alert('mob entered - inferno cancelled', 'white', 'red')\n    }\n}\n\n/* -------------------------------------------- PLAYERS IN ROOM ----------------------------------- */\nif (args.gmcp_method == \"Room.Players\") {\n    MSys.playersInRoom = args.gmcp_args\n}\n\n/* --------------------------------------------- HELPERS --------------------------------- */\nif (args.gmcp_method == \"Room.Info\") {\n    if (MSys.systemEnabled === true) {\n        MSys.findTarget()\n    }\n}\n\nif (args.gmcp_method == \"IRE.Target.Info\") {\n\tMSys.targetHealth = args.gmcp_args['hpperc'].slice(0, -1)\n}\n\n//This is broken\nif (args.gmcp_method == \"IRE.CombatMessage\") {\n\tif (args.gmcp_args['target'] == 'montem') {\n    \tMSys.alert('you are being attacked by ' + args.gmcp_args['caster'] , 'yellow', 'red')\n    }\n}\n\n/* --------------------------------------------- CLASS HELPERS --------------------------------- */","items":[]},{"type":"group","name":"Auto Hunt","enabled":true,"id":8,"items":[{"type":"group","name":"Setup","enabled":true,"id":41,"items":[{"type":"alias","name":"Combat Implant Setup - hsetup","enabled":true,"id":25,"matching":"begins","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"MSys.log('-- Hunting List Setup.  Use \\'hsave\\' to keep a backup.  \\'hload\\' will load your backup.', 'white', 'black')\nMSys.log('-- Use \\'hadd\\' <name> to add to the list and \\'hremove\\' <name> to remove items from this list. \\'hshow\\' will show the items on your list.', 'white', 'black')\nMSys.log('-- Use \\'hattack\\' <attackName> to make it your primary attack that will be auto used.', 'white')\nMSys.log('-- Use \\'hlist\\' to switch between room and priority list. Use \\'hup\\' or \\'hdown\\' <name> to increase or decrease an item on the priority list.', 'white')\nMSys.log('-- Make sure you use \\'config usequeueing on\\'.  Then you can use other attacks to overwrite auto attacks.', 'white')\n\nif (get_variable('killList')       == undefined) {set_variable('killList', ['rockhopper'])}\nif (get_variable('debug')          == undefined) {set_variable('debug', false)}\nif (get_variable('matchList')      == undefined) {set_variable('matchList', true)}\nif (get_variable('break')          == undefined) {set_variable('break', true)}\nif (get_variable('useHeal')        == undefined) {set_variable('useHeal', true)}\nif (get_variable('useFreeze')      == undefined) {set_variable('useFreeze', false)}\nif (get_variable('useMultistrike') == undefined) {set_variable('useMultistrike', false)}\nif (get_variable('useFrenzy')      == undefined) {set_variable('useFrenzy', false)}\nif (get_variable('useDelay')       == undefined) {set_variable('useDelay', false)}\nif (get_variable('useBerserk')     == undefined) {set_variable('useBerserk', false)}\nif (get_variable('useFever')       == undefined) {set_variable('useFever', false)}\nif (get_variable('useAmbush')      == undefined) {set_variable('useAmbush', false)}\nif (get_variable('useRapidfire')   == undefined) {set_variable('useRapidfire', false)}"}],"text":"hsetup","items":[]},{"type":"alias","name":"System Reset","enabled":true,"id":126,"matching":"regexp","whole_words":false,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"MSys.log('-- Combat Implant has been reset to factory settings.', 'white', 'black')\nMSys.log('-- If you have previously backed up your kill list you may use \\'hload\\' to reload it', 'white', 'black')\n\nset_variable('killList', ['rockhopper'])\nset_variable('debug', false)\nset_variable('useFreeze', false)\nset_variable('useMultistrike', false)\nset_variable('useFrenzy', false)\nset_variable('useDelay', false)\nset_variable('useBerserk', false)\nset_variable('useFever', false)\nset_variable('useAmbush', false)\nset_variable('useRapidfire', false)\nset_variable('useHeal', true)\nset_variable('matchList', true)\nset_variable('break', true)"}],"text":"^hreset$","items":[]},{"type":"alias","name":"Change Auto Attack","enabled":false,"id":26,"matching":"regexp","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"MSys.attack = args[1] + ' '\nset_variable('huntingAttack', args[1] + ' ')\ndisplay_notice('Attack set to: ' + args[1], 'white', 'black')"}],"text":"hattack (.+)","items":[]},{"type":"alias","name":"Enable/Disable List Mode - hlist","enabled":true,"id":56,"matching":"begins","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"if (get_variable('matchList')) {\n    MSys.matchList = false\n    set_variable('matchList', false)\n    MSys.log('Will match room listing', 'white')\n} else {\n\tMSys.matchList = true\n    set_variable('matchList', true)\n    MSys.log('Will match priority listing', 'white')\n}"}],"text":"hlist","items":[]},{"type":"alias","name":"Enable/Disable Break After Kill Mode - hbreak","enabled":true,"id":82,"matching":"begins","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"if (get_variable('break')) {\n    MSys.break = false\n    set_variable('break', false)\n    MSys.log('Will continue after kill.', 'white')\n} else {\n\tMSys.break = true\n    set_variable('break', true)\n    MSys.log('Will break after kill.', 'white')\n}"}],"text":"hbreak","items":[]}],"actions":[]},{"type":"trigger","name":"Slain","enabled":true,"id":5,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^(You) have slain a.*$|^.*has been slain by (.+)\\.$","actions":[{"action":"script","script":"MSys.freeze = false\nMSys.frenzy = false\nMSys.delaySwarm = false\nMSys.fever = false\nMSys.hypertension = false\nMSys.ambush = false\nMSys.backhand = false\n\nvar a = new Audio('https://freesound.org/people/adcbicycle/sounds/13934/download/13934__adcbicycle__6.wav')\n//a.play()\n\nvar autoList = ['You', 'Chronoxi Starwraith', 'Feraluna Starwraith', 'Mee', 'Casimar', 'Albion']\nvar onList = ''\n\nif (args[1]) {\n\tonList = autoList.includes(args[1])\n} else {\n\tonList = autoList.includes(args[2])\n}\n\nif (MSys.systemEnabled === true && onList) {\n    MSys.targetHealth = 0\n\tMSys.findTarget()\n    if (MSys.class == 'Engineer' && get_variable('useQPCBoost')) {\n        send_command('qpcboost')\n    }\n    if (!MSys.break) {\n\t\tMSys.huntingAttack()\n    } else {\n    \tMSys.offenseEnabled = false\n    }\n}\n\nvar slainMessage = ''\nvar now = new Date()\nif (MSys.damageThisFight > 0 && MSys.ttk > 0){\n\tslainMessage = MSys.damageThisFight + ' damage done this fight. | TTK: ' + (now.getTime() - MSys.ttk)/1000 + 's | DPS: ' + Math.round(MSys.damageThisFight / ((now.getTime() - MSys.ttk)/1000))\n} else if (MSys.damageThisFight > 0) {\n\tslainMessage = MSys.damageThisFight + ' damage done this fight.'\n} else if (MSys.ttk > 0) {\n\tslainMessage = 'TTK: ' + (now.getTime() - MSys.ttk)/1000 + 's'\n}\n\nif (MSys.damageThisFight > 0 || MSys.ttk > 0){\n    MSys.alert(slainMessage, 'lightgreen', 'darkblue')\n}\n\nMSys.ttk = 0\nMSys.damageThisFight = 0\nMSys.interrupt = false"}],"items":[]},{"type":"trigger","name":"Crash - AUTO OFF","enabled":true,"id":18,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^You prepare to crash out of the room.*$","actions":[{"action":"script","script":"MSys.systemEnabled = false\ndisplay_notice('AUTO OFF', 'white', 'black')"}],"items":[]},{"type":"keybind","name":"","enabled":true,"id":10,"key":96,"actions":[{"action":"script","script":"if (get_variable('debug') == true) {MSys.log('I am attacking ' + get_variable('tar'), 'white')}\nMSys.systemEnabled = true\nMSys.offenseEnabled = true\n\nvar dt = new Date()\nMSys.ttk = dt.getTime()\n\nMSys.huntingAttack()"}],"key_alt":false,"key_ctrl":false,"key_shift":false,"items":[]},{"type":"keybind","name":"","enabled":true,"id":32,"key":111,"actions":[{"action":"script","script":"if (MSys.systemEnabled === true) {\n  MSys.systemEnabled = false\n  display_notice(\"Combat implant disabled\", 'white', 'black')\n} else {\n  MSys.systemEnabled = true\n  display_notice(\"Combat implant enabled\", 'white', 'black')\n}"}],"key_alt":false,"key_ctrl":false,"key_shift":false,"items":[]},{"type":"alias","name":"Heal","enabled":true,"id":115,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"if (MSys.class == 'Nanoseer') {\n  send_command('NANO REPAIR')\n} else if (MSys.class == 'Fury') {\n  send_command('KITH SUFFUSE')\n} else if (MSys.class == 'Scoundrel') {\n  send_command('STIM')\n} else if (MSys.class == 'B.E.A.S.T.') {\n  send_command('suit support')\n} else if (MSys.class == 'Engineer') {\n  send_command('operate stimjector')\n}"}],"text":"h","items":[]},{"type":"alias","name":"Add to hunting list - hadd <mob>","enabled":true,"id":13,"matching":"regexp","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"display_notice('Adding: ' + args[1] + ' to list', 'white', 'black')\nlet newList = get_variable('killList')\nnewList.push(args[1])\nset_variable('killList', newList)"}],"text":"hadd (.+)","items":[]},{"type":"alias","name":"Remove from hunting list - hremove <mob>","enabled":true,"id":14,"matching":"regexp","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"display_notice('Removing: ' + args[1] + ' from list', 'white', 'black')\n\nlet newList = get_variable('killList')\nnewList = newList.filter(item => item !== args[1]);\n\nset_variable('killList', newList)"}],"text":"hremove (.+)","items":[]},{"type":"alias","name":"Save Hunting List To Backup - hsave","enabled":true,"id":15,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"let newSave = get_variable('killList')\nset_variable('killListBackup', newSave)\ndisplay_notice('Hunt List Saved', 'white', 'black')\n"}],"text":"hsave","items":[]},{"type":"alias","name":"Load Hunting List From Backup - hload","enabled":true,"id":16,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"let backupList = get_variable('killListBackup')\nset_variable('killList', backupList)\ndisplay_notice('Hunt List Loaded from Backup', 'white', 'black')"}],"text":"hload","items":[]},{"type":"alias","name":"Show Hunting Targets - hshow","enabled":true,"id":17,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"let killList = get_variable('killList')\nfor (i=0; i<killList.length; i++) {\n\tdisplay_notice(killList[i], 'white', 'black')\n}"}],"text":"hshow","items":[]},{"type":"alias","name":"Item Priority - hup/hdown <mob>","enabled":true,"id":52,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"var list = get_variable('killList')\nvar nameIndex = list.indexOf(args[2])\nvar name = list[nameIndex]\n\nif (list[nameIndex-1] && nameIndex && args[1] === 'hup') {\n\tlist[nameIndex] = list[nameIndex - 1]\n    list[nameIndex-1] = name\n} else if (list[nameIndex+1] && nameIndex && args[1] === 'hdown') {\n    list[nameIndex] = list[nameIndex + 1]\n    list[nameIndex+1] = name\n}\n\nset_variable('killList', list)\n\nfor (i=0; i<list.length; i++) {\n\tif(list[i] === name){\n    \tdisplay_notice(list[i], 'gold', 'black')\n    } else {\n    \tdisplay_notice(list[i])\n    }\n}"}],"text":"^(hup|hdown) (.+)$","items":[]},{"type":"alias","name":"Heal Toggle - hheal","enabled":true,"id":81,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"if (get_variable('useHeal')) {\n\tset_variable('useHeal', false)\n    MSys.useHeal = false\n    MSys.log('HEAL OFF', 'white')\n} else {\n\tset_variable('useHeal', true)\n    MSys.useHeal = true\n    MSys.log('HEAL ON', 'white')\n}"}],"text":"hheal","items":[]},{"type":"alias","name":"Kill","enabled":true,"id":120,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"if (get_variable('debug') == true) {MSys.log('I am attacking ' + get_variable('tar'), 'white')}\nMSys.systemEnabled = true\nMSys.offenseEnabled = true\n\nvar dt = new Date()\nMSys.ttk = dt.getTime()\n\nMSys.huntingAttack()"}],"text":"k","items":[]}],"actions":[]},{"type":"group","name":"Generic","enabled":true,"id":4,"items":[{"type":"group","name":"Interrupts","enabled":true,"id":147,"items":[{"type":"trigger","name":"Super - Interrupt","enabled":true,"id":148,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^Throwing back its grizzled head, a sly cania lets out a high-pitched, wavering howl.$|^A sluggish atzaparaki shakes off some of its torpor and draws in a deep breath, its sides beginning to swell alarmingly.$|^Light begins to focus deep within the body of a salt-crusted quartz creeper, growing to an almost painful radiance.$","actions":[{"action":"script","script":"MSys.interrupt = true\n\nMSys.alert('interrupting super', 'white', 'blue')\nMSys.huntingAttack()\n"}],"items":[]}],"actions":[]},{"type":"group","name":"Travel","enabled":true,"id":149,"items":[{"type":"trigger","name":"Battlemaster Engineer Return","enabled":true,"id":125,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"A tripod-mounted wormhole generator has been set up in the center of the cracked landing pad.","actions":[{"action":"linkify","linkify":"match","linkify_backref":"1","linkify_text_type":"capture","linkify_text":"","linkify_command_type":"value","linkify_command":"turn tripod&push tripod","linkify_color":"#26aa95"}],"items":[]},{"type":"trigger","name":"Battlemaster Engineer Omni","enabled":true,"id":124,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"A tripod-mounted wormhole generator has been set up in the center of the repair bay.","actions":[{"action":"linkify","linkify":"match","linkify_backref":"1","linkify_text_type":"capture","linkify_text":"","linkify_command_type":"value","linkify_command":"turn tripod&push tripod","linkify_color":"#26aa95"}],"items":[]},{"type":"trigger","name":"Gatewarp Destinations","enabled":true,"id":146,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"There is a voidgate here. GATEWARP DESTINATIONS to start your travel across the cosmos.","actions":[{"action":"command","command":"Gatewarp Destinations"}],"items":[]},{"type":"alias","name":"Takeoff List - tl","enabled":true,"id":119,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"command","command":"Takeoff List","prefix_suffix":true}],"text":"tl","items":[]},{"type":"alias","name":"Station Transfer List - stl","enabled":true,"id":83,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"command","command":"Station Transfer List","prefix_suffix":true}],"text":"stl","items":[]},{"type":"trigger","name":"Station Transfer List","enabled":true,"id":144,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"You can board a transport craft here, check STATION TRANSFER LIST.","actions":[{"action":"command","command":"STATION TRANSFER LIST"}],"items":[]}],"actions":[]},{"type":"trigger","name":"Left battle","enabled":true,"id":6,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"You are no longer in the throes of battle.","actions":[{"action":"highlight","highlight":"match","highlight_backref":"1","highlight_fg":"#9488f6","highlight_bg":"#000000"}],"items":[]},{"type":"trigger","name":"Hide Queue","enabled":false,"id":7,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^\\[Queue\\]: You will attempt to do.*$|^Your swarm is already focused upon a multistrike.*$","actions":[{"action":"gag"}],"items":[]},{"type":"trigger","name":"Add Damage Per Kill","enabled":true,"id":57,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"Damage Dealt: (.+) .+","actions":[{"action":"script","script":"MSys.damageThisFight += parseInt(args[1])"}],"items":[]},{"type":"trigger","name":"Not following","enabled":true,"id":87,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"(.+) is no longer following you.","actions":[{"action":"script","script":"MSys.log(args[1] + ' Stopped Following!', 'darkred')"}],"items":[]},{"type":"alias","name":"Crash + Direction - c<dir>","enabled":true,"id":33,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"send_command('cq')\nsend_command('crash ' + args[1])"}],"text":"c(nw|ne|se|sw|n|s|e|w|u|d|in|out)","items":[]},{"type":"alias","name":"Javascript - js","enabled":true,"id":31,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"MSys.log(eval(args[1]))"}],"text":"^js (.+)$","items":[]}],"actions":[]},{"type":"group","name":"Spaceship","enabled":true,"id":11,"items":[{"type":"alias","name":"Ship Beacon - sb","enabled":true,"id":12,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"command","command":"SHIP BEACON","prefix_suffix":true}],"text":"sb","items":[]},{"type":"alias","name":"Incursion List - il","enabled":true,"id":60,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"command","command":"Incursion List","prefix_suffix":true}],"text":"il","items":[]},{"type":"alias","name":"Incursion Map - im","enabled":true,"id":62,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"command","command":"Incursion Map","prefix_suffix":true}],"text":"im","items":[]},{"type":"alias","name":"Starchart - sc <place>","enabled":true,"id":61,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"send_command('starchart ' + args[1])"}],"text":"^sc (.*)$","items":[]},{"type":"alias","name":"Cargo Recover - cr <dir>","enabled":true,"id":63,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"command","command":"cargo recover @1","prefix_suffix":true}],"text":"^cr (.+)$","items":[]},{"type":"alias","name":"Cosmpiercer map - cpm","enabled":true,"id":51,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"command","command":"Cosmpiercer map","prefix_suffix":true}],"text":"cpm","items":[]},{"type":"alias","name":"Cosmpiecer Liberate - cpl","enabled":true,"id":68,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"command","command":"cosmpiercer liberate","prefix_suffix":true}],"text":"cpl","items":[]},{"type":"alias","name":"Cosmpiercer list - cp","enabled":true,"id":50,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"command","command":"Cosmpiercer list","prefix_suffix":true}],"text":"cp","items":[]}],"actions":[]},{"type":"group","name":"Nanoseer","enabled":true,"id":21,"items":[{"type":"group","name":"Configuration","enabled":true,"id":153,"items":[{"type":"alias","name":"Enable/Disable Freeze","enabled":true,"id":42,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"if (get_variable('useFreeze')) {\n\tset_variable('useFreeze', false)\n    MSys.useFreeze = false\n    MSys.log('FREEZE OFF', 'white')\n} else {\n\tset_variable('useFreeze', true)\n    MSys.useFreeze = true\n    MSys.log('FREEZE ON', 'white')\n}"}],"text":"hfreeze","items":[]},{"type":"alias","name":"Enable/Disable Multistrike","enabled":true,"id":43,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"if (get_variable('useMultistrike')) {\n\tset_variable('useMultistrike', false)\n    MSys.useMultistrike = false\n    MSys.log('MULTISTRIKE OFF', 'white')\n} else {\n\tset_variable('useMultistrike', true)\n    MSys.useMultistrike = true\n    MSys.log('MULTISTRIKE ON', 'white')\n}"}],"text":"hmulti","items":[]},{"type":"alias","name":"Enable/Disable Frenzy","enabled":true,"id":45,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"if (get_variable('useFrenzy')) {\n\tset_variable('useFrenzy', false)\n    MSys.useFrenzy = false\n    MSys.log('FRENZY OFF', 'white')\n} else {\n\tset_variable('useFrenzy', true)\n    MSys.useFrenzy = true\n    MSys.log('FRENZY ON', 'white')\n}"}],"text":"hfrenzy","items":[]},{"type":"alias","name":"Enable/Disable Delay Swarm","enabled":true,"id":55,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"if (get_variable('useDelay')) {\n\tset_variable('useDelay', false)\n    MSys.useDelay = false\n    MSys.log('DELAY OFF', 'white')\n} else {\n\tset_variable('useDelay', true)\n    MSys.useDelay = true\n    MSys.log('DELAY ON', 'white')\n}"}],"text":"hdelay","items":[]},{"type":"alias","name":"Nano Abilities - hnano","enabled":true,"id":90,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"var abilities = ''\nabilities += 'Freeze: ' + get_variable('useFreeze') + '\\n'\nabilities += 'Rage: ' + get_variable('useRage') + '\\n'\nabilities += 'Multistrike: ' + get_variable('useMultistrike') + '\\n'\nabilities += 'DelaySwarm: ' + get_variable('useDelay') + '\\n'\n\nMSys.log(abilities, 'white')"}],"text":"hnano","items":[]}],"actions":[]},{"type":"group","name":"Shortcut","enabled":true,"id":154,"items":[{"type":"alias","name":"Void Soothe","enabled":true,"id":46,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"command","command":"Void Soothe","prefix_suffix":true}],"text":"vs","items":[]},{"type":"alias","name":"Channel/Swap Empyreal","enabled":true,"id":22,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"var empyreal = {\n    a: \"architect\",\n    c: \"conqueror\",\n    p: \"progenitor\",\n    s: \"sunderer\",\n    t: \"traveller\"\n}\n\nvar command = {\n    ch: \"oblivion channel \",\n    sw: \"oblivion swap \"\n}\n\nsend_command(command[args[1]] + empyreal[args[2]])"}],"text":"^(ch|sw)(a|c|p|s|t)$","items":[]},{"type":"alias","name":"Limb drain","enabled":true,"id":53,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"limbs = {\n\tll: 'left leg',\n    rl: 'right leg',\n    ra: 'right arm',\n    la: 'left arm'\n}\n\nsend_command('limbdrain ' + get_variable('tar') + ' ' + limbs[args[1]])"}],"text":"l(ll|rl|la|ra)","items":[]},{"type":"alias","name":"Fly","enabled":true,"id":44,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"command","command":"levitate","prefix_suffix":true}],"text":"fly","items":[]},{"type":"alias","name":"Heal","enabled":true,"id":152,"matching":"exact","whole_words":false,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"command","command":"nano repair","prefix_suffix":false}],"text":"heal"},{"type":"alias","name":"Delay","enabled":true,"id":47,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"var command = {\n\ts: 'swarm'\n}\n\nsend_command('delay ' + command[args[1]])"}],"text":"^d(s)$","items":[]}],"actions":[]},{"type":"group","name":"Ability Activations","enabled":true,"id":161,"items":[{"type":"trigger","name":"Leaving Room","enabled":true,"id":156,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^You walk to the","actions":[{"action":"script","script":"MSys.speedUp = false\nMSys.pointZero = false"}]},{"type":"trigger","name":"Delay Swarm On","enabled":true,"id":54,"matching":"substring","whole_words":true,"case_sensitive":true,"text":"Quickly, you program a delayed swarm attack","actions":[{"action":"script","script":"MSys.delaySwarm = true"}],"items":[]},{"type":"trigger","name":"Freeze on","enabled":true,"id":29,"matching":"substring","whole_words":true,"case_sensitive":true,"text":"You brush your fingertips across","actions":[{"action":"script","script":"MSys.freeze = true"}],"items":[]},{"type":"trigger","name":"Freeze off","enabled":true,"id":30,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^.+has cured the effects of Frozen.$","actions":[{"action":"script","script":"MSys.freeze = false\nif (MSys.systemEnabled === true) {\n\tMSys.huntingAttack()\n}"}],"items":[]},{"type":"trigger","name":"Rage on","enabled":true,"id":39,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^A dark wave of madness rolls through your thoughts.*$|^To draw more of the Conquerer into your thoughts would utterly destroy your mind!$","actions":[{"action":"script","script":"MSys.frenzy = true"}],"items":[]},{"type":"trigger","name":"Rage off","enabled":false,"id":40,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"You break out of your frenzy.","actions":[{"action":"script","script":"MSys.frenzy = false"}],"items":[]},{"type":"trigger","name":"Frenzy Down","enabled":true,"id":38,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"You break out of your frenzy.","actions":[{"action":"script","script":"MSys.alert('Frenzy Down', 'white', 'red')"}],"items":[]},{"type":"trigger","name":"Negation Down","enabled":true,"id":36,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"The shadow of the Progenitor's protection springs to life around you, absorbing the damaging attack before lifting away from you, the air around you growing subtly lighter.","actions":[{"action":"script","script":"MSys.alert('Negation Down', 'white', 'red')"}],"items":[]},{"type":"trigger","name":"Multistrike Active","enabled":true,"id":20,"matching":"substring","whole_words":true,"case_sensitive":true,"text":"You focus intently to direct a portion of your swarm towards","actions":[{"action":"script","script":"MSys.multistrike = true"}],"items":[]},{"type":"trigger","name":"Multistrike Return","enabled":true,"id":19,"matching":"substring","whole_words":true,"case_sensitive":true,"text":"The group of nanites returns back to you.","actions":[{"action":"script","script":"MSys.multistrike = false"}],"items":[]},{"type":"trigger","name":"Speedup Active","enabled":true,"id":157,"matching":"regexp","whole_words":false,"case_sensitive":true,"text":"^You snap your fingers, and time starts flowing faster","actions":[{"action":"script","script":"MSys.speedUp = true"}]},{"type":"trigger","name":"Speedup Inactive","enabled":true,"id":159,"matching":"regexp","whole_words":false,"case_sensitive":true,"text":"^The time distortion effect ends.$","actions":[{"action":"script","script":"MSys.speedUp = false"}]},{"type":"trigger","name":"Point Zero Active","enabled":true,"id":158,"matching":"regexp","whole_words":false,"case_sensitive":true,"text":"^The air crackles and contracts","actions":[{"action":"script","script":"MSys.pointZero = true"}]},{"type":"trigger","name":"Point Zero Inactive","enabled":true,"id":160,"matching":"regexp","whole_words":false,"case_sensitive":true,"text":"^The swirling point zero suddenly collapses","actions":[{"action":"script","script":"MSys.pointZero = false"}]}],"actions":[]},{"type":"alias","name":"Wakeup Nanoseer","enabled":true,"id":155,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"MSys.offenseEnabled = false"},{"action":"command","command":"nano charge","prefix_suffix":true},{"action":"waitfor","text":"^You start generating nanites.$|^You're already repairing your nanites.$","matching":"regexp","whole_words":false,"case_sensitive":false,"expire":"6"},{"action":"command","command":"nano rush on","prefix_suffix":true},{"action":"waitfor","text":"^Inhaling a cloud of your swarm|^Your nanites are already boosting|haven.t learned","matching":"regexp","whole_words":false,"case_sensitive":false,"expire":"6"},{"action":"command","command":"nano protect on","prefix_suffix":true},{"action":"waitfor","text":"^Your goggles flash as you instruct your swarm|^Your nanites are already protecting","matching":"regexp","whole_words":false,"case_sensitive":false,"expire":"6"},{"action":"command","command":"chp","prefix_suffix":true},{"action":"waitfor","text":"^You reach into your connection to the void|^You are already channeling","matching":"regexp","whole_words":false,"case_sensitive":false,"expire":"6"},{"action":"command","command":"oblivion negation","prefix_suffix":true},{"action":"waitfor","text":"^You cannot perform aggressive actions|^Reaching into the void|^You are already prepared","matching":"regexp","whole_words":false,"case_sensitive":false,"expire":"6"},{"action":"command","command":"chc","prefix_suffix":true},{"action":"waitfor","text":"^You reach into your connection to the void|^You are already channeling","matching":"regexp","whole_words":false,"case_sensitive":false,"expire":"6"},{"action":"command","command":"oblivion frenzy","prefix_suffix":true}],"text":"wakeup"},{"type":"trigger","name":"Queue Attack Nano","enabled":true,"id":9,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^Focusing on becoming more attuned to your swarm.*$|^You inhale a cloud of your swarm.*$|^You focus intently to direct a portion of your swarm towards.*$|^Your swarm is already focused upon a multistrike.*$|^Electrical energy begins to discharge from the silvery mist of your swarm.*$|^You brush your fingertips across.*$|^Reaching into the void, you channel the collosal power of the Progenitor, and its aura descends over you like a giant, protective shadow.$|^A dark wave of madness rolls through your thoughts.*$|^Quickly, you program a delayed swarm attack.*$","actions":[{"action":"script","script":"if (MSys.systemEnabled === true) {\n\tMSys.huntingAttack()\n}"}],"items":[]}],"actions":[]},{"type":"group","name":"Fury","enabled":false,"id":69,"items":[{"type":"trigger","name":"Kithblade Shaped","enabled":true,"id":70,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"Resting your hand on the hilt of","actions":[{"action":"script","script":"MSys.bladeshape = true\nif (MSys.systemEnabled === true) {\n\tMSys.huntingAttack()\n}"}],"items":[]},{"type":"trigger","name":"Kithblade Unshaped","enabled":true,"id":86,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"The blade of .+ shimmers and warps.+","actions":[{"action":"script","script":"MSys.alert('bladeshape off', 'white', 'lightred')\nMSys.bladeshape = false\n\nvar a = new Audio('https://freesound.org/people/Stopmotionbros/sounds/438991/download/438991__stopmotionbros__wind.m4a')\na.play()"},{"action":"highlight","highlight":"line","highlight_backref":"1","highlight_fg":"#ffbc78","highlight_bg":"#000000"}],"items":[]},{"type":"trigger","name":"Fever On","enabled":true,"id":79,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"Your mind extends towards the vulnerabilities of .+ body, and with your connection to the universe's energy, you begin to increase the heat in every cell, flushing .+ with a raging fever.","actions":[{"action":"script","script":"MSys.fever = true\nMSys.interrupt = false"}],"items":[]},{"type":"trigger","name":"Unstoppable On","enabled":true,"id":71,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"Your rage overwhelms you, you become unstoppable!","actions":[{"action":"script","script":"MSys.unstoppable = true\n\nvar reflexOn = reflex_find_by_name('trigger', 'Queue Attack Fury', false, false, 'MSys').enabled\n\nif (MSys.systemEnabled && reflexOn) {\n\tMSys.huntingAttack()\n}"}],"items":[]},{"type":"trigger","name":"Unstoppable Off","enabled":true,"id":72,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"You no longer feel unstoppable!","actions":[{"action":"script","script":"MSys.unstoppable = false\nMSys.log('NO UNSTOPPABLE', 'red')\n\nvar reflexOn = reflex_find_by_name('trigger', 'Queue Attack Fury', false, false, 'MSys').enabled\n\nif (MSys.systemEnabled && reflexOn) {\n\tMSys.huntingAttack()\n}"}],"items":[]},{"type":"trigger","name":"Hypertension On","enabled":true,"id":85,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^Tossing .+ to your off hand, you extend a bloodied palm towards .+ and then clench it into a fist, feeling .+ heart spasm and beat more quickly within .+ chest.$","actions":[{"action":"script","script":"MSys.hypertension = true"}],"items":[]},{"type":"trigger","name":"Heal Ready","enabled":true,"id":77,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"It is safe to suffuse yourself with kith energy again.","actions":[{"action":"script","script":"MSys.healReady = true\n\nvar reflexOn = reflex_find_by_name('trigger', 'Queue Attack Fury', false, false, 'MSys').enabled\n\nif (MSys.systemEnabled && reflexOn) {\n\tMSys.huntingAttack()\n}"},{"action":"highlight","highlight":"line","highlight_backref":"1","highlight_fg":"#51d051","highlight_bg":"#000000"}],"items":[]},{"type":"trigger","name":"Heal Used","enabled":true,"id":78,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"The heart of distant stars and the fire at the center of every planet shimmers in your mind, and you draw upon that power, filling your body with an energy that heals your wounds and suffuses you with a flush of health.","actions":[{"action":"script","script":"MSys.healReady = false\n\nvar reflexOn = reflex_find_by_name('trigger', 'Queue Attack Fury', false, false, 'MSys').enabled\n\nif (MSys.systemEnabled && reflexOn) {\n\tMSys.huntingAttack()\n}"}],"items":[]},{"type":"trigger","name":"Berserk On","enabled":true,"id":74,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^You go berserk, flailing .*$","actions":[{"action":"script","script":"MSys.berserk = true\n\nvar reflexOn = reflex_find_by_name('trigger', 'Queue Attack Fury', false, false, 'MSys').enabled\n\nif (MSys.systemEnabled && reflexOn) {\n\tMSys.huntingAttack()\n}"}],"items":[]},{"type":"trigger","name":"Berserk Off","enabled":true,"id":75,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"You are no longer berserk.","actions":[{"action":"script","script":"MSys.berserk = false\n\nvar reflexOn = reflex_find_by_name('trigger', 'Queue Attack Fury', false, false, 'MSys').enabled\n\nif (MSys.systemEnabled && reflexOn) {\n\tMSys.huntingAttack()\n}"}],"items":[]},{"type":"trigger","name":"Attack after Inferno","enabled":true,"id":118,"matching":"substring","whole_words":true,"case_sensitive":true,"text":"The searing wave of your inferno engulfs","actions":[{"action":"script","script":"MSys.systemEnabled = true\nMSys.offenseEnabled = true\nMSys.infernoCharging = false\n\nMSys.huntingAttack()"}],"items":[]},{"type":"trigger","name":"Queue Attack Fury","enabled":true,"id":73,"matching":"regexp","whole_words":false,"case_sensitive":true,"text":"^You flow smoothly into the.+stance.+|^You flow out of your stance.+|^Your mind extends towards the vulnerabilities of.*$","actions":[{"action":"script","script":"MSys.huntingAttack()\n"}],"items":[]},{"type":"alias","name":"Awaken Fury","enabled":true,"id":143,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"command","command":"kith harden","prefix_suffix":true},{"action":"waitfor","text":"^You focus on hardening your skin|^Your internals are already hardened","matching":"regexp","whole_words":false,"case_sensitive":false,"expire":"10"},{"action":"command","command":"kith warmth","prefix_suffix":true},{"action":"waitfor","text":"^You focus on warming up your skin|^You're already protected","matching":"regexp","whole_words":false,"case_sensitive":false,"expire":"10"},{"action":"command","command":"kith balancing","prefix_suffix":true},{"action":"waitfor","text":"^You focus on your kith to prevent falling.|^You're already balancing","matching":"regexp","whole_words":false,"case_sensitive":false,"expire":"10"},{"action":"command","command":"kith firewreathe","prefix_suffix":true}],"text":"wakeup","items":[]},{"type":"alias","name":"Berserk Toggle - hberserk","enabled":true,"id":76,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"if (get_variable('useBerserk')) {\n\tset_variable('useBerserk', false)\n    MSys.useBerserk = false\n    MSys.log('BERSERK OFF', 'white')\n} else {\n\tset_variable('useBerserk', true)\n    MSys.useBerserk = true\n    MSys.log('BERSERK ON', 'white')\n}"}],"text":"hberserk","items":[]},{"type":"alias","name":"Fever Toggle - hfever","enabled":true,"id":80,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"if (get_variable('useFever')) {\n\tset_variable('useFever', false)\n    MSys.useFever = false\n    MSys.log('FEVER OFF', 'white')\n} else {\n\tset_variable('useFever', true)\n    MSys.useFever = true\n    MSys.log('FEVER ON', 'white')\n}"}],"text":"hfever","items":[]},{"type":"alias","name":"Fury Abilities - hfury","enabled":true,"id":84,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"var abilities = ''\nabilities += 'Berserk: ' + get_variable('useBerserk') + '\\n'\nabilities += 'Fever: ' + get_variable('useFever') + '\\n'\nabilities += 'Heal: ' + get_variable('useHeal') + '\\n'\nabilities += 'Bladeshape: ' + MSys.bladeshape + '\\n'\nabilities += 'Desired blade shape set to: ' + get_variable('kithbladeshape') + '\\n'\nabilities += 'Goal: ' + MSys.goal + '\\n'\n\nMSys.log(abilities, 'white')"}],"text":"hfury","items":[]},{"type":"alias","name":"Set Bladeshape","enabled":true,"id":121,"matching":"regexp","whole_words":false,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"set_variable('kithbladeshape', args[1])\nMSys.log('Set desired kithblade shape to: ' + get_variable('kithbladeshape'))"}],"text":"^hblade (.+)","items":[]},{"type":"alias","name":"Inferno - inf","enabled":true,"id":116,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"command","command":"KITH INFERNO","prefix_suffix":true}],"text":"inf","items":[]},{"type":"keybind","name":"","enabled":true,"id":117,"key":110,"actions":[{"action":"script","script":"var dt = new Date()\nMSys.ttk = dt.getTime()\n\nMSys.infernoCharging = true\n\nsend_command('kith inferno')"}],"key_alt":false,"key_ctrl":false,"key_shift":false,"items":[]},{"type":"keybind","name":"","enabled":true,"id":122,"key":106,"actions":[{"action":"command","command":"kith suffuse"}],"key_alt":false,"key_ctrl":false,"key_shift":false,"items":[]}],"actions":[]},{"type":"group","name":"Scoundrel","enabled":false,"id":89,"items":[{"type":"trigger","name":"Ambush Used","enabled":true,"id":91,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^Without warning, you snatch .* from your belt and fire it from the hip at .*, moving too rapidly to be spotted until the bullet is already leaving the barrel.$|^You cannot ambush anyone, as you already are fighting!$","actions":[{"action":"script","script":"MSys.ambush = true\nMSys.huntingAttack()"}],"items":[]},{"type":"trigger","name":"Rapidfire Used","enabled":true,"id":92,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"Placing your hand on the hammer of .*, you quickly fire off two shots at .* in rapid succession.","actions":[{"action":"script","script":"MSys.rapidfire = true"}],"items":[]},{"type":"trigger","name":"Rapidfire Ready","enabled":true,"id":93,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"You are again ready to dualshoot.","actions":[{"action":"script","script":"MSys.rapidfire = false"}],"items":[]},{"type":"trigger","name":"Stim Used","enabled":true,"id":95,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"You jam a stim into your vein and healing nanites surge through your body.","actions":[{"action":"script","script":"MSys.healReady = false"}],"items":[]},{"type":"trigger","name":"Stim Ready","enabled":true,"id":96,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"You can again use a stim.","actions":[{"action":"script","script":"MSys.healReady = true\nMSys.huntingAttack()"}],"items":[]},{"type":"trigger","name":"Queue Attack Scoundrel","enabled":true,"id":94,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^Drawing your shoulder back, you fling a handful.*$|^.*kicks in your grip and an explosive noise cracks.*$|^.*you quickly fire off two shots at.*$|^You jam a stim into your vein and healing nanites surge through your body.$|^Spinning.*motion is effortless and smooth.$|jingling, rattling percussion.$","actions":[{"action":"script","script":"MSys.huntingAttack()"}],"items":[]},{"type":"trigger","name":"Spin if empty and no target","enabled":true,"id":98,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"There is nothing and nobody here of that name - find a different target for your bomb.","actions":[{"action":"script","script":"if (MSys.bullets == 0) {\n\tsend_command('gun spin')\n}"}],"items":[]},{"type":"alias","name":"Construct Ripper - rip","enabled":true,"id":97,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"command","command":"ied construct ripper","prefix_suffix":true}],"text":"rip","items":[]},{"type":"alias","name":"Ambush Toggle - hambush","enabled":true,"id":99,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"if (get_variable('useAmbush')) {\n\tset_variable('useAmbush', false)\n    MSys.useAmbush = false\n    MSys.log('AMBUSH OFF', 'white')\n} else {\n\tset_variable('useAmbush', true)\n    MSys.useAmbush = true\n    MSys.log('AMBUSH ON', 'white')\n}"}],"text":"hambush","items":[]},{"type":"alias","name":"Rapidfire Toggle - hrapidfire ","enabled":true,"id":100,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"if (get_variable('useRapidfire')) {\n\tset_variable('useRapidfire', false)\n    MSys.useRapidfire = false\n    MSys.log('RAPIDFIRE OFF', 'white')\n} else {\n\tset_variable('useRapidfire', true)\n    MSys.useRapidfire = true\n    MSys.log('RAPIDFIRE ON', 'white')\n}"}],"text":"hrapidfire","items":[]},{"type":"alias","name":"Scoundrel Abilities - hscoundrel","enabled":true,"id":101,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"var abilities = ''\nabilities += 'Ambush: ' + get_variable('useAmbush') + '\\n'\nabilities += 'Rapidfire: ' + get_variable('useRapidfire') + '\\n'\nabilities += 'Heal: ' + get_variable('useHeal') + '\\n'\nabilities += 'Bullets: ' + MSys.bullets + '\\n'\n\nMSys.log(abilities, 'white')"}],"text":"hscoundrel","items":[]}],"actions":[]},{"type":"group","name":"B.E.A.S.T.","enabled":false,"id":102,"items":[{"type":"trigger","name":"Backhand Used","enabled":true,"id":103,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"You overdrive your suit's movement circuits, delivering a vicious backhanded blow.*","actions":[{"action":"script","script":"MSys.backhand = true"}],"items":[]},{"type":"trigger","name":"Support Used","enabled":true,"id":107,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^You activate your suit's emergency life support system.*$","actions":[{"action":"script","script":"MSys.healReady = false"}],"items":[]},{"type":"trigger","name":"Support Ready","enabled":true,"id":108,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"Your HUD indicates that you may use your life support system once again.","actions":[{"action":"script","script":"MSys.healReady = true\nMSys.alert('support ready', 'white', 'green')"}],"items":[]},{"type":"trigger","name":"Queue Attack BEAST","enabled":false,"id":106,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^You overdrive your suit's movement circuits.*$|^With servo-assisted might, you drive your wristblade.*$|^You activate your suit's emergency life support system.*$","actions":[{"action":"script","script":"if (MSys.systemEnabled === true) {\n\tMSys.huntingAttack()\n}"}],"items":[]},{"type":"alias","name":"Suit Contingency","enabled":true,"id":104,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"command","command":"suit contingency","prefix_suffix":true}],"text":"con","items":[]},{"type":"alias","name":"Overclock","enabled":true,"id":105,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"command","command":"suit overclock","prefix_suffix":true}],"text":"oc","items":[]},{"type":"alias","name":"","enabled":true,"id":110,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"var abilities = ''\nabilities += 'Heal: ' + get_variable('useHeal') + '\\n'\n\nMSys.log(abilities, 'white')"}],"text":"hbeast","items":[]}],"actions":[]},{"type":"group","name":"Engineer","enabled":false,"id":109,"items":[{"type":"group","name":"Turret Construction","enabled":true,"id":129,"items":[{"type":"alias","name":"Construct Turret","enabled":true,"id":128,"matching":"regexp","whole_words":false,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"if (args[1] == '' || args[2] == '') {\n    MSys.log('Usage: hturret <mod> <weapon> <follow up command>', 'darkyellow')\n} else {\n    set_variable('turretMod', args[1])\n    set_variable('turretWeapon', args[2])\n    set_variable('turretFollowup', args[3])\n    set_variable('turretAlias', true)\n\tsend_command('turret construct turret')\n}\n"}],"text":"hturret ([a-z]+) ([a-z]+)[ ]?(.*)","items":[]},{"type":"trigger","name":"Frame Constructed","enabled":true,"id":130,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^Circuitboards, robotic servos, power sources, and an operating system come together under your capable hands to form a modular weapons turret","actions":[{"action":"script","script":"if (get_variable('turretAlias') == true) {\n    send_command('turret install ' + get_variable('turretWeapon'))\n}"}],"items":[]},{"type":"trigger","name":"Weapon Mounted","enabled":true,"id":131,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^Smoothly, you socket the .* barrel|That barrel is already installed on the turret","actions":[{"action":"script","script":"if (get_variable('turretAlias') != true) {return;}\n\nif (get_variable('turretMod').toUpperCase() == 'QPC') {\n    send_command('gadget construct qpc')\n} else {\n    send_command('turret mod ' + get_variable('turretMod'))\n\tif (get_variable('turretFollowup') != '') {send_command(get_variable('turretFollowup'))}\n    set_variable('turretAlias', false)\n    MSys.log('Turret ready!', 'white')\n}"}],"items":[]},{"type":"trigger","name":"Mod Mounted","enabled":true,"id":133,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^Metal ratchets satisfyingly into place and code whirrs down","actions":[{"action":"script","script":"if (get_variable('turretAlias') != true) {return;}\nsend_command(get_variable('turretFollowup'))\nset_variable('turretAlias', false)\nMSys.log('Turret ready!', 'white')"}],"items":[]},{"type":"trigger","name":"QPC Ready","enabled":true,"id":132,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^Using your vast engineering knowledge, you effortlessly construct a cylindrical quantum power cell","actions":[{"action":"script","script":"if (get_variable('turretAlias') != true) {\n    return;\n} else if (get_variable('turretMod').toUpperCase() == 'QPC') {\n    send_command('turret mod qpc')\n}"}],"items":[]},{"type":"alias","name":"Deploy Sentry Turret","enabled":true,"id":134,"matching":"regexp","whole_words":false,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"send_command('turret deploy ' + args[1])"},{"action":"waitfor","text":"Dropping a turret with a mounted flamethrower barrel","matching":"substring","whole_words":false,"case_sensitive":false,"expire":"10"},{"action":"command","command":"workstation deploy","prefix_suffix":false},{"action":"waitfor","text":"You fold down the legs of your workstation","matching":"substring","whole_words":false,"case_sensitive":false,"expire":"10"},{"action":"command","command":"turret sentrymode","prefix_suffix":true},{"action":"waitfor","text":"Fingers whirring across the holokeyboard","matching":"substring","whole_words":false,"case_sensitive":false,"expire":"10"},{"action":"command","command":"workstation pack","prefix_suffix":true}],"text":"^deploysentry[ ]?([0-9]*)$","items":[]}],"actions":[]},{"type":"group","name":"Utility","enabled":true,"id":136,"items":[{"type":"trigger","name":"Airdrop Return","enabled":true,"id":123,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^An aerodynamic drone flies in, decelerating rapidly. It drops a supply of spare parts into your hands.$","actions":[{"action":"highlight","highlight":"line","highlight_backref":"1","highlight_fg":"#00c7ff","highlight_bg":"#000000"},{"action":"script","script":"if (get_variable('refillParts') == true) {\n    if (MSys.parts < 60) {\n        send_command('bot airdrop')\n    } else {\n        set_variable('refillParts', false)\n    }\n}"}],"items":[]},{"type":"alias","name":"Refill Parts","enabled":true,"id":127,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"set_variable('refillParts', true)\nsend_command('bot airdrop')\n"}],"text":"^hfillParts$","items":[]}],"actions":[]},{"type":"trigger","name":"Stimjector Used","enabled":true,"id":111,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"You activate your stimjector, feeling a rush of vitality as it releases healing nanites into your bloodstream.","actions":[{"action":"script","script":"MSys.healReady = false"}],"items":[]},{"type":"trigger","name":"Stimjector Ready","enabled":true,"id":112,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"You can again use a stimjector.","actions":[{"action":"script","script":"MSys.healReady = true\nMSys.huntingAttack()\n//MSys.log('stimjector ready', 'cyan')"},{"action":"highlight","highlight":"line","highlight_backref":"1","highlight_fg":"#00efff","highlight_bg":"#000000"}],"items":[]},{"type":"trigger","name":"Repeat Active","enabled":true,"id":137,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^You build an instruction loop","actions":[{"action":"script","script":"MSys.repeat = false\nMSys.huntingAttack()"}],"items":[]},{"type":"trigger","name":"Repeat Available","enabled":true,"id":138,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^You can again order a repeated attack.$","actions":[{"action":"script","script":"MSys.repeat = true"},{"action":"highlight","highlight":"line","highlight_backref":"1","highlight_fg":"#fbbe80","highlight_bg":"#000000"}],"items":[]},{"type":"trigger","name":"Burrowbot Active","enabled":true,"id":139,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"and starts burrowing into its flesh.$","actions":[{"action":"script","script":"MSys.wormDeployed = true\nMSys.huntingAttack()"}],"items":[]},{"type":"trigger","name":"Burrowbot Returned","enabled":true,"id":140,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^A knife-mawed burrowbot violently emerges|ceases burrowing","actions":[{"action":"script","script":"MSys.wormDeployed = false\nMSys.huntingAttack()"}],"items":[]},{"type":"trigger","name":"Queue Attack Engineer","enabled":true,"id":114,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^A crane-armed carrybot claws .* shredding .* skin.$","actions":[{"action":"script","script":"MSys.huntingAttack()"}],"items":[]},{"type":"trigger","name":"Turret Unpowered","enabled":true,"id":150,"matching":"regexp","whole_words":false,"case_sensitive":true,"text":"doesn't have enough power to attack.$","actions":[{"action":"highlight","highlight":"line","highlight_backref":"1","highlight_fg":"#f863df","highlight_bg":"#000000"}]},{"type":"alias","name":"List Ability Configuration","enabled":true,"id":113,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"var abilities = ''\nabilities += 'Heal:          ' + get_variable('useHeal') + '\\n'\nabilities += 'Repeat Attack: ' + get_variable('engineerRepeatAttack') + '\\n'\nabilities += 'Use Repeat:    ' + get_variable('useRepeat') + '\\n'\nabilities += 'Repeat Avail:  ' + MSys.repeat + '\\n'\nabilities += 'Use Worm:      ' + get_variable('useWorm') + '\\n'\nabilities += 'Worm Deployed: ' + MSys.wormDeployed + '\\n'\nabilities += 'Use Release:   ' + get_variable('useRelease') + '\\n'\nabilities += 'QPC Boost:     ' + get_variable('useQPCBoost') + '\\n'\n\nMSys.log(abilities, 'white')"}],"text":"hengineer","items":[]},{"type":"alias","name":"Enable/Disable Repeat","enabled":true,"id":135,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"if (args[1] != 'clear') {\n    set_variable('engineerRepeatAttack', args[1])\n    set_variable('useRepeat', true)\n    MSys.log('Enabled bot repeat with attack: ' + args[1], 'white')\n} else {\n    set_variable('engineerRepeatAttack', '')\n    set_variable('useRepeat', false)\n    MSys.log('Disabled bot repeat command', 'white')\n}"}],"text":"hrepeat (.+)","items":[]},{"type":"alias","name":"Enable/Disable Worm","enabled":true,"id":141,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"if (get_variable('useWorm')) {\n\tset_variable('useWorm', false)\n    MSys.log('Burrowbot Worm Attack disabled', 'white')\n} else {\n\tset_variable('useWorm', true)\n    MSys.log('Burrowbot Worm Attack enabled', 'white')\n}"}],"text":"hworm","items":[]},{"type":"alias","name":"Enable/Disable Worm Release","enabled":true,"id":142,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"if (get_variable('useRelease')) {\n\tset_variable('useRelease', false)\n    MSys.log('Burrowbot Worm Release Attack disabled', 'white')\n} else {\n\tset_variable('useRelease', true)\n    MSys.log('Burrowbot Worm Release Attack enabled', 'white')\n}"}],"text":"hrelease","items":[]},{"type":"alias","name":"Enable/Disable QPCBoost","enabled":true,"id":151,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"if (get_variable('useQPCBoost')) {\n\tset_variable('useQPCBoost', false)\n    MSys.log('QPC Boost after kill disabled', 'white')\n} else {\n\tset_variable('useQPCBoost', true)\n    MSys.log('QPC Boost after kill enabled', 'white')\n}"}],"text":"hqpcboost"}],"actions":[]},{"type":"group","name":"Combat","enabled":true,"id":64,"items":[{"type":"group","name":"Chat","enabled":true,"id":65,"items":[{"type":"alias","name":"Target call - tt <name>","enabled":false,"id":67,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"MSys.target = args[1]\nset_variable('tar', args[1])\nsend_command('st ' + args[1])\nsend_command('crt Target: ' + args[1])"}],"text":"tt (.+)","items":[]}],"actions":[]}],"actions":[]}],"description":"Exported reflexes: MSys"}