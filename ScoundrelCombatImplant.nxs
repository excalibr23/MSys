{"type":"group","name":"starwraith scoundrel combat implant","enabled":true,"id":1,"items":[{"type":"function","name":"onLoad","enabled":true,"id":2,"code":"// Changelog\n// 20190113T1503EST: Copied main system to separate class systems\n\n// Place any code here you'd like to autorun when the system is loaded\nsend_command('wakeup')\nSSCI = {\n// Core Implant Code\n    noticecolor: 'gold',\n    packagename: 'starwraith scoundrel combat implant',\n    shortname: 'SSCI',\n    notice: function(text) {\n        display_notice(\"[\" + this.shortname + \"] \" + text, this.noticecolor);\n    },\n    loaded: function() {\n        //Send implant to browser log for debugging\n        console.log(this)\n        this.notice(\"Starwraith Scoundrel Combat Implant v1.0 Loaded. Good hunting, and good death.\\n\");\n    },\n    helpbox: function(title,text) {\n        var helptext = \"<div class=\\\"mono\\\"><span style=\\\"color: #ffffff; \\\"><span style=\\\"background-color: #0000a0 \\\">\" + title + \"</span></span></div>\";\n        helptext += \"<div class=\\\"mono\\\">\" + text.replace(\"\\n\",\"</div><div class=\\\"mono\\\">\") + \"</div>\";\n        client.display_help_window(helptext);\n    },\n    disableGroup: function(name) {\n        var group = reflex_find_by_name('group', name, false, false, this.packagename)\n        reflex_disable(group)\n    },\n    enableGroup: function(name) {\n        var group = reflex_find_by_name('group', name, false, false, this.packagename)\n        reflex_enable(group)\n    },\n    log: function (x, fgcolor, bgcolor) {\n        let type = typeof x\n        switch(type) {\n          case 'number':\n          case 'string':\n          case 'boolean':\n            display_notice(x.toString(), fgcolor, bgcolor)\n            break;\n          case 'object':\n            for (var prop in x) {\n              display_notice(`${prop}: ${x[prop]}`, fgcolor, bgcolor)\n            }\n            break;\n          case 'undefined':\n            display_notice('undefined', fgcolor, bgcolor)\n            break;\n          default:\n            display_notice('wtf is this')\n        }\n    },\n    alert: function (text, fgcolor, bgcolor) {\n        text = text.toUpperCase()\n        let fullText = '-'.repeat(text.length+1) + '-------\\n--  '+ text + '  --\\n-------' + '-'.repeat(text.length+1)\n        display_notice(fullText, fgcolor, bgcolor)\n    },\n    debugMessage: function (text) {\n        if (get_variable('debug')) {\n            this.log(text, 'white', 'black')\n        }\n    },\n//System Variables\n    goal: 'hunt2',\n    matchList: get_variable('matchList'),\n    systemEnabled: true,\n    offenseEnabled: false,\n    break: get_variable('break'),\n    itemsInRoom: [],\n    damageThisFight: 0,\n    ttk: 0,\n    targetHealth: 0,\n    interrupt: false,\n//Character    \n    attack: get_variable('huntingAttack') + ' ',\n    class: '',\n    health: 0,\n    maxHealth: 0,\n    useHeal: get_variable('useHeal'),\n    healReady: true,\n//Nano\n    multistrike: false,\n    frenzy: false,\n    freeze: false,\n    delaySwarm: false,\n    pointZero: false,\n    speedup: false,\n    negation: false,\n    empyreal: '',\n    useDelay: get_variable('useDelay'),\n    useMultistrike: get_variable('useMultistrike'),\n    useFrenzy: get_variable('useFrenzy'),\n    usePointZero: get_variable('usePointZero'),\n    useSpeedup: get_variable('useSpeedup'),\n    useFreeze: get_variable('useFreeze'),\n    useNegation: get_variable('useNegation'),\n//Fury\n    stance: '',\n    bladeshape: false,\n    rage: 0,\n    maxRage: 0,\n    unstoppable: false,\n    berserk: false,\n    useBerserk: get_variable('useBerserk'),\n    fever: false,\n    useFever: get_variable('useFever'),\n    hypertension: false,\n    infernoCharging: false,\n//Scoundrel\n    bullets: 0,\n    ambush: false,\n    useAmbush: get_variable('useAmbush'),\n    rapidfire: false,\n    useRapidfire: get_variable('useRapidfire'),\n//B.E.A.S.T.\n    backhand: false,\n    plasma: 0,\n    maxPlasma: 0,\n    useResistance:   get_variable('useResistance'),\n    useSerrate:      get_variable('useSerrate'),\n    usePlasmaShield: get_variable('usePlasmaShield'),\n    useRamset:       get_variable('useRamset'),\n    useDampening:    get_variable('useDampening'),\n    useJamming:      get_variable('useJamming'),\n    resistance:   false,\n    serrate:      false,\n    plasmaShield: false,\n    ramset:       false,\n    dampening:    false,\n    jamming:      false,\n//Engineer\n    parts: 0,\n    repeat: true,\n    wormDeployed: false,\n//Combat functions \n    findTarget: function() {\n        var itemList = this.itemsInRoom\n        var killList = get_variable('killList')\n        var targetFound = false\n        \n        //Match room order\n        if (!this.matchList) {\n            for (i=0; i<itemList.length; i++) {\n                for (x=0; x<killList.length; x++) {\n                    if (itemList[i].name.includes(killList[x]) && itemList[i].attrib === 'm' && targetFound === false) {\n                        set_variable('tar', itemList[i].id)\n                        send_command('settarget ' + itemList[i].id)\n                        targetFound = true\n                        display_notice('New target: '+itemList[i].name, 'red', 'black')\n                    }\n                }\n            }\n        } else { //Match priority/list order\n            for (i=0; i<killList.length; i++) {\n                for (x=0; x<itemList.length; x++) {\n                    if (itemList[x].name.includes(killList[i]) && itemList[x].attrib === 'm' && targetFound === false) {\n                        set_variable('tar', itemList[x].id)\n                        send_command('settarget ' + itemList[x].id)\n                        targetFound = true\n                        display_notice('New target: '+itemList[x].name, 'red', 'black')\n                    }\n                }\n            }\n        }\n\n        if (!targetFound) {\n            //display_notice('No Target Found', 'red', 'black')\n            set_variable('tar', '')\n        }\n    },\n    huntingAttack: function() {\n        \n        if (!this.systemEnabled) {return}\n        var command = ''\n        \n        //Nano\n        if (this.class == 'Nanoseer') {\n            \n            //Self heal\n            if (this.health / this.maxHealth < .8 && this.healReady && this.useHeal) {\n                this.debugMessage('Nano repair')\n                send_command('nano repair')\n                return\n                \n            //Out of combat buffs\n            //Casting and channeling are separated to enable the buff to be executed\n            //immediately if already channeling one of the required empyreals\n            //This prevents unnecessary swapping of empyreal channels after combat\n            } else if (!this.negation && this.useNegation && this.empyreal == 'Progenitor') {\n                this.debugMessage('Cast Negation')\n                send_command('negation')\n                return\n                \n            } else if (!this.frenzy && this.useFrenzy && this.empyreal == 'Conqueror') {\n                this.debugMessage('Cast Frenzy')\n                send_command('frenzy')\n                return\n                \n            } else if (!this.frenzy && this.useFrenzy && this.empyreal != 'Conqueror') {\n                this.debugMessage('Channel conqueror')\n                send_command('oblivion channel conqueror')\n                return\n                \n            } else if (!this.negation && this.useNegation && this.empyreal != 'Progenitor') {\n                this.debugMessage('Channel Progenitor')\n                send_command('oblivion channel progenitor')\n                return\n                \n            //Abort execution of offensive actions if disabled\n            } else if (!this.offenseEnabled || get_variable('tar') == '') {\n                this.debugMessage('No target or offense disabled')\n                return\n                \n            //Combat buffs\n            } else if (!this.speedup && this.useSpeedup && this.empyreal != 'Traveller') {\n                this.debugMessage('Channel Traveller')\n                send_command('oblivion channel Traveller')\n                return\n                \n            } else if (!this.speedup && this.useSpeedup && this.empyreal == 'Traveller') {\n                this.debugMessage('Cast Speedup')\n                send_command('speedup')\n                return\n                \n            } else if (!this.pointZero && this.usePointZero) {\n                this.debugMessage('Point Zero')\n                send_command('void pointzero')\n                return\n                \n            } else if (!this.delaySwarm && this.useDelay) {\n                this.debugMessage('Delay Attack')\n                command =  'delay '\n                command += get_variable('delayAttack')\n                command += ' '\n                \n            } else if (!this.multistrike && this.targetHealth > 40 && this.useMultistrike) {\n                this.debugMessage('Multistrike')\n                command = 'multistrike '\n                \n            } else if (!this.freeze && this.useFreeze && this.targetHealth > 20 ) {\n                this.debugMessage('Freeze')\n                command = 'freeze '\n                \n            } else {\n                this.debugMessage('Default Attack')\n                command = this.attack + ' '\n                \n            }\n            \n            command += get_variable('tar')\n            send_command(command)          \n            \n        //Fury\n        } else if (this.class == 'Fury') {\n            command += 'combo '\n            \n            if (this.interrupt && this.offenseEnabled) {\n                send_command('kith fever ' + get_variable('tar'))\n                return;\n            }\n            \n            if (this.health / this.maxHealth < .8 && this.healReady  && this.useHeal) {\n                send_command('kith suffuse')\n                return;\n            }else if (!this.bladeshape && get_variable('kithbladeshape') !== undefined && get_variable('kithbladeshape') !== '') {\n                send_command(get_variable('kithbladeshape'))\n                return;\n            }else if (get_variable('tar') == '' || this.offenseEnabled == false) {\n                return;\n            }else if (!this.fever && this.useFever) {\n                command = 'kith fever ';\n            }else if (this.goal == 'hunt1') {\n                //Battleflow attack\n                if (this.stance == 'Symmetry') {\n                    command += 'swiftcut '\n                } else if (this.stance == 'Flare') {\n                    command += 'wound '\n                } else if (this.stance == 'Eruption') {\n                    if (this.hypertension) {\n                        command += 'bloodburn '\n                    } else {\n                        command += 'hypertension '\n                    }\n                } else if (this.stance == 'Ember') {\n                    command += 'legspike '\n                }\n\n                //Rage Attack\n                if (this.unstoppable) {\n                    command += 'slice '\n                } else if (this.stance == 'Symmetry') {\n                    if (this.rage / this.maxRage > .13 && !this.berserk && this.useBerserk) {\n                        command += 'berserk '\n                    } else {\n                        command += 'flyinglash '\n                    }\n                } else if (this.stance == 'Flare') {\n                    command += 'rend '\n                } else if (this.stance == 'Eruption') {\n                    if (this.health / this.maxHealth < .7) {\n                        command += 'resistant '\n                    } else {\n                        command += 'upperlash '\n                    }\n                } else if (this.stance == 'Ember') {\n                    if (this.rage / this.maxRage > .73  && this.unstoppable == false) {\n                        command += 'unstoppable '\n                    } else {\n                        command += 'strike '\n                    }\n                }\n            }else if (this.goal == 'hunt2') {\n                //Battleflow attack\n                if (this.stance == 'Symmetry') {\n                    command += 'swiftcut '\n                } else if (this.stance == 'Flare') {\n                    command += 'wound '\n                } else if (this.stance == 'Eruption') {\n                    command += 'rupture '\n                }\n\n                //Rage Attack\n                if (this.unstoppable) {\n                    command += 'slice '\n                } else if (this.stance == 'Symmetry') {\n                    if (this.rage / this.maxRage > .13 && !this.berserk && this.useBerserk) {\n                        command += 'berserk '\n                    } else {\n                        command += 'flyinglash '\n                    }\n                } else if (this.stance == 'Flare') {\n                    command += 'rend '\n                } else if (this.stance == 'Eruption') {\n                    if (this.rage / this.maxRage > .73  && this.unstoppable == false) {\n                        command += 'unstoppable '\n                    } else {\n                        command += 'strike '\n                    }\n                }\n            }else if (this.goal == 'hunt2') {\n                var next = ''\n                command = 'combo '\n                \n                //Battleflow attack\n                if (this.stance == 'Symmetry') {\n                    command += 'gutrend '\n                    next = 'Ember'\n                } else if (this.stance == 'Ember') {\n                    command += 'legspike '\n                    next = 'Symmetry'\n                } else if (this.stance == 'Flare') {\n                    command += 'sear '\n                    next = 'Symmetry'\n                }\n\n                //Rage Attack\n                if (this.unstoppable) {\n                    command += 'slice '\n                } else if (next == 'Symmetry') {\n                    if (this.rage / this.maxRage > .8  && this.unstoppable == false) {\n                        command += 'unstoppable '\n                    } else {\n                        command += 'deflect '\n                    }\n                } else if (next == 'Ember') {\n                    command += 'resistant '\n                } else if (next == 'Flare') {\n                    command += 'reel '\n                }\n            }\n            \n            command += get_variable('tar')\n            send_command(command)\n            \n        //Scoundrel    \n        }else if (this.class == 'Scoundrel') {\n            \n            if (this.health / this.maxHealth < .8 && this.healReady && this.useHeal) {\n                send_command('stim')\n                return\n            } else if (this.offenseEnabled == false || get_variable('tar') == '') {\n                return\n            } else if (this.bullets == 0) {\n                command += 'ied fling ripper at '\n            } else if (this.bullets == 1) {\n                command += 'gun crackshot '\n            } else if (!this.ambush && this.useAmbush && this.bullets) {\n                command += 'gun ambush '\n            } else if (!this.rapidfire && this.useRapidfire) {\n                command += 'gun rapidfire '\n            } else {\n                command += 'gun crackshot '\n            }\n            \n            command += get_variable('tar')\n            send_command(command)\n        \n        }else if (this.class == 'B.E.A.S.T.'){\n            command = ''\n            \n            if (this.health / this.maxHealth < .8 && this.healReady && this.useHeal) {\n                command += 'suit support'\n                \n            } else if (!this.resistance   && this.useResistance)    { command += 'plasma resistance'\n            } else if (!this.serrate      && this.useSerrate)       { command += 'mwp serrate'\n            } else if (!this.plasmaShield && this.usePlasmaShield)  { command += 'plasma shield'\n            } else if (!this.ramset       && this.useRamset)        { command += 'suit ramset'\n            } else if (!this.dampening    && this.useDampening)     { command += 'suit dampening'\n            } else if (!this.jamming      && this.useJamming)       { command += 'suit jamming'\n            } else if (!this.offenseEnabled || get_variable('tar') == '') {\n                message  = 'Aggressive actions are disabled\\n'\n                message += 'Offense Enabled: ' + this.offenseEnabled + '\\n'\n                message += 'Target Variable: ' + get_variable('tar') + '\\n'\n                this.debugMessage(message)\n                return\n                \n            } else if (!this.backhand) { command += 'suit backhand '\n            } else { command += 'mwp wristblade '\n            }\n            \n            if (command[command.length - 1] == ' ') {command += get_variable('tar')}\n            \n            this.debugMessage('Executing command: \"' + command + '\"')\n            send_command(command)\n            return\n            \n        //Engineer\n        }else if (this.class == 'Engineer'){\n            if (this.health / this.maxHealth < .8 && this.healReady && this.useHeal) {\n                this.debugMessage('Activating stimjector')\n                send_command('operate stimjector')\n                \n            }else if (get_variable('tar') == '' || this.offenseEnabled == false) {\n                return;\n                \n            }else if (!this.repeat && get_variable('useRepeat') && get_variable('repeatAttack') != '') {\n                this.debugMessage('Initiating repeat')\n                command =  'bot repeat '\n                command += get_variable('engineerRepeatAttack')\n                command += ' '\n\n            } else if (get_variable('useWorm') && this.targetHealth > 0.7 && !this.wormDeployed) {\n                this.debugMessage('Executing burrowbot worm attack')\n                command = 'bot worm '\n\n            } else if (get_variable('useRelease') && this.wormDeployed && this.targetHealth < 0.3) {\n                this.debugMessage('Releasing burrowbot')\n                command = 'bot release '\n            }\n            else {\n                this.debugMessage('Executing default engineer attack')\n                command = 'bot claw '\n            }\n            \n            this.debugMessage('Attempting command: ' + command) \n            command += get_variable('tar')\n            send_command(command)\n        }\n    }\n}\n\nSSCI.loaded();","items":[]},{"type":"function","name":"onGMCP","enabled":true,"id":3,"code":"// Place any code here you'd like to run when a GMCP message is received\n// - The GMCP message is received as \"args.gmcp_method\" and \"args.gmcp_args\"\n\nGMCP[args.gmcp_method] = args.gmcp_args\n\n/* ------------------------------------------ CHARACTER STUFF ----------------------------------- */\n\n// Seen when doing score\nif (args.gmcp_method == \"Char.Status\" && args.gmcp_args.first_name) {\n    SSCI.first_name = args.gmcp_args.first_name;\n}\n\nif (args.gmcp_method == \"Char.Vitals\") {\n\n    // Track health changes\n    var change = SSCI.health - args.gmcp_args.hp;\n   \n    if (change > 0) {\n        SSCI.log('Damage taken: ' + change, 'yellow')\n    } else if (change < 0) {\n        SSCI.log('Damage healed: ' + Math.abs(change), '#6bdaee')\n    }\n    \n    SSCI.health = args.gmcp_args.hp\n    SSCI.maxHealth = args.gmcp_args.maxhp\n\n    // Check class\n    if (!SSCI.class || SSCI.class != args.gmcp_args.class) {\n        SSCI.class = args.gmcp_args.class\n        \n        SSCI.disableGroup('Fury')\n        SSCI.disableGroup('Nanoseer')\n        SSCI.disableGroup('Scoundrel')\n        SSCI.disableGroup('B.E.A.S.T.')\n        SSCI.disableGroup('Engineer')\n        \n        SSCI.enableGroup(SSCI.class)\n    }\n \n    if (SSCI.class === 'Fury') {\n        SSCI.stance = args.gmcp_args.st\n        SSCI.rage = args.gmcp_args.rg\n        SSCI.maxRage = args.gmcp_args.maxrg\n    } else if (SSCI.class === 'Scoundrel') {\n        SSCI.bullets = args.gmcp_args.bl\n    } else if (SSCI.class == 'Engineer') {\n        SSCI.parts = args.gmcp_args.pt\n    }\n}\n\n/* ----------------------------------- DEFENCES AND BUFFS --------------------------------------- */\n\nif (args.gmcp_method == 'Char.Defences.Add') {\n    \n    //Fury\n    if (args.gmcp_args.name == 'Oblivion: Conqueror')  {\n        SSCI.empyreal = 'Conqueror'\n    } else if (args.gmcp_args.name == 'Oblivion: Traveller')  {\n        SSCI.empyreal = 'Traveller'\n    } else if (args.gmcp_args.name == 'Oblivion: Architect')  {\n        SSCI.empyreal = 'Architect'\n    } else if (args.gmcp_args.name == 'Oblivion: Progenitor') {\n        SSCI.empyreal = 'Progenitor'\n    } else if (args.gmcp_args.name == 'Oblivion: Sunderer')   {\n        SSCI.empyreal = 'Sunderer'\n    }\n}\n\n/* -------------------------------------------- ITEMS IN ROOM ----------------------------------- */\n\n//Get Items In Room\nif (args.gmcp_method == \"Char.Items.List\") {\n    SSCI.itemsInRoom = args.gmcp_args['items']\n}\n\n//Remove items when items leave\nif (args.gmcp_method == \"Char.Items.Remove\") {\n    let itemLeaving = args.gmcp_args['item']\n    \n    //Find index of item\n    SSCI.itemsInRoom = SSCI.itemsInRoom.filter(item => item.id !== itemLeaving.id);\n    \n}\n\n//Add items when items enter\nif (args.gmcp_method == \"Char.Items.Add\") {\n    let itemJoining = args.gmcp_args['item']\n    \n    //Find index of item\n    SSCI.itemsInRoom.push(itemJoining);\n    \n    if (SSCI.systemEnabled === true) {\n        if (!get_variable('tar')) {\n            SSCI.findTarget()\n        }\n    }\n    \n    if (SSCI.infernoCharging && itemJoining.attrib === 'm') {\n        send_command('asdf')\n        SSCI.infernoCharging = false\n        SSCI.alert('mob entered - inferno cancelled', 'white', 'red')\n    }\n}\n\n/* -------------------------------------------- PLAYERS IN ROOM ----------------------------------- */\nif (args.gmcp_method == \"Room.Players\") {\n    SSCI.playersInRoom = args.gmcp_args\n}\n\n/* --------------------------------------------- HELPERS --------------------------------- */\nif (args.gmcp_method == \"Room.Info\") {\n    if (SSCI.systemEnabled === true) {\n        SSCI.findTarget()\n    }\n}\n\nif (args.gmcp_method == \"IRE.Target.Info\") {\n    SSCI.targetHealth = args.gmcp_args['hpperc'].slice(0, -1)\n}\n\n/* --------------------------------------------- CLASS HELPERS --------------------------------- */\n\n//B.E.A.S.T. Plasma Management\nif (args.gmcp_method == \"Char.Vitals\" && SSCI.class == 'B.E.A.S.T.') {\n    SSCI.plasma = args.gmcp_args.pl\n    SSCI.maxPlasma = args.gmcp_args.maxpl\n}","items":[]},{"type":"group","name":"Auto Hunt","enabled":true,"id":8,"items":[{"type":"group","name":"Setup","enabled":true,"id":41,"items":[{"type":"alias","name":"Combat Implant Setup - hsetup","enabled":true,"id":25,"matching":"begins","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"SSCI.log('-- Hunting List Setup.  Use \\'hsave\\' to keep a backup.  \\'hload\\' will load your backup.', 'white', 'black')\nSSCI.log('-- Use \\'hadd\\' <name> to add to the list and \\'hremove\\' <name> to remove items from this list. \\'hshow\\' will show the items on your list.', 'white', 'black')\nSSCI.log('-- Use \\'hattack\\' <attackName> to make it your primary attack that will be auto used.', 'white')\nSSCI.log('-- Use \\'hlist\\' to switch between room and priority list. Use \\'hup\\' or \\'hdown\\' <name> to increase or decrease an item on the priority list.', 'white')\nSSCI.log('-- Make sure you use \\'config usequeueing on\\'.  Then you can use other attacks to overwrite auto attacks.', 'white')\n\nif (get_variable('killList')       == undefined) {set_variable('killList', ['rockhopper'])}\nif (get_variable('debug')          == undefined) {set_variable('debug', false)}\nif (get_variable('matchList')      == undefined) {set_variable('matchList', true)}\nif (get_variable('break')          == undefined) {set_variable('break', true)}\nif (get_variable('useHeal')        == undefined) {set_variable('useHeal', true)}\nif (get_variable('useFreeze')      == undefined) {set_variable('useFreeze', false)}\nif (get_variable('useMultistrike') == undefined) {set_variable('useMultistrike', false)}\nif (get_variable('useFrenzy')      == undefined) {set_variable('useFrenzy', false)}\nif (get_variable('useDelay')       == undefined) {set_variable('useDelay', false)}\nif (get_variable('useBerserk')     == undefined) {set_variable('useBerserk', false)}\nif (get_variable('useFever')       == undefined) {set_variable('useFever', false)}\nif (get_variable('useAmbush')      == undefined) {set_variable('useAmbush', false)}\nif (get_variable('useRapidfire')   == undefined) {set_variable('useRapidfire', false)}"}],"text":"hsetup","items":[]},{"type":"alias","name":"System Reset","enabled":true,"id":126,"matching":"regexp","whole_words":false,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"SSCI.log('-- Combat Implant has been reset to factory settings.', 'white', 'black')\nSSCI.log('-- If you have previously backed up your kill list you may use \\'hload\\' to reload it', 'white', 'black')\n\nset_variable('killList', ['rockhopper'])\nset_variable('debug', false)\nset_variable('useFreeze', false)\nset_variable('useMultistrike', false)\nset_variable('useFrenzy', false)\nset_variable('useDelay', false)\nset_variable('useBerserk', false)\nset_variable('useFever', false)\nset_variable('useAmbush', false)\nset_variable('useRapidfire', false)\nset_variable('useHeal', true)\nset_variable('matchList', true)\nset_variable('break', true)"}],"text":"^hreset$","items":[]},{"type":"alias","name":"Change Auto Attack","enabled":true,"id":26,"matching":"regexp","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"SSCI.attack = args[1] + ' '\nset_variable('huntingAttack', args[1] + ' ')\ndisplay_notice('Attack set to: ' + args[1], 'white', 'black')"}],"text":"hattack (.+)","items":[]},{"type":"alias","name":"Enable/Disable List Mode - hlist","enabled":true,"id":56,"matching":"begins","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"if (get_variable('matchList')) {\n    SSCI.matchList = false\n    set_variable('matchList', false)\n    SSCI.log('Will match room listing', 'white')\n} else {\n    SSCI.matchList = true\n    set_variable('matchList', true)\n    SSCI.log('Will match priority listing', 'white')\n}"}],"text":"hlist","items":[]},{"type":"alias","name":"Enable/Disable Break After Kill Mode - hbreak","enabled":true,"id":82,"matching":"begins","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"if (get_variable('break')) {\n    SSCI.break = false\n    set_variable('break', false)\n    SSCI.log('Will continue after kill.', 'white')\n} else {\n    SSCI.break = true\n    set_variable('break', true)\n    SSCI.log('Will break after kill.', 'white')\n}"}],"text":"hbreak","items":[]},{"type":"alias","name":"Enable/Disable Break Threshold","enabled":true,"id":169,"matching":"regexp","whole_words":false,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"set_variable('breakThreshold', args[1])\nSSCI.breakThreshold = args[1]"}],"text":"^hbreakthreshold ([0-9]*)$"}],"actions":[]},{"type":"trigger","name":"Slain","enabled":true,"id":5,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^(You) have slain a.*$|^.*has been slain by (.+)\\.$","actions":[{"action":"script","script":"SSCI.freeze = false\nSSCI.frenzy = false\nSSCI.negation = false\nSSCI.delaySwarm = false\nSSCI.fever = false\nSSCI.hypertension = false\nSSCI.ambush = false\nSSCI.backhand = false\n\nvar a = new Audio('https://freesound.org/people/adcbicycle/sounds/13934/download/13934__adcbicycle__6.wav')\n//a.play()\n\nvar autoList = ['You', 'Chronoxi Starwraith', 'Feraluna Starwraith', 'Mee', 'Casimar', 'Albion', 'Mykel']\nvar onList = ''\n\nif (args[1]) {\n    onList = autoList.includes(args[1])\n} else {\n    onList = autoList.includes(args[2])\n}\n\nif (SSCI.systemEnabled === true && onList) {\n    SSCI.targetHealth = 0\n    send_command('clearqueue')\n    SSCI.findTarget()\n\n    if (SSCI.class == 'Engineer' && get_variable('useQPCBoost')) {\n        send_command('qpcboost')\n    }\n\n    if (SSCI.break) {\n        SSCI.offenseEnabled = false\n    }\n    \n    SSCI.huntingAttack()\n}\n\nvar slainMessage = ''\nvar now = new Date()\nif (SSCI.damageThisFight > 0 && SSCI.ttk > 0){\n    slainMessage = SSCI.damageThisFight + ' damage done this fight. | TTK: ' + (now.getTime() - SSCI.ttk)/1000 + 's | DPS: ' + Math.round(SSCI.damageThisFight / ((now.getTime() - SSCI.ttk)/1000))\n} else if (SSCI.damageThisFight > 0) {\n    slainMessage = SSCI.damageThisFight + ' damage done this fight.'\n} else if (SSCI.ttk > 0) {\n    slainMessage = 'TTK: ' + (now.getTime() - SSCI.ttk)/1000 + 's'\n}\n\nif (SSCI.damageThisFight > 0 || SSCI.ttk > 0){\n    SSCI.alert(slainMessage, 'lightgreen', 'darkblue')\n}\n\nSSCI.ttk = 0\nSSCI.damageThisFight = 0\nSSCI.interrupt = false"}],"items":[]},{"type":"trigger","name":"Crash - AUTO OFF","enabled":true,"id":18,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^You prepare to crash out of the room.*$","actions":[{"action":"script","script":"SSCI.systemEnabled = false\ndisplay_notice('AUTO OFF', 'white', 'black')"}],"items":[]},{"type":"keybind","name":"","enabled":true,"id":10,"key":96,"actions":[{"action":"script","script":"if (get_variable('debug') == true) {SSCI.log('I am attacking ' + get_variable('tar'), 'white')}\nSSCI.systemEnabled = true\nSSCI.offenseEnabled = true\nSSCI.huntingAttack()"}],"key_alt":false,"key_ctrl":false,"key_shift":false,"items":[]},{"type":"keybind","name":"","enabled":true,"id":32,"key":111,"actions":[{"action":"script","script":"if (SSCI.systemEnabled === true) {\n  SSCI.systemEnabled = false\n  display_notice(\"Combat implant disabled\", 'white', 'black')\n} else {\n  SSCI.systemEnabled = true\n  display_notice(\"Combat implant enabled\", 'white', 'black')\n}"}],"key_alt":false,"key_ctrl":false,"key_shift":false,"items":[]},{"type":"alias","name":"Heal","enabled":true,"id":115,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"if (SSCI.class == 'Nanoseer') {\n  send_command('NANO REPAIR')\n} else if (SSCI.class == 'Fury') {\n  send_command('KITH SUFFUSE')\n} else if (SSCI.class == 'Scoundrel') {\n  send_command('STIM')\n} else if (SSCI.class == 'B.E.A.S.T.') {\n  send_command('suit support')\n} else if (SSCI.class == 'Engineer') {\n  send_command('operate stimjector')\n}"}],"text":"h","items":[]},{"type":"alias","name":"Add to hunting list - hadd <mob>","enabled":true,"id":13,"matching":"regexp","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"display_notice('Adding: ' + args[1] + ' to list', 'white', 'black')\nlet newList = get_variable('killList')\nnewList.push(args[1])\nset_variable('killList', newList)"}],"text":"hadd (.+)","items":[]},{"type":"alias","name":"Remove from hunting list - hremove <mob>","enabled":true,"id":14,"matching":"regexp","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"display_notice('Removing: ' + args[1] + ' from list', 'white', 'black')\n\nlet newList = get_variable('killList')\nnewList = newList.filter(item => item !== args[1]);\n\nset_variable('killList', newList)"}],"text":"hremove (.+)","items":[]},{"type":"alias","name":"Save Hunting List To Backup - hsave","enabled":true,"id":15,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"let newSave = get_variable('killList')\nset_variable('killListBackup', newSave)\ndisplay_notice('Hunt List Saved', 'white', 'black')\n"}],"text":"hsave","items":[]},{"type":"alias","name":"Load Hunting List From Backup - hload","enabled":true,"id":16,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"let backupList = get_variable('killListBackup')\nset_variable('killList', backupList)\ndisplay_notice('Hunt List Loaded from Backup', 'white', 'black')"}],"text":"hload","items":[]},{"type":"alias","name":"Show Hunting Targets - hshow","enabled":true,"id":17,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"let killList = get_variable('killList')\nfor (i=0; i<killList.length; i++) {\n    display_notice(killList[i], 'white', 'black')\n}"}],"text":"hshow","items":[]},{"type":"alias","name":"Item Priority - hup/hdown <mob>","enabled":true,"id":52,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"var list = get_variable('killList')\nvar nameIndex = list.indexOf(args[2])\nvar name = list[nameIndex]\n\nif (list[nameIndex-1] && nameIndex && args[1] === 'hup') {\n    list[nameIndex] = list[nameIndex - 1]\n    list[nameIndex-1] = name\n} else if (list[nameIndex+1] && nameIndex && args[1] === 'hdown') {\n    list[nameIndex] = list[nameIndex + 1]\n    list[nameIndex+1] = name\n}\n\nset_variable('killList', list)\n\nfor (i=0; i<list.length; i++) {\n    if(list[i] === name){\n        display_notice(list[i], 'gold', 'black')\n    } else {\n        display_notice(list[i])\n    }\n}"}],"text":"^(hup|hdown) (.+)$","items":[]},{"type":"alias","name":"Heal Toggle - hheal","enabled":true,"id":81,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"if (get_variable('useHeal')) {\n    set_variable('useHeal', false)\n    SSCI.useHeal = false\n    SSCI.log('HEAL OFF', 'white')\n} else {\n    set_variable('useHeal', true)\n    SSCI.useHeal = true\n    SSCI.log('HEAL ON', 'white')\n}"}],"text":"hheal","items":[]},{"type":"alias","name":"Kill","enabled":true,"id":120,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"if (get_variable('debug') == true) {SSCI.log('I am attacking ' + get_variable('tar'), 'white')}\nSSCI.systemEnabled = true\nSSCI.offenseEnabled = true\nSSCI.huntingAttack()"}],"text":"k","items":[]}],"actions":[]},{"type":"group","name":"Generic","enabled":true,"id":4,"items":[{"type":"group","name":"Interrupts","enabled":true,"id":147,"items":[{"type":"trigger","name":"Super - Interrupt","enabled":true,"id":148,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^Throwing back its grizzled head, a sly cania lets out a high-pitched, wavering howl.$|^A sluggish atzaparaki shakes off some of its torpor and draws in a deep breath, its sides beginning to swell alarmingly.$|^Light begins to focus deep within the body of a salt-crusted quartz creeper, growing to an almost painful radiance.$","actions":[{"action":"script","script":"SSCI.interrupt = true\n\nSSCI.alert('interrupting super', 'white', 'blue')\nSSCI.huntingAttack()\n"}],"items":[]}],"actions":[]},{"type":"group","name":"Travel","enabled":true,"id":149,"items":[{"type":"trigger","name":"Battlemaster Engineer Return","enabled":true,"id":125,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"A tripod-mounted wormhole generator has been set up in the center of the cracked landing pad.","actions":[{"action":"linkify","linkify":"match","linkify_backref":"1","linkify_text_type":"capture","linkify_text":"","linkify_command_type":"value","linkify_command":"turn tripod&push tripod","linkify_color":"#26aa95"}],"items":[]},{"type":"trigger","name":"Battlemaster Engineer Omni","enabled":true,"id":124,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"A tripod-mounted wormhole generator has been set up in the center of the repair bay.","actions":[{"action":"linkify","linkify":"match","linkify_backref":"1","linkify_text_type":"capture","linkify_text":"","linkify_command_type":"value","linkify_command":"turn tripod&push tripod","linkify_color":"#26aa95"}],"items":[]}],"actions":[]},{"type":"trigger","name":"Left battle","enabled":true,"id":6,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"You are no longer in the throes of battle.","actions":[{"action":"highlight","highlight":"match","highlight_backref":"1","highlight_fg":"#9488f6","highlight_bg":"#000000"}],"items":[]},{"type":"trigger","name":"Hide Queue","enabled":false,"id":7,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^\\[Queue\\]: You will attempt to do.*$|^Your swarm is already focused upon a multistrike.*$","actions":[{"action":"gag"}],"items":[]},{"type":"trigger","name":"Add Damage Per Kill","enabled":true,"id":57,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"Damage Dealt: (.+) .+","actions":[{"action":"script","script":"if (SSCI.ttk == 0) {\n    var now = new Date()\n    SSCI.ttk = now.getTime()\n}\nSSCI.damageThisFight += parseInt(args[1])"}],"items":[]},{"type":"trigger","name":"Not following","enabled":true,"id":87,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"(.+) is no longer following you.","actions":[{"action":"script","script":"SSCI.log(args[1] + ' Stopped Following!', 'darkred')"}],"items":[]},{"type":"alias","name":"Crash + Direction - c<dir>","enabled":true,"id":33,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"send_command('cq')\nsend_command('crash ' + args[1])"}],"text":"c(nw|ne|se|sw|n|s|e|w|u|d|in|out)","items":[]},{"type":"alias","name":"Javascript - js","enabled":true,"id":31,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"SSCI.log(eval(args[1]))"}],"text":"^js (.+)$","items":[]}],"actions":[]},{"type":"group","name":"Nanoseer","enabled":false,"id":21,"items":[{"type":"group","name":"Configuration","enabled":true,"id":153,"items":[{"type":"alias","name":"Enable/Disable Freeze","enabled":true,"id":42,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"if (get_variable('useFreeze')) {\n    set_variable('useFreeze', false)\n    SSCI.useFreeze = false\n    SSCI.log('FREEZE OFF', 'white')\n} else {\n    set_variable('useFreeze', true)\n    SSCI.useFreeze = true\n    SSCI.log('FREEZE ON', 'white')\n}"}],"text":"hfreeze","items":[]},{"type":"alias","name":"Enable/Disable Multistrike","enabled":true,"id":43,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"if (get_variable('useMultistrike')) {\n    set_variable('useMultistrike', false)\n    SSCI.useMultistrike = false\n    SSCI.log('MULTISTRIKE OFF', 'white')\n} else {\n    set_variable('useMultistrike', true)\n    SSCI.useMultistrike = true\n    SSCI.log('MULTISTRIKE ON', 'white')\n}"}],"text":"^hmulti(strike)?$","items":[]},{"type":"alias","name":"Enable/Disable Frenzy","enabled":true,"id":45,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"if (get_variable('useFrenzy')) {\n    set_variable('useFrenzy', false)\n    SSCI.useFrenzy = false\n    SSCI.log('FRENZY OFF', 'white')\n} else {\n    set_variable('useFrenzy', true)\n    SSCI.useFrenzy = true\n    SSCI.log('FRENZY ON', 'white')\n}"}],"text":"hfrenzy","items":[]},{"type":"alias","name":"Enable/Disable Delay Swarm","enabled":true,"id":55,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"if (get_variable('useDelay')) {\n    set_variable('useDelay', false)\n    SSCI.useDelay = false\n    SSCI.log('DELAY OFF', 'white')\n} else if (args[1] == '' && get_variable('delayAttack') == '') {\n    SSCI.alert('Delayed attack is not configured. Please provide a delayed attack to use\\nUsage: hdelay <attack>', 'red', 'black')\n    return\n} else {\n    if (args[1] != '') {set_variable('delayAttack', args[1])}\n    set_variable('useDelay', true)\n    SSCI.useDelay = true\n    SSCI.log('DELAY ON', 'white')\n}"}],"text":"hdelay[ ]?(.*)","items":[]},{"type":"alias","name":"Enable/Disable Point Zero","enabled":true,"id":162,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"if (get_variable('usePointZero')) {\n    set_variable('usePointZero', false)\n    SSCI.usePointZero = false\n    SSCI.log('Point Zero Disabled', 'white')\n} else {\n    set_variable('usePointZero', true)\n    SSCI.usePointZero = true\n    SSCI.log('Point Zero Enabled', 'white')\n}"}],"text":"hpointzero"},{"type":"alias","name":"Enable/Disable Speedup","enabled":true,"id":163,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"if (get_variable('useSpeedup')) {\n    set_variable('useSpeedup', false)\n    SSCI.useSpeedup = false\n    SSCI.log('Speedup Disabled', 'white')\n} else {\n    set_variable('useSpeedup', true)\n    SSCI.useSpeedup = true\n    SSCI.log('Speedup Enabled', 'white')\n}"}],"text":"hspeedup"},{"type":"alias","name":"Enable/Disable Negation","enabled":true,"id":164,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"if (get_variable('useNegation')) {\n    set_variable('useNegation', false)\n    SSCI.useNegation = false\n    SSCI.log('Negation Disabled', 'white')\n} else {\n    set_variable('useNegation', true)\n    SSCI.useNegation = true\n    SSCI.log('Negation Enabled', 'white')\n}"}],"text":"hnegation"},{"type":"alias","name":"Nano Abilities - hnano","enabled":true,"id":90,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"var abilities = ''\nabilities += 'Freeze: ' + get_variable('useFreeze') + '\\n'\nabilities += 'Multistrike: ' + get_variable('useMultistrike') + '\\n'\nabilities += 'DelaySwarm: ' + get_variable('useDelay') + '\\n'\nabilities += 'UseFrenzy: ' + get_variable('useFrenzy') + '\\n'\nabilities += 'Frenzy Status: ' + SSCI.frenzy + '\\n'\nabilities += 'Use Point Zero: ' + get_variable('usePointZero') + '\\n'\nabilities += 'Point Zero Status: ' + SSCI.pointZero + '\\n'\nabilities += 'Use Speedup: ' + get_variable('useSpeedup') + '\\n'\nabilities += 'Speedup Status: ' + SSCI.speedUp + '\\n'\nabilities += 'Use Negation: ' + get_variable('useNegation') + '\\n'\nabilities += 'Negation Status: ' + SSCI.negation + '\\n'\n\nSSCI.log(abilities, 'white')"}],"text":"hnano","items":[]}],"actions":[]},{"type":"group","name":"Shortcut","enabled":true,"id":154,"items":[{"type":"alias","name":"Void Soothe","enabled":true,"id":46,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"command","command":"Void Soothe","prefix_suffix":true}],"text":"vs","items":[]},{"type":"alias","name":"Channel/Swap Empyreal","enabled":true,"id":22,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"var empyreal = {\n    a: \"architect\",\n    c: \"conqueror\",\n    p: \"progenitor\",\n    s: \"sunderer\",\n    t: \"traveller\"\n}\n\nvar command = {\n    ch: \"oblivion channel \",\n    sw: \"oblivion swap \"\n}\n\nsend_command(command[args[1]] + empyreal[args[2]])"}],"text":"^(ch|sw)(a|c|p|s|t)$","items":[]},{"type":"alias","name":"Limb drain","enabled":true,"id":53,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"limbs = {\n    ll: 'left leg',\n    rl: 'right leg',\n    ra: 'right arm',\n    la: 'left arm'\n}\n\nsend_command('limbdrain ' + get_variable('tar') + ' ' + limbs[args[1]])"}],"text":"l(ll|rl|la|ra)","items":[]},{"type":"alias","name":"Fly","enabled":true,"id":44,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"command","command":"levitate","prefix_suffix":true}],"text":"fly","items":[]},{"type":"alias","name":"Heal","enabled":true,"id":152,"matching":"exact","whole_words":false,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"command","command":"nano repair","prefix_suffix":false}],"text":"heal"},{"type":"alias","name":"Delay","enabled":true,"id":47,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"var command = {\n    s: 'swarm'\n}\n\nsend_command('delay ' + command[args[1]])"}],"text":"^d(s)$","items":[]}],"actions":[]},{"type":"group","name":"Ability Activations","enabled":true,"id":161,"items":[{"type":"trigger","name":"Leaving Room","enabled":true,"id":156,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^You walk to the","actions":[{"action":"script","script":"SSCI.speedup = false\nSSCI.pointZero = false"}]},{"type":"trigger","name":"Delay Swarm On","enabled":true,"id":54,"matching":"substring","whole_words":true,"case_sensitive":true,"text":"Quickly, you program a delayed swarm attack","actions":[{"action":"script","script":"SSCI.delaySwarm = true"}],"items":[]},{"type":"trigger","name":"Freeze on","enabled":true,"id":29,"matching":"substring","whole_words":true,"case_sensitive":true,"text":"You brush your fingertips across","actions":[{"action":"script","script":"SSCI.freeze = true"}],"items":[]},{"type":"trigger","name":"Freeze off","enabled":false,"id":30,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^.+has cured the effects of Frozen.$","actions":[{"action":"script","script":"SSCI.freeze = false\nSSCI.huntingAttack()"}],"items":[]},{"type":"trigger","name":"Frenzy Active","enabled":true,"id":39,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^A dark wave of madness rolls through your thoughts.*$|^You have already descended into a frenzy","actions":[{"action":"script","script":"SSCI.frenzy = true\nSSCI.huntingAttack()"}],"items":[]},{"type":"trigger","name":"Rage off","enabled":false,"id":40,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"You break out of your frenzy.","actions":[{"action":"script","script":"SSCI.frenzy = false"}],"items":[]},{"type":"trigger","name":"Frenzy Down","enabled":false,"id":38,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"You break out of your frenzy.","actions":[{"action":"script","script":"SSCI.alert('Frenzy Down', 'white', 'red')"}],"items":[]},{"type":"trigger","name":"Negation Active","enabled":true,"id":166,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"aura descends over you like a giant, protective shadow.$|^You are already prepared to negate damage.$","actions":[{"action":"script","script":"SSCI.negation = true\nSSCI.huntingAttack()"}]},{"type":"trigger","name":"Negation Down","enabled":false,"id":36,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"The shadow of the Progenitor's protection springs to life around you, absorbing the damaging attack before lifting away from you, the air around you growing subtly lighter.","actions":[{"action":"script","script":"SSCI.alert('Negation Down', 'white', 'red')"}],"items":[]},{"type":"trigger","name":"Multistrike Active","enabled":true,"id":20,"matching":"substring","whole_words":true,"case_sensitive":true,"text":"You focus intently to direct a portion of your swarm towards","actions":[{"action":"script","script":"SSCI.multistrike = true\nSSCI.huntingAttack()"}],"items":[]},{"type":"trigger","name":"Multistrike Return","enabled":true,"id":19,"matching":"regexp","whole_words":false,"case_sensitive":true,"text":"^The group of nanites returns back to you.$|^The nanites disperse. no longer striking","actions":[{"action":"script","script":"SSCI.multistrike = false\nSSCI.huntingAttack()"}],"items":[]},{"type":"trigger","name":"Speedup Active","enabled":true,"id":157,"matching":"regexp","whole_words":false,"case_sensitive":true,"text":"^You snap your fingers, and time starts flowing faster|^Time has already been distorted|^Time has been strangely distorted here.$","actions":[{"action":"script","script":"SSCI.speedup = true\nSSCI.huntingAttack()"}]},{"type":"trigger","name":"Speedup Inactive","enabled":true,"id":159,"matching":"exact","whole_words":false,"case_sensitive":true,"text":"The time distortion effect ends.","actions":[{"action":"script","script":"SSCI.speedUp = false\nSSCI.huntingAttack()"}]},{"type":"trigger","name":"Point Zero Active","enabled":true,"id":158,"matching":"regexp","whole_words":false,"case_sensitive":true,"text":"^The air crackles and contracts|^Lifting your hand, you call upon the void within|^Air swirls around a point of absolute coldness here.$","actions":[{"action":"script","script":"SSCI.pointZero = true\nSSCI.huntingAttack()"}]},{"type":"trigger","name":"Point Zero Inactive","enabled":true,"id":160,"matching":"regexp","whole_words":false,"case_sensitive":true,"text":"^The swirling point zero suddenly collapses","actions":[{"action":"script","script":"SSCI.pointZero = false"}]},{"type":"trigger","name":"Empyreal Channeling","enabled":true,"id":165,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^You reach into your connection to the void","actions":[{"action":"script","script":"if (get_variable('my_combat')) {\n    SSCI.huntingAttack()\n}"}]},{"type":"trigger","name":"Repair Used","enabled":true,"id":167,"matching":"regexp","whole_words":false,"case_sensitive":true,"text":"^You inhale a cloud of your swarm","actions":[{"action":"script","script":"SSCI.healReady = false\nSSCI.huntingAttack()"}]},{"type":"trigger","name":"Repair Available","enabled":true,"id":168,"matching":"regexp","whole_words":false,"case_sensitive":true,"text":"^Your nanites can again repair your body.$","actions":[{"action":"script","script":"SSCI.healReady = true\nSSCI.huntingAttack()"},{"action":"highlight","highlight":"line","highlight_backref":"1","highlight_fg":"#82ea81","highlight_bg":"#000000"}]}],"actions":[]},{"type":"alias","name":"Wakeup Nanoseer","enabled":true,"id":155,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"command","command":"nano charge","prefix_suffix":true},{"action":"waitfor","text":"^You start generating nanites.$|^You're already repairing your nanites.$","matching":"regexp","whole_words":false,"case_sensitive":false,"expire":"6"},{"action":"command","command":"nano rush on","prefix_suffix":true},{"action":"waitfor","text":"^Inhaling a cloud of your swarm|^Your nanites are already boosting|haven.t learned","matching":"regexp","whole_words":false,"case_sensitive":false,"expire":"6"},{"action":"command","command":"nano protect on","prefix_suffix":true}],"text":"wakeup"},{"type":"trigger","name":"Queue Attack Nano","enabled":true,"id":9,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^You brush your fingertips across|^Focusing on becoming more attuned","actions":[{"action":"script","script":"SSCI.huntingAttack()"}],"items":[]}],"actions":[]},{"type":"group","name":"Fury","enabled":true,"id":69,"items":[{"type":"trigger","name":"Kithblade Shaped","enabled":true,"id":70,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"Resting your hand on the hilt of","actions":[{"action":"script","script":"SSCI.bladeshape = true\nif (SSCI.systemEnabled === true) {\n    SSCI.huntingAttack()\n}"}],"items":[]},{"type":"trigger","name":"Kithblade Unshaped","enabled":true,"id":86,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"The blade of .+ shimmers and warps.+","actions":[{"action":"script","script":"SSCI.alert('bladeshape off', 'white', 'lightred')\nSSCI.bladeshape = false\n\nvar a = new Audio('https://freesound.org/people/Stopmotionbros/sounds/438991/download/438991__stopmotionbros__wind.m4a')\na.play()"},{"action":"highlight","highlight":"line","highlight_backref":"1","highlight_fg":"#ffbc78","highlight_bg":"#000000"}],"items":[]},{"type":"trigger","name":"Fever On","enabled":true,"id":79,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"Your mind extends towards the vulnerabilities of .+ body, and with your connection to the universe's energy, you begin to increase the heat in every cell, flushing .+ with a raging fever.","actions":[{"action":"script","script":"SSCI.fever = true\nSSCI.interrupt = false"}],"items":[]},{"type":"trigger","name":"Unstoppable On","enabled":true,"id":71,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"Your rage overwhelms you, you become unstoppable!","actions":[{"action":"script","script":"SSCI.unstoppable = true\n\nvar reflexOn = reflex_find_by_name('trigger', 'Queue Attack Fury', false, false, 'SSCI').enabled\n\nif (SSCI.systemEnabled && reflexOn) {\n    SSCI.huntingAttack()\n}"}],"items":[]},{"type":"trigger","name":"Unstoppable Off","enabled":true,"id":72,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"You no longer feel unstoppable!","actions":[{"action":"script","script":"SSCI.unstoppable = false\nSSCI.log('NO UNSTOPPABLE', 'red')\n\nvar reflexOn = reflex_find_by_name('trigger', 'Queue Attack Fury', false, false, 'SSCI').enabled\n\nif (SSCI.systemEnabled && reflexOn) {\n    SSCI.huntingAttack()\n}"}],"items":[]},{"type":"trigger","name":"Hypertension On","enabled":true,"id":85,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^Tossing .+ to your off hand, you extend a bloodied palm towards .+ and then clench it into a fist, feeling .+ heart spasm and beat more quickly within .+ chest.$","actions":[{"action":"script","script":"SSCI.hypertension = true"}],"items":[]},{"type":"trigger","name":"Heal Ready","enabled":true,"id":77,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"It is safe to suffuse yourself with kith energy again.","actions":[{"action":"script","script":"SSCI.healReady = true\n\nvar reflexOn = reflex_find_by_name('trigger', 'Queue Attack Fury', false, false, 'SSCI').enabled\n\nif (SSCI.systemEnabled && reflexOn) {\n    SSCI.huntingAttack()\n}"},{"action":"highlight","highlight":"line","highlight_backref":"1","highlight_fg":"#51d051","highlight_bg":"#000000"}],"items":[]},{"type":"trigger","name":"Heal Used","enabled":true,"id":78,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"The heart of distant stars and the fire at the center of every planet shimmers in your mind, and you draw upon that power, filling your body with an energy that heals your wounds and suffuses you with a flush of health.","actions":[{"action":"script","script":"SSCI.healReady = false\n\nvar reflexOn = reflex_find_by_name('trigger', 'Queue Attack Fury', false, false, 'SSCI').enabled\n\nif (SSCI.systemEnabled && reflexOn) {\n    SSCI.huntingAttack()\n}"}],"items":[]},{"type":"trigger","name":"Berserk On","enabled":true,"id":74,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^You go berserk, flailing .*$","actions":[{"action":"script","script":"SSCI.berserk = true\n\nvar reflexOn = reflex_find_by_name('trigger', 'Queue Attack Fury', false, false, 'SSCI').enabled\n\nif (SSCI.systemEnabled && reflexOn) {\n    SSCI.huntingAttack()\n}"}],"items":[]},{"type":"trigger","name":"Berserk Off","enabled":true,"id":75,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"You are no longer berserk.","actions":[{"action":"script","script":"SSCI.berserk = false\n\nvar reflexOn = reflex_find_by_name('trigger', 'Queue Attack Fury', false, false, 'SSCI').enabled\n\nif (SSCI.systemEnabled && reflexOn) {\n    SSCI.huntingAttack()\n}"}],"items":[]},{"type":"trigger","name":"Attack after Inferno","enabled":true,"id":118,"matching":"substring","whole_words":true,"case_sensitive":true,"text":"The searing wave of your inferno engulfs","actions":[{"action":"script","script":"SSCI.systemEnabled = true\nSSCI.offenseEnabled = true\nSSCI.infernoCharging = false\n\nSSCI.huntingAttack()"}],"items":[]},{"type":"trigger","name":"Queue Attack Fury","enabled":true,"id":73,"matching":"regexp","whole_words":false,"case_sensitive":true,"text":"^You flow smoothly into the.+stance.+|^You flow out of your stance.+|^Your mind extends towards the vulnerabilities of.*$","actions":[{"action":"script","script":"SSCI.huntingAttack()\n"}],"items":[]},{"type":"alias","name":"Awaken Fury","enabled":true,"id":143,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"command","command":"kith harden","prefix_suffix":true},{"action":"waitfor","text":"^You focus on hardening your skin|^Your internals are already hardened","matching":"regexp","whole_words":false,"case_sensitive":false,"expire":"10"},{"action":"command","command":"kith warmth","prefix_suffix":true},{"action":"waitfor","text":"^You focus on warming up your skin|^You're already protected","matching":"regexp","whole_words":false,"case_sensitive":false,"expire":"10"},{"action":"command","command":"kith balancing","prefix_suffix":true},{"action":"waitfor","text":"^You focus on your kith to prevent falling.|^You're already balancing","matching":"regexp","whole_words":false,"case_sensitive":false,"expire":"10"},{"action":"command","command":"kith firewreathe","prefix_suffix":true}],"text":"wakeup","items":[]},{"type":"alias","name":"Berserk Toggle - hberserk","enabled":true,"id":76,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"if (get_variable('useBerserk')) {\n    set_variable('useBerserk', false)\n    SSCI.useBerserk = false\n    SSCI.log('BERSERK OFF', 'white')\n} else {\n    set_variable('useBerserk', true)\n    SSCI.useBerserk = true\n    SSCI.log('BERSERK ON', 'white')\n}"}],"text":"hberserk","items":[]},{"type":"alias","name":"Fever Toggle - hfever","enabled":true,"id":80,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"if (get_variable('useFever')) {\n    set_variable('useFever', false)\n    SSCI.useFever = false\n    SSCI.log('FEVER OFF', 'white')\n} else {\n    set_variable('useFever', true)\n    SSCI.useFever = true\n    SSCI.log('FEVER ON', 'white')\n}"}],"text":"hfever","items":[]},{"type":"alias","name":"Fury Abilities - hfury","enabled":true,"id":84,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"var abilities = ''\nabilities += 'Berserk: ' + get_variable('useBerserk') + '\\n'\nabilities += 'Fever: ' + get_variable('useFever') + '\\n'\nabilities += 'Heal: ' + get_variable('useHeal') + '\\n'\nabilities += 'Bladeshape: ' + SSCI.bladeshape + '\\n'\nabilities += 'Desired blade shape set to: ' + get_variable('kithbladeshape') + '\\n'\nabilities += 'Goal: ' + SSCI.goal + '\\n'\n\nSSCI.log(abilities, 'white')"}],"text":"hfury","items":[]},{"type":"alias","name":"Set Bladeshape","enabled":true,"id":121,"matching":"regexp","whole_words":false,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"set_variable('kithbladeshape', args[1])\nSSCI.log('Set desired kithblade shape to: ' + get_variable('kithbladeshape'))"}],"text":"^hblade (.+)","items":[]},{"type":"alias","name":"Inferno - inf","enabled":true,"id":116,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"command","command":"KITH INFERNO","prefix_suffix":true}],"text":"inf","items":[]},{"type":"keybind","name":"","enabled":true,"id":117,"key":110,"actions":[{"action":"script","script":"var dt = new Date()\nSSCI.ttk = dt.getTime()\n\nSSCI.infernoCharging = true\n\nsend_command('kith inferno')"}],"key_alt":false,"key_ctrl":false,"key_shift":false,"items":[]},{"type":"keybind","name":"","enabled":true,"id":122,"key":106,"actions":[{"action":"command","command":"kith suffuse"}],"key_alt":false,"key_ctrl":false,"key_shift":false,"items":[]}],"actions":[]},{"type":"group","name":"Scoundrel","enabled":false,"id":89,"items":[{"type":"trigger","name":"Ambush Used","enabled":true,"id":91,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^Without warning, you snatch .* from your belt and fire it from the hip at .*, moving too rapidly to be spotted until the bullet is already leaving the barrel.$|^You cannot ambush anyone, as you already are fighting!$","actions":[{"action":"script","script":"SSCI.ambush = true\nSSCI.huntingAttack()"}],"items":[]},{"type":"trigger","name":"Rapidfire Used","enabled":true,"id":92,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"Placing your hand on the hammer of .*, you quickly fire off two shots at .* in rapid succession.","actions":[{"action":"script","script":"SSCI.rapidfire = true"}],"items":[]},{"type":"trigger","name":"Rapidfire Ready","enabled":true,"id":93,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"You are again ready to dualshoot.","actions":[{"action":"script","script":"SSCI.rapidfire = false"}],"items":[]},{"type":"trigger","name":"Stim Used","enabled":true,"id":95,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"You jam a stim into your vein and healing nanites surge through your body.","actions":[{"action":"script","script":"SSCI.healReady = false"}],"items":[]},{"type":"trigger","name":"Stim Ready","enabled":true,"id":96,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"You can again use a stim.","actions":[{"action":"script","script":"SSCI.healReady = true\nSSCI.huntingAttack()"}],"items":[]},{"type":"trigger","name":"Queue Attack Scoundrel","enabled":true,"id":94,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^Drawing your shoulder back, you fling a handful.*$|^.*kicks in your grip and an explosive noise cracks.*$|^.*you quickly fire off two shots at.*$|^You jam a stim into your vein and healing nanites surge through your body.$|^Spinning.*motion is effortless and smooth.$|jingling, rattling percussion.$","actions":[{"action":"script","script":"SSCI.huntingAttack()"}],"items":[]},{"type":"trigger","name":"Spin if empty and no target","enabled":true,"id":98,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"There is nothing and nobody here of that name - find a different target for your bomb.","actions":[{"action":"script","script":"if (SSCI.bullets == 0) {\n    send_command('gun spin')\n}"}],"items":[]},{"type":"alias","name":"Construct Ripper - rip","enabled":true,"id":97,"matching":"regex","whole_words":false,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"send_command('ied construct ripper from ' + args[1])"}],"text":"^rip (.*)","items":[]},{"type":"alias","name":"Ambush Toggle - hambush","enabled":true,"id":99,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"if (get_variable('useAmbush')) {\n    set_variable('useAmbush', false)\n    SSCI.useAmbush = false\n    SSCI.log('AMBUSH OFF', 'white')\n} else {\n    set_variable('useAmbush', true)\n    SSCI.useAmbush = true\n    SSCI.log('AMBUSH ON', 'white')\n}"}],"text":"hambush","items":[]},{"type":"alias","name":"Rapidfire Toggle - hrapidfire ","enabled":true,"id":100,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"if (get_variable('useRapidfire')) {\n    set_variable('useRapidfire', false)\n    SSCI.useRapidfire = false\n    SSCI.log('RAPIDFIRE OFF', 'white')\n} else {\n    set_variable('useRapidfire', true)\n    SSCI.useRapidfire = true\n    SSCI.log('RAPIDFIRE ON', 'white')\n}"}],"text":"hrapidfire","items":[]},{"type":"alias","name":"Scoundrel Abilities - hscoundrel","enabled":true,"id":101,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"var abilities = ''\nabilities += 'Ambush: ' + get_variable('useAmbush') + '\\n'\nabilities += 'Rapidfire: ' + get_variable('useRapidfire') + '\\n'\nabilities += 'Heal: ' + get_variable('useHeal') + '\\n'\nabilities += 'Bullets: ' + SSCI.bullets + '\\n'\n\nSSCI.log(abilities, 'white')"}],"text":"hscoundrel","items":[]}],"actions":[]},{"type":"group","name":"B.E.A.S.T.","enabled":false,"id":102,"items":[{"type":"group","name":"Configuration","enabled":true,"id":171,"items":[{"type":"alias","name":"","enabled":true,"id":110,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"var abilities = ''\nabilities += 'Heal: ' + get_variable('useHeal') + '\\n'\nabilities += 'useResistance:   ' + get_variable('useResistance') + '\\n'\nabilities += 'useSerrate:      ' + get_variable('useSerrate') + '\\n'\nabilities += 'usePlasmaShield: ' + get_variable('usePlasmaShield') + '\\n'\nabilities += 'useRamset:       ' + get_variable('useRamset') + '\\n'\nabilities += 'useDampening:    ' + get_variable('useDampening') + '\\n'\nabilities += 'useJamming:      ' + get_variable('useJamming') + '\\n'\nabilities += 'resistance:   ' + SSCI.resistance + '\\n'\nabilities += 'serrate:      ' + SSCI.serrate + '\\n'\nabilities += 'plasmaShield: ' + SSCI.plasmaShield + '\\n'\nabilities += 'ramset:       ' + SSCI.ramset + '\\n'\nabilities += 'dampening:    ' + SSCI.dampening + '\\n'\nabilities += 'jamming:      ' + SSCI.jamming + '\\n'\n\nSSCI.log(abilities, 'white')"}],"text":"hbeast","items":[]},{"type":"alias","name":"Enable/Disable Resistance","enabled":true,"id":177,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"if (get_variable('useResistance')) {\n    set_variable('useResistance', false)\n    SSCI.useResistance = false\n    SSCI.log('Plasma Resistance Disabled', 'white')\n} else {\n    set_variable('useResistance', true)\n    SSCI.useResistance = true\n    SSCI.log('Plasma Resistance Enabled', 'white')\n}"}],"text":"hresistance"},{"type":"alias","name":"Enable/Disable Serrate","enabled":true,"id":178,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"if (get_variable('useSerrate')) {\n    set_variable('useSerrate', false)\n    SSCI.useSerrate = false\n    SSCI.log('Serrate Disabled', 'white')\n} else {\n    set_variable('useSerrate', true)\n    SSCI.useSerrate = true\n    SSCI.log('Serrate Enabled', 'white')\n}"}],"text":"hserrate"},{"type":"alias","name":"Enable/Disable Plasma Shield","enabled":true,"id":179,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"if (get_variable('usePlasmaShield')) {\n    set_variable('usePlasmaShield', false)\n    SSCI.usePlasmaShield = false\n    SSCI.log('Plasma Shield Disabled', 'white')\n} else {\n    set_variable('usePlasmaShield', true)\n    SSCI.usePlasmaShield = true\n    SSCI.log('Plasma Shield Enabled', 'white')\n}"}],"text":"hplasmashield"},{"type":"alias","name":"Enable/Disable Ramset","enabled":true,"id":180,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"if (get_variable('useRamset')) {\n    set_variable('useRamset', false)\n    SSCI.useRamset = false\n    SSCI.log('Ramset Disabled', 'white')\n} else {\n    set_variable('useRamset', true)\n    SSCI.useRamset = true\n    SSCI.log('Ramset Enabled', 'white')\n}"}],"text":"hramset"},{"type":"alias","name":"Enable/Disable Dampening","enabled":true,"id":181,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"if (get_variable('useDampening')) {\n    set_variable('useDampening', false)\n    SSCI.useDampening = false\n    SSCI.log('Dampening Disabled', 'white')\n} else {\n    set_variable('useDampening', true)\n    SSCI.useDampening = true\n    SSCI.log('Dampening Enabled', 'white')\n}"}],"text":"hdampening"},{"type":"alias","name":"Enable/Disable Jamming","enabled":true,"id":182,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"if (get_variable('useJamming')) {\n    set_variable('useJamming', false)\n    SSCI.useJamming = false\n    SSCI.log('Jamming Disabled', 'white')\n} else {\n    set_variable('useJamming', true)\n    SSCI.useJamming = true\n    SSCI.log('Jamming Enabled', 'white')\n}"}],"text":"hjamming"}],"actions":[]},{"type":"group","name":"Shortcuts","enabled":true,"id":175,"items":[{"type":"alias","name":"Suit Contingency","enabled":true,"id":104,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"command","command":"suit contingency","prefix_suffix":true}],"text":"con","items":[]},{"type":"alias","name":"Overclock","enabled":true,"id":105,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"command","command":"suit overclock","prefix_suffix":true}],"text":"oc","items":[]},{"type":"alias","name":"Heal","enabled":true,"id":172,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"command","command":"suit support","prefix_suffix":true}],"text":"heal"},{"type":"alias","name":"Flying","enabled":true,"id":173,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"command","command":"suit jumpjets","prefix_suffix":true}],"text":"fly"}],"actions":[]},{"type":"group","name":"Ability Activations","enabled":true,"id":170,"items":[{"type":"trigger","name":"Plasma Resistance Active","enabled":true,"id":183,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^You deploy extra heat sinks|^Your extra heat sinks are already","actions":[{"action":"script","script":"SSCI.resistance = true\nSSCI.huntingAttack()"}]},{"type":"trigger","name":"Serrate Active","enabled":true,"id":184,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^You rotate your wristblade|^You're already using","actions":[{"action":"script","script":"SSCI.serrate = true\nSSCI.huntingAttack()"}]},{"type":"trigger","name":"Ramset Active","enabled":true,"id":185,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^You key in a command and feel a thud|^You're already employing","actions":[{"action":"script","script":"SSCI.ramset = true\nSSCI.huntingAttack()"}]},{"type":"trigger","name":"Dampening Active","enabled":true,"id":186,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^You activate your B\\.E\\.A\\.S\\.T\\.'s EM shielding protocol\\.$|^You're already utili.ing measures to mitigate EM attacks\\.$","actions":[{"action":"script","script":"SSCI.dampening = true\nSSCI.huntingAttack()"}]},{"type":"trigger","name":"Jamming Active","enabled":true,"id":187,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^You engage your radar jamming|^You are already jamming","actions":[{"action":"script","script":"SSCI.jamming = true\nSSCI.huntingAttack()"}]},{"type":"trigger","name":"Backhand Used","enabled":true,"id":103,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^You overdrive your suit's movement circuits, delivering a vicious backhanded blow.*","actions":[{"action":"script","script":"SSCI.backhand = true\nSSCI.huntingAttack()"}],"items":[]},{"type":"trigger","name":"Support Used","enabled":true,"id":107,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^You activate your suit's emergency life support system.*$","actions":[{"action":"script","script":"SSCI.healReady = false\nSSCI.huntingAttack()"}],"items":[]},{"type":"trigger","name":"Support Ready","enabled":true,"id":108,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"Your HUD indicates that you may use your life support system once again.","actions":[{"action":"script","script":"SSCI.healReady = true\nSSCI.huntingAttack()"},{"action":"highlight","highlight":"line","highlight_backref":"1","highlight_fg":"#6dd4e1","highlight_bg":"#000000"}],"items":[]}],"actions":[]},{"type":"trigger","name":"Queue Attack BEAST","enabled":true,"id":106,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^With servo-assisted might, you drive your wristblade.*$","actions":[{"action":"script","script":"SSCI.huntingAttack()"}],"items":[]},{"type":"alias","name":"Wakeup BEAST","enabled":true,"id":176,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"command","command":"plasma heatup on","prefix_suffix":true}],"text":"wakeup"}],"actions":[]},{"type":"group","name":"Engineer","enabled":false,"id":109,"items":[{"type":"group","name":"Turret Construction","enabled":true,"id":129,"items":[{"type":"alias","name":"Construct Turret","enabled":true,"id":128,"matching":"regexp","whole_words":false,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"if (args[1] == '' || args[2] == '') {\n    SSCI.log('Usage: hturret <mod> <weapon> <follow up command>', 'darkyellow')\n} else {\n    set_variable('turretMod', args[1])\n    set_variable('turretWeapon', args[2])\n    set_variable('turretFollowup', args[3])\n    set_variable('turretAlias', true)\n    send_command('turret construct turret')\n}\n"}],"text":"hturret ([a-z]+) ([a-z]+)[ ]?(.*)","items":[]},{"type":"trigger","name":"Frame Constructed","enabled":true,"id":130,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^Circuitboards, robotic servos, power sources, and an operating system come together under your capable hands to form a modular weapons turret","actions":[{"action":"script","script":"if (get_variable('turretAlias') == true) {\n    send_command('turret install ' + get_variable('turretWeapon'))\n}"}],"items":[]},{"type":"trigger","name":"Weapon Mounted","enabled":true,"id":131,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^Smoothly, you socket the .* barrel|That barrel is already installed on the turret","actions":[{"action":"script","script":"if (get_variable('turretAlias') != true) {return;}\n\nif (get_variable('turretMod').toUpperCase() == 'QPC') {\n    send_command('gadget construct qpc')\n} else {\n    send_command('turret mod ' + get_variable('turretMod'))\n    if (get_variable('turretFollowup') != '') {send_command(get_variable('turretFollowup'))}\n    set_variable('turretAlias', false)\n    SSCI.log('Turret ready!', 'white')\n}"}],"items":[]},{"type":"trigger","name":"Mod Mounted","enabled":true,"id":133,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^Metal ratchets satisfyingly into place and code whirrs down","actions":[{"action":"script","script":"if (get_variable('turretAlias') != true) {return;}\nsend_command(get_variable('turretFollowup'))\nset_variable('turretAlias', false)\nSSCI.log('Turret ready!', 'white')"}],"items":[]},{"type":"trigger","name":"QPC Ready","enabled":true,"id":132,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^Using your vast engineering knowledge, you effortlessly construct a cylindrical quantum power cell","actions":[{"action":"script","script":"if (get_variable('turretAlias') != true) {\n    return;\n} else if (get_variable('turretMod').toUpperCase() == 'QPC') {\n    send_command('turret mod qpc')\n}"}],"items":[]},{"type":"alias","name":"Deploy Sentry Turret","enabled":true,"id":134,"matching":"regexp","whole_words":false,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"send_command('turret deploy ' + args[1])"},{"action":"waitfor","text":"Dropping a turret with a mounted flamethrower barrel","matching":"substring","whole_words":false,"case_sensitive":false,"expire":"10"},{"action":"command","command":"workstation deploy","prefix_suffix":false},{"action":"waitfor","text":"You fold down the legs of your workstation","matching":"substring","whole_words":false,"case_sensitive":false,"expire":"10"},{"action":"command","command":"turret sentrymode","prefix_suffix":true},{"action":"waitfor","text":"Fingers whirring across the holokeyboard","matching":"substring","whole_words":false,"case_sensitive":false,"expire":"10"},{"action":"command","command":"workstation pack","prefix_suffix":true}],"text":"^deploysentry[ ]?([0-9]*)$","items":[]}],"actions":[]},{"type":"group","name":"Utility","enabled":true,"id":136,"items":[{"type":"trigger","name":"Airdrop Return","enabled":true,"id":123,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^An aerodynamic drone flies in, decelerating rapidly. It drops a supply of spare parts into your hands.$","actions":[{"action":"highlight","highlight":"line","highlight_backref":"1","highlight_fg":"#00c7ff","highlight_bg":"#000000"},{"action":"script","script":"if (get_variable('refillParts') == true) {\n    if (SSCI.parts < 60) {\n        send_command('bot airdrop')\n    } else {\n        set_variable('refillParts', false)\n    }\n}"}],"items":[]},{"type":"alias","name":"Refill Parts","enabled":true,"id":127,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"set_variable('refillParts', true)\nsend_command('bot airdrop')\n"}],"text":"^hfillParts$","items":[]}],"actions":[]},{"type":"trigger","name":"Stimjector Used","enabled":true,"id":111,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"You activate your stimjector, feeling a rush of vitality as it releases healing nanites into your bloodstream.","actions":[{"action":"script","script":"SSCI.healReady = false"}],"items":[]},{"type":"trigger","name":"Stimjector Ready","enabled":true,"id":112,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"You can again use a stimjector.","actions":[{"action":"script","script":"SSCI.healReady = true\nSSCI.huntingAttack()\n//SSCI.log('stimjector ready', 'cyan')"},{"action":"highlight","highlight":"line","highlight_backref":"1","highlight_fg":"#00efff","highlight_bg":"#000000"}],"items":[]},{"type":"trigger","name":"Repeat Active","enabled":true,"id":137,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^You build an instruction loop","actions":[{"action":"script","script":"SSCI.repeat = false\nSSCI.huntingAttack()"}],"items":[]},{"type":"trigger","name":"Repeat Available","enabled":true,"id":138,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^You can again order a repeated attack.$","actions":[{"action":"script","script":"SSCI.repeat = true"},{"action":"highlight","highlight":"line","highlight_backref":"1","highlight_fg":"#fbbe80","highlight_bg":"#000000"}],"items":[]},{"type":"trigger","name":"Burrowbot Active","enabled":true,"id":139,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"and starts burrowing into its flesh.$","actions":[{"action":"script","script":"SSCI.wormDeployed = true\nSSCI.huntingAttack()"}],"items":[]},{"type":"trigger","name":"Burrowbot Returned","enabled":true,"id":140,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^A knife-mawed burrowbot violently emerges|ceases burrowing","actions":[{"action":"script","script":"SSCI.wormDeployed = false\nSSCI.huntingAttack()"}],"items":[]},{"type":"trigger","name":"Queue Attack Engineer","enabled":true,"id":114,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^A crane-armed carrybot claws .* shredding .* skin.$","actions":[{"action":"script","script":"SSCI.huntingAttack()"}],"items":[]},{"type":"trigger","name":"Turret Unpowered","enabled":true,"id":150,"matching":"regexp","whole_words":false,"case_sensitive":true,"text":"doesn't have enough power to attack.$","actions":[{"action":"highlight","highlight":"line","highlight_backref":"1","highlight_fg":"#f863df","highlight_bg":"#000000"}]},{"type":"alias","name":"List Ability Configuration","enabled":true,"id":113,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"var abilities = ''\nabilities += 'Heal:          ' + get_variable('useHeal') + '\\n'\nabilities += 'Repeat Attack: ' + get_variable('engineerRepeatAttack') + '\\n'\nabilities += 'Use Repeat:    ' + get_variable('useRepeat') + '\\n'\nabilities += 'Repeat Avail:  ' + SSCI.repeat + '\\n'\nabilities += 'Use Worm:      ' + get_variable('useWorm') + '\\n'\nabilities += 'Worm Deployed: ' + SSCI.wormDeployed + '\\n'\nabilities += 'Use Release:   ' + get_variable('useRelease') + '\\n'\nabilities += 'QPC Boost:     ' + get_variable('useQPCBoost') + '\\n'\n\nSSCI.log(abilities, 'white')"}],"text":"hengineer","items":[]},{"type":"alias","name":"Enable/Disable Repeat","enabled":true,"id":135,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"if (args[1] != 'clear') {\n    set_variable('engineerRepeatAttack', args[1])\n    set_variable('useRepeat', true)\n    SSCI.log('Enabled bot repeat with attack: ' + args[1], 'white')\n} else {\n    set_variable('engineerRepeatAttack', '')\n    set_variable('useRepeat', false)\n    SSCI.log('Disabled bot repeat command', 'white')\n}"}],"text":"hrepeat (.+)","items":[]},{"type":"alias","name":"Enable/Disable Worm","enabled":true,"id":141,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"if (get_variable('useWorm')) {\n    set_variable('useWorm', false)\n    SSCI.log('Burrowbot Worm Attack disabled', 'white')\n} else {\n    set_variable('useWorm', true)\n    SSCI.log('Burrowbot Worm Attack enabled', 'white')\n}"}],"text":"hworm","items":[]},{"type":"alias","name":"Enable/Disable Worm Release","enabled":true,"id":142,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"if (get_variable('useRelease')) {\n    set_variable('useRelease', false)\n    SSCI.log('Burrowbot Worm Release Attack disabled', 'white')\n} else {\n    set_variable('useRelease', true)\n    SSCI.log('Burrowbot Worm Release Attack enabled', 'white')\n}"}],"text":"hrelease","items":[]},{"type":"alias","name":"Enable/Disable QPCBoost","enabled":true,"id":151,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"if (get_variable('useQPCBoost')) {\n    set_variable('useQPCBoost', false)\n    SSCI.log('QPC Boost after kill disabled', 'white')\n} else {\n    set_variable('useQPCBoost', true)\n    SSCI.log('QPC Boost after kill enabled', 'white')\n}"}],"text":"hqpcboost"}],"actions":[]},{"type":"group","name":"Combat","enabled":true,"id":64,"items":[{"type":"group","name":"Chat","enabled":true,"id":65,"items":[{"type":"alias","name":"Target call - tt <name>","enabled":false,"id":67,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"SSCI.target = args[1]\nset_variable('tar', args[1])\nsend_command('st ' + args[1])\nsend_command('crt Target: ' + args[1])"}],"text":"tt (.+)","items":[]}],"actions":[]}],"actions":[]}],"description":"SSCI v1.0"}