{"name":"starwraith trading implant","enabled":true,"description":"v0.2","type":"group","id":1,"items":[{"type":"function","name":"onLoad","enabled":true,"id":2,"code":"//Commands to send on login\n\n// Starwraith Trading Implant\nSTI = {\n    STATE_START: 0,\n    STATE_HEADER: 1,\n    STATE_DIVIDER: 2,\n    STATE_CONTENT: 3,\n    state: 0,\n    content: \"\",\n    noticecolor: 'gold',\n    packagename: 'starwraith trading implant',\n    disableGroup: function(name) {\n        var group = reflex_find_by_name('group', name, false, false, STI.packagename)\n        reflex_disable(group)\n    },\n    enableGroup: function(name) {\n        var group = reflex_find_by_name('group', name, false, false, STI.packagename)\n        reflex_enable(group)\n    },\n    disable: function(name, type = 'group') {\n        var group = reflex_find_by_name(type, name, false, false, STI.packagename)\n        reflex_disable(group)\n    },\n    enable: function(name, type = 'group') {\n        var group = reflex_find_by_name(type, name, false, false, STI.packagename)\n        reflex_enable(group)\n    },\n    notice: function(text) {\n        display_notice(\"[STI] \" + text, STI.noticecolor);\n    },\n    helpbox: function(title,text) {\n        var helptext = \"<div class=\\\"mono\\\"><span style=\\\"color: #ffffff; \\\"><span style=\\\"background-color: #0000a0 \\\">\" + title + \"</span></span></div>\";\n        helptext += \"<div class=\\\"mono\\\">\" + text.replace(\"\\n\",\"</div><div class=\\\"mono\\\">\") + \"</div>\";\n        client.display_help_window(helptext);\n\t},\n    loaded: function() {\n\t\tSTI.notice(\"Starwraith Trading Implant v0.1 Loaded. See tradinghelp for more information.\\n\");\n    },\n    parse_order_line: function(input) {\n        var id     = input.substring(0,6).trim();\n        var cargo  = input.substring(6,22).trim();\n        var qty    = input.substring(22,38).trim();\n        var dest   = input.substring(38,62).trim();\n        var price  = input.substring(62,72).trim();\n        var escrow = input.substring(72).trim();\n        \n        return id + \";\" + cargo  + \";\" + qty + \";\" + dest + \";\" + price  + \";\" + escrow;\n\t}\n}\n\nSTI.loaded();"},{"type":"group","name":"Parsing","enabled":true,"id":3,"items":[{"type":"trigger","name":"Start Market Orders","enabled":false,"id":5,"matching":"exact","whole_words":false,"case_sensitive":false,"text":"-------------------------------&lt; Market orders &gt;-------------------------------","actions":[{"action":"highlight","highlight":"match","highlight_backref":"1","highlight_fg":"#ffff00","highlight_bg":"#000000"},{"action":"script","script":"STI.state = STI.STATE_HEADER;\nSTI.content = \"\";"},{"action":"enable","type":"trigger","name":"Order Lines"}]},{"type":"trigger","name":"Order Lines","enabled":false,"id":7,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":".*","actions":[{"action":"gag"},{"action":"script","script":"switch (STI.state) {\n    case STI.STATE_HEADER: // Parse the headers\n        var values = args.input.split(/ {2,}/).join(\";\");\n        STI.content += values + '\\n';\n        \n        STI.state = STI.STATE_DIVIDER;\n    \tbreak;\n\n    case STI.STATE_DIVIDER: // Ignore the first divider\n        STI.state = STI.STATE_CONTENT;\n    \tbreak;\n\n    case STI.STATE_CONTENT:\n        if (args.input.startsWith(\"Type MORE to continue reading.\")) {\n            send_command('MORE');\n            /*\n            STI.state = STI.STATE_START;\n            STI.disable('Order Lines','trigger'); // Stop capturing\n            console.log('CONTENT:');\n            console.log(STI.content); \n            */\n            \n        } else if (args.input.length < 72) {\n            // Ignore\n        } else if (args.input == \"-------------------------------------------------------------------------------\") {\n            STI.state = STI.STATE_START;\n            STI.disable('Order Lines','trigger'); // Stop capturing\n            \n            // Do something with the content\n            console.log('CONTENT:');\n            console.log(STI.content); \n        } else {\n            // Parse the content\n            STI.content += STI.parse_order_line(args.input) + '\\n';\n        }\n    \tbreak;\n        \n  default:\n}"}]}],"actions":[]}]}