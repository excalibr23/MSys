{"type":"group","name":"starwraith nanoseer combat implant","enabled":true,"id":1,"items":[{"type":"function","name":"onLoad","enabled":true,"id":2,"code":"// Changelog\n// 20190113T1503EST: Copied main system to separate class systems\n\n// Place any code here you'd like to autorun when the system is loaded\nsend_command('wakeup')\nSNCI = {\n// Core Implant Code\n    noticecolor: 'gold',\n    packagename: 'starwraith nanoseer combat implant',\n    shortname: 'SNCI',\n    notice: function(text) {\n        display_notice(\"[\" + this.shortname + \"] \" + text, this.noticecolor);\n    },\n    loaded: function() {\n        //Send implant to browser log for debugging\n        console.log(this)\n        this.notice(\"Starwraith Nanoseer Combat Implant v1.0 Loaded. Good hunting, and good death.\\n\");\n    },\n    helpbox: function(title,text) {\n        var helptext = \"<div class=\\\"mono\\\"><span style=\\\"color: #ffffff; \\\"><span style=\\\"background-color: #0000a0 \\\">\" + title + \"</span></span></div>\";\n        helptext += \"<div class=\\\"mono\\\">\" + text.replace(\"\\n\",\"</div><div class=\\\"mono\\\">\") + \"</div>\";\n        client.display_help_window(helptext);\n    },\n    disableGroup: function(name) {\n        var group = reflex_find_by_name('group', name, false, false, this.packagename)\n        reflex_disable(group)\n    },\n    enableGroup: function(name) {\n        var group = reflex_find_by_name('group', name, false, false, this.packagename)\n        reflex_enable(group)\n    },\n    log: function (x, fgcolor, bgcolor) {\n        let type = typeof x\n        switch(type) {\n          case 'number':\n          case 'string':\n          case 'boolean':\n            display_notice(x.toString(), fgcolor, bgcolor)\n            break;\n          case 'object':\n            for (var prop in x) {\n              display_notice(`${prop}: ${x[prop]}`, fgcolor, bgcolor)\n            }\n            break;\n          case 'undefined':\n            display_notice('undefined', fgcolor, bgcolor)\n            break;\n          default:\n            display_notice('wtf is this')\n        }\n    },\n    alert: function (text, fgcolor, bgcolor) {\n        text = text.toUpperCase()\n        let fullText = '-'.repeat(text.length+1) + '-------\\n--  '+ text + '  --\\n-------' + '-'.repeat(text.length+1)\n        display_notice(fullText, fgcolor, bgcolor)\n    },\n    debugMessage: function (text) {\n        if (get_variable('debug')) {\n            this.log(text, 'white', 'black')\n        }\n    },\n//System Variables\n    goal: 'hunt2',\n    matchList: get_variable('matchList'),\n    systemEnabled: true,\n    offenseEnabled: false,\n    break: get_variable('break'),\n    itemsInRoom: [],\n    damageThisFight: 0,\n    ttk: 0,\n    targetHealth: 0,\n    interrupt: false,\n//Character    \n    attack: get_variable('huntingAttack') + ' ',\n    class: '',\n    health: 0,\n    maxHealth: 0,\n    useHeal: get_variable('useHeal'),\n    healReady: true,\n//Nano\n    nanites: 0,\n    maxNanites: 0,\n    sanity: 0,\n    maxSanity: 0,\n    multistrike: false,\n    frenzy: false,\n    freeze: false,\n    delaySwarm: false,\n    pointZero: false,\n    speedup: false,\n    negation: false,\n    empyreal: '',\n    useDelay: get_variable('useDelay'),\n    useMultistrike: get_variable('useMultistrike'),\n    useFrenzy: get_variable('useFrenzy'),\n    usePointZero: get_variable('usePointZero'),\n    useSpeedup: get_variable('useSpeedup'),\n    useFreeze: get_variable('useFreeze'),\n    useNegation: get_variable('useNegation'),\n//Combat functions \n    findTarget: function() {\n        var itemList = this.itemsInRoom\n        var killList = get_variable('killList')\n        var targetFound = false\n        \n        //Match room order\n        if (!this.matchList) {\n            for (i=0; i<itemList.length; i++) {\n                for (x=0; x<killList.length; x++) {\n                    if (itemList[i].name.includes(killList[x]) && itemList[i].attrib === 'm' && targetFound === false) {\n                        set_variable('tar', itemList[i].id)\n                        send_command('settarget ' + itemList[i].id)\n                        targetFound = true\n                        display_notice('New target: '+itemList[i].name, 'red', 'black')\n                    }\n                }\n            }\n        } else { //Match priority/list order\n            for (i=0; i<killList.length; i++) {\n                for (x=0; x<itemList.length; x++) {\n                    if (itemList[x].name.includes(killList[i]) && itemList[x].attrib === 'm' && targetFound === false) {\n                        set_variable('tar', itemList[x].id)\n                        send_command('settarget ' + itemList[x].id)\n                        targetFound = true\n                        display_notice('New target: '+itemList[x].name, 'red', 'black')\n                    }\n                }\n            }\n        }\n\n        if (!targetFound) {\n            //display_notice('No Target Found', 'red', 'black')\n            set_variable('tar', '')\n        }\n    },\n    huntingAttack: function() {\n        \n        if (!this.systemEnabled) {return}\n        var command = ''\n        \n        //Self heal\n        if (this.health / this.maxHealth < .8 && this.healReady && this.useHeal) {\n            this.debugMessage('Nano repair')\n            send_command('nano repair')\n            return\n                \n        //Out of combat buffs\n        //Casting and channeling are separated to enable the buff to be executed\n        //immediately if already channeling one of the required empyreals\n        //This prevents unnecessary swapping of empyreal channels after combat\n        } else if (!this.negation && this.useNegation && this.empyreal == 'Progenitor') {\n            this.debugMessage('Cast Negation')\n            send_command('negation')\n            return\n                \n        } else if (!this.frenzy && this.useFrenzy && this.empyreal == 'Conqueror') {\n            this.debugMessage('Cast Frenzy')\n            send_command('frenzy')\n            return\n                \n        } else if (!this.frenzy && this.useFrenzy && this.empyreal != 'Conqueror') {\n            this.debugMessage('Channel conqueror')\n            send_command('oblivion channel conqueror')\n            return\n                \n        } else if (!this.negation && this.useNegation && this.empyreal != 'Progenitor') {\n            this.debugMessage('Channel Progenitor')\n            send_command('oblivion channel progenitor')\n            return\n                \n        //Abort execution of offensive actions if disabled\n        } else if (!this.offenseEnabled || get_variable('tar') == '') {\n            this.debugMessage('No target or offense disabled')\n            return\n                \n        //Combat buffs\n        } else if (!this.speedup && this.useSpeedup && this.empyreal != 'Traveller') {\n            this.debugMessage('Channel Traveller')\n            send_command('oblivion channel Traveller')\n            return\n                \n        } else if (!this.speedup && this.useSpeedup && this.empyreal == 'Traveller') {\n            this.debugMessage('Cast Speedup')\n            send_command('speedup')\n            return\n                \n        } else if (!this.pointZero && this.usePointZero) {\n            this.debugMessage('Point Zero')\n            send_command('void pointzero')\n            return\n                \n        } else if (!this.delaySwarm && this.useDelay) {\n            this.debugMessage('Delay Attack')\n            command =  'delay '\n            command += get_variable('delayAttack')\n            command += ' '\n             \n        } else if (!this.multistrike && this.targetHealth > 40 && this.useMultistrike) {\n            this.debugMessage('Multistrike')\n            command = 'multistrike '\n                \n        } else if (!this.freeze && this.useFreeze && this.targetHealth > 20 ) {\n            this.debugMessage('Freeze')\n            command = 'freeze '\n                \n        } else {\n            this.debugMessage('Default Attack')\n            command = this.attack + ' '\n        }\n           \n        command += get_variable('tar')\n        send_command(command)          \n    }\n}\n\nSNCI.loaded();","items":[]},{"type":"function","name":"onGMCP","enabled":true,"id":3,"code":"// Place any code here you'd like to run when a GMCP message is received\n// - The GMCP message is received as \"args.gmcp_method\" and \"args.gmcp_args\"\n\nGMCP[args.gmcp_method] = args.gmcp_args\n\n/* ------------------------------------------ CHARACTER STUFF ----------------------------------- */\n\nif (args.gmcp_method == \"Char.Vitals\") {\n\n    // Track health changes\n    var change = SNCI.health - args.gmcp_args.hp;\n   \n    if (change > 0) {\n        SNCI.log('Damage taken: ' + change, 'yellow')\n    } else if (change < 0) {\n        SNCI.log('Damage healed: ' + Math.abs(change), '#6bdaee')\n    }\n    \n    SNCI.health = args.gmcp_args.hp\n    SNCI.maxHealth = args.gmcp_args.maxhp\n\n    SNCI.nanites = args.gmcp_args.nn\n    SNCI.maxNanites = args.gmcp_args.maxnn\n    SNCI.sanity = args.gmcp_args.xa\n    SNCI.maxSanity = args.gmcp_args.maxsa\n}\n\n/* ----------------------------------- DEFENCES AND BUFFS --------------------------------------- */\n\nif (args.gmcp_method == 'Char.Defences.Add') {\n    //Nanoseer\n    if (args.gmcp_args.name == 'Oblivion: Conqueror')  {\n        SNCI.empyreal = 'Conqueror'\n    } else if (args.gmcp_args.name == 'Oblivion: Traveller')  {\n        SNCI.empyreal = 'Traveller'\n    } else if (args.gmcp_args.name == 'Oblivion: Architect')  {\n        SNCI.empyreal = 'Architect'\n    } else if (args.gmcp_args.name == 'Oblivion: Progenitor') {\n        SNCI.empyreal = 'Progenitor'\n    } else if (args.gmcp_args.name == 'Oblivion: Sunderer')   {\n        SNCI.empyreal = 'Sunderer'\n    }\n}\n\n/* -------------------------------------------- ITEMS IN ROOM ----------------------------------- */\n\n//Get Items In Room\nif (args.gmcp_method == \"Char.Items.List\") {\n    SNCI.itemsInRoom = args.gmcp_args['items']\n}\n\n//Remove items when items leave\nif (args.gmcp_method == \"Char.Items.Remove\") {\n    let itemLeaving = args.gmcp_args['item']\n    \n    //Find index of item\n    SNCI.itemsInRoom = SNCI.itemsInRoom.filter(item => item.id !== itemLeaving.id);\n}\n\n//Add items when items enter\nif (args.gmcp_method == \"Char.Items.Add\") {\n    let itemJoining = args.gmcp_args['item']\n    \n    //Find index of item\n    SNCI.itemsInRoom.push(itemJoining);\n    \n    if (SNCI.systemEnabled === true && !get_variable('tar')) {\n        SNCI.findTarget()\n    }\n}\n\n/* -------------------------------------------- PLAYERS IN ROOM ----------------------------------- */\nif (args.gmcp_method == \"Room.Players\") {\n    SNCI.playersInRoom = args.gmcp_args\n}\n\n/* --------------------------------------------- HELPERS --------------------------------- */\nif (args.gmcp_method == \"Room.Info\") {\n    if (SNCI.systemEnabled === true) {\n        SNCI.findTarget()\n    }\n}\n\nif (args.gmcp_method == \"IRE.Target.Info\") {\n    SNCI.targetHealth = args.gmcp_args['hpperc'].slice(0, -1)\n}","items":[]},{"type":"group","name":"Auto Hunt","enabled":true,"id":8,"items":[{"type":"group","name":"Setup","enabled":true,"id":41,"items":[{"type":"alias","name":"Combat Implant Setup - hsetup","enabled":true,"id":25,"matching":"begins","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"SNCI.log('-- Hunting List Setup.  Use \\'hsave\\' to keep a backup.  \\'hload\\' will load your backup.', 'white', 'black')\nSNCI.log('-- Use \\'hadd\\' <name> to add to the list and \\'hremove\\' <name> to remove items from this list. \\'hshow\\' will show the items on your list.', 'white', 'black')\nSNCI.log('-- Use \\'hattack\\' <attackName> to make it your primary attack that will be auto used.', 'white')\nSNCI.log('-- Use \\'hlist\\' to switch between room and priority list. Use \\'hup\\' or \\'hdown\\' <name> to increase or decrease an item on the priority list.', 'white')\nSNCI.log('-- Make sure you use \\'config usequeueing on\\'.  Then you can use other attacks to overwrite auto attacks.', 'white')\n\nif (get_variable('killList')       == undefined) {set_variable('killList', ['rockhopper'])}\nif (get_variable('debug')          == undefined) {set_variable('debug', false)}\nif (get_variable('matchList')      == undefined) {set_variable('matchList', true)}\nif (get_variable('break')          == undefined) {set_variable('break', true)}\nif (get_variable('useHeal')        == undefined) {set_variable('useHeal', true)}\nif (get_variable('useFreeze')      == undefined) {set_variable('useFreeze', false)}\nif (get_variable('useMultistrike') == undefined) {set_variable('useMultistrike', false)}\nif (get_variable('useFrenzy')      == undefined) {set_variable('useFrenzy', false)}\nif (get_variable('useDelay')       == undefined) {set_variable('useDelay', false)}"}],"text":"hsetup","items":[]},{"type":"alias","name":"System Reset","enabled":true,"id":126,"matching":"regexp","whole_words":false,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"SNCI.log('-- Combat Implant has been reset to factory settings.', 'white', 'black')\nSNCI.log('-- If you have previously backed up your kill list you may use \\'hload\\' to reload it', 'white', 'black')\n\nset_variable('killList', ['rockhopper'])\nset_variable('debug', false)\nset_variable('useHeal', true)\nset_variable('useFreeze', false)\nset_variable('useMultistrike', false)\nset_variable('useFrenzy', false)\nset_variable('useDelay', false)\nset_variable('matchList', true)\nset_variable('break', true)"}],"text":"^hreset$","items":[]},{"type":"alias","name":"Change Auto Attack","enabled":true,"id":26,"matching":"regexp","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"SNCI.attack = args[1] + ' '\nset_variable('huntingAttack', args[1] + ' ')\ndisplay_notice('Attack set to: ' + args[1], 'white', 'black')"}],"text":"hattack (.+)","items":[]},{"type":"alias","name":"Enable/Disable List Mode - hlist","enabled":true,"id":56,"matching":"begins","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"if (get_variable('matchList')) {\n    SNCI.matchList = false\n    set_variable('matchList', false)\n    SNCI.log('Will match room listing', 'white')\n} else {\n    SNCI.matchList = true\n    set_variable('matchList', true)\n    SNCI.log('Will match priority listing', 'white')\n}"}],"text":"hlist","items":[]},{"type":"alias","name":"Enable/Disable Break After Kill Mode - hbreak","enabled":true,"id":82,"matching":"begins","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"if (get_variable('break')) {\n    SNCI.break = false\n    set_variable('break', false)\n    SNCI.log('Will continue after kill.', 'white')\n} else {\n    SNCI.break = true\n    set_variable('break', true)\n    SNCI.log('Will break after kill.', 'white')\n}"}],"text":"hbreak","items":[]},{"type":"alias","name":"Enable/Disable Break Threshold","enabled":true,"id":169,"matching":"regexp","whole_words":false,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"set_variable('breakThreshold', args[1])\nSNCI.breakThreshold = args[1]"}],"text":"^hbreakthreshold ([0-9]*)$"}],"actions":[]},{"type":"trigger","name":"Slain","enabled":true,"id":5,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^(You) have slain a.*$|^.*has been slain by (.+)\\.$","actions":[{"action":"script","script":"SNCI.freeze = false\nSNCI.frenzy = false\nSNCI.negation = false\nSNCI.delaySwarm = false\nSNCI.fever = false\nSNCI.hypertension = false\nSNCI.ambush = false\nSNCI.backhand = false\n\n//var a = new Audio('https://freesound.org/people/adcbicycle/sounds/13934/download/13934__adcbicycle__6.wav')\n//a.play()\n\nvar autoList = ['You', 'Chronoxi Starwraith', 'Feraluna Starwraith', 'Mee', 'Casimar', 'Albion', 'Mykel']\nvar onList = ''\n\nif (args[1]) {\n    onList = autoList.includes(args[1])\n} else {\n    onList = autoList.includes(args[2])\n}\n\nif (SNCI.systemEnabled === true && onList) {\n    SNCI.targetHealth = 0\n    send_command('clearqueue')\n    SNCI.findTarget()\n\n    if (SNCI.class == 'Engineer' && get_variable('useQPCBoost')) {\n        send_command('qpcboost')\n    }\n\n    if (SNCI.break) {\n        SNCI.offenseEnabled = false\n    }\n    \n    SNCI.huntingAttack()\n}\n\nvar slainMessage = ''\nvar now = new Date()\nif (SNCI.damageThisFight > 0 && SNCI.ttk > 0){\n    slainMessage = SNCI.damageThisFight + ' damage done this fight. | TTK: ' + (now.getTime() - SNCI.ttk)/1000 + 's | DPS: ' + Math.round(SNCI.damageThisFight / ((now.getTime() - SNCI.ttk)/1000))\n} else if (SNCI.damageThisFight > 0) {\n    slainMessage = SNCI.damageThisFight + ' damage done this fight.'\n} else if (SNCI.ttk > 0) {\n    slainMessage = 'TTK: ' + (now.getTime() - SNCI.ttk)/1000 + 's'\n}\n\nif (SNCI.damageThisFight > 0 || SNCI.ttk > 0){\n    SNCI.alert(slainMessage, 'lightgreen', 'darkblue')\n}\n\nSNCI.ttk = 0\nSNCI.damageThisFight = 0\nSNCI.interrupt = false"}],"items":[]},{"type":"trigger","name":"Crash - AUTO OFF","enabled":true,"id":18,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^You prepare to crash out of the room.*$|^\\[Queue\\]: You will attempt to do CRASH .{1,4} when you recover balance.$","actions":[{"action":"script","script":"SNCI.systemEnabled = false\ndisplay_notice('AUTO OFF', 'white', 'black')"}],"items":[]},{"type":"keybind","name":"","enabled":true,"id":10,"key":96,"actions":[{"action":"script","script":"if (get_variable('debug') == true) {SNCI.log('I am attacking ' + get_variable('tar'), 'white')}\nSNCI.systemEnabled = true\nSNCI.offenseEnabled = true\nSNCI.huntingAttack()"}],"key_alt":false,"key_ctrl":false,"key_shift":false,"items":[]},{"type":"keybind","name":"","enabled":true,"id":32,"key":111,"actions":[{"action":"script","script":"if (SNCI.systemEnabled === true) {\n  SNCI.systemEnabled = false\n  display_notice(\"Combat implant disabled\", 'white', 'black')\n} else {\n  SNCI.systemEnabled = true\n  display_notice(\"Combat implant enabled\", 'white', 'black')\n}"}],"key_alt":false,"key_ctrl":false,"key_shift":false,"items":[]},{"type":"alias","name":"Heal","enabled":true,"id":115,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"if (SNCI.class == 'Nanoseer') {\n  send_command('NANO REPAIR')\n} else if (SNCI.class == 'Fury') {\n  send_command('KITH SUFFUSE')\n} else if (SNCI.class == 'Scoundrel') {\n  send_command('STIM')\n} else if (SNCI.class == 'B.E.A.S.T.') {\n  send_command('suit support')\n} else if (SNCI.class == 'Engineer') {\n  send_command('operate stimjector')\n}"}],"text":"h","items":[]},{"type":"alias","name":"Add to hunting list - hadd <mob>","enabled":true,"id":13,"matching":"regexp","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"display_notice('Adding: ' + args[1] + ' to list', 'white', 'black')\nlet newList = get_variable('killList')\nnewList.push(args[1])\nset_variable('killList', newList)"}],"text":"hadd (.+)","items":[]},{"type":"alias","name":"Remove from hunting list - hremove <mob>","enabled":true,"id":14,"matching":"regexp","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"display_notice('Removing: ' + args[1] + ' from list', 'white', 'black')\n\nlet newList = get_variable('killList')\nnewList = newList.filter(item => item !== args[1]);\n\nset_variable('killList', newList)"}],"text":"hremove (.+)","items":[]},{"type":"alias","name":"Save Hunting List To Backup - hsave","enabled":true,"id":15,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"let newSave = get_variable('killList')\nset_variable('killListBackup', newSave)\ndisplay_notice('Hunt List Saved', 'white', 'black')\n"}],"text":"hsave","items":[]},{"type":"alias","name":"Load Hunting List From Backup - hload","enabled":true,"id":16,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"let backupList = get_variable('killListBackup')\nset_variable('killList', backupList)\ndisplay_notice('Hunt List Loaded from Backup', 'white', 'black')"}],"text":"hload","items":[]},{"type":"alias","name":"Show Hunting Targets - hshow","enabled":true,"id":17,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"let killList = get_variable('killList')\nfor (i=0; i<killList.length; i++) {\n    display_notice(killList[i], 'white', 'black')\n}"}],"text":"hshow","items":[]},{"type":"alias","name":"Item Priority - hup/hdown <mob>","enabled":true,"id":52,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"var list = get_variable('killList')\nvar nameIndex = list.indexOf(args[2])\nvar name = list[nameIndex]\n\nif (list[nameIndex-1] && nameIndex && args[1] === 'hup') {\n    list[nameIndex] = list[nameIndex - 1]\n    list[nameIndex-1] = name\n} else if (list[nameIndex+1] && nameIndex && args[1] === 'hdown') {\n    list[nameIndex] = list[nameIndex + 1]\n    list[nameIndex+1] = name\n}\n\nset_variable('killList', list)\n\nfor (i=0; i<list.length; i++) {\n    if(list[i] === name){\n        display_notice(list[i], 'gold', 'black')\n    } else {\n        display_notice(list[i])\n    }\n}"}],"text":"^(hup|hdown) (.+)$","items":[]},{"type":"alias","name":"Heal Toggle - hheal","enabled":true,"id":81,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"if (get_variable('useHeal')) {\n    set_variable('useHeal', false)\n    SNCI.useHeal = false\n    SNCI.log('HEAL OFF', 'white')\n} else {\n    set_variable('useHeal', true)\n    SNCI.useHeal = true\n    SNCI.log('HEAL ON', 'white')\n}"}],"text":"hheal","items":[]},{"type":"alias","name":"Kill","enabled":true,"id":120,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"if (get_variable('debug') == true) {SNCI.log('I am attacking ' + get_variable('tar'), 'white')}\nSNCI.systemEnabled = true\nSNCI.offenseEnabled = true\nSNCI.huntingAttack()"}],"text":"k","items":[]}],"actions":[]},{"type":"group","name":"Generic","enabled":true,"id":4,"items":[{"type":"group","name":"Interrupts","enabled":true,"id":147,"items":[{"type":"trigger","name":"Super - Interrupt","enabled":true,"id":148,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^Throwing back its grizzled head, a sly cania lets out a high-pitched, wavering howl.$|^A sluggish atzaparaki shakes off some of its torpor and draws in a deep breath, its sides beginning to swell alarmingly.$|^Light begins to focus deep within the body of a salt-crusted quartz creeper, growing to an almost painful radiance.$","actions":[{"action":"script","script":"SNCI.interrupt = true\n\nSNCI.alert('interrupting super', 'white', 'blue')\nSNCI.huntingAttack()\n"}],"items":[]}],"actions":[]},{"type":"trigger","name":"Left battle","enabled":true,"id":6,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"You are no longer in the throes of battle.","actions":[{"action":"highlight","highlight":"match","highlight_backref":"1","highlight_fg":"#9488f6","highlight_bg":"#000000"}],"items":[]},{"type":"trigger","name":"Hide Queue","enabled":false,"id":7,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^\\[Queue\\]: You will attempt to do.*$|^Your swarm is already focused upon a multistrike.*$","actions":[{"action":"gag"}],"items":[]},{"type":"trigger","name":"Add Damage Per Kill","enabled":true,"id":57,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"Damage Dealt: (.+) .+","actions":[{"action":"script","script":"if (SNCI.ttk == 0) {\n    var now = new Date()\n    SNCI.ttk = now.getTime()\n}\nSNCI.damageThisFight += parseInt(args[1])"},{"action":"highlight","highlight":"match","highlight_backref":"1","highlight_fg":"#ff0000","highlight_bg":"#000000"}],"items":[]},{"type":"trigger","name":"Not following","enabled":true,"id":87,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"(.+) is no longer following you.","actions":[{"action":"script","script":"SNCI.log(args[1] + ' Stopped Following!', 'darkred')"}],"items":[]},{"type":"alias","name":"Crash + Direction - c<dir>","enabled":true,"id":33,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"send_command('cq')\nsend_command('crash ' + args[1])"}],"text":"c(nw|ne|se|sw|n|s|e|w|u|d|in|out)","items":[]},{"type":"alias","name":"Javascript - js","enabled":true,"id":31,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"SNCI.log(eval(args[1]))"}],"text":"^js (.+)$","items":[]}],"actions":[]},{"type":"group","name":"Nanoseer","enabled":true,"id":21,"items":[{"type":"group","name":"Configuration","enabled":true,"id":153,"items":[{"type":"alias","name":"Enable/Disable Freeze","enabled":true,"id":42,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"if (get_variable('useFreeze')) {\n    set_variable('useFreeze', false)\n    SNCI.useFreeze = false\n    SNCI.log('FREEZE OFF', 'white')\n} else {\n    set_variable('useFreeze', true)\n    SNCI.useFreeze = true\n    SNCI.log('FREEZE ON', 'white')\n}"}],"text":"hfreeze","items":[]},{"type":"alias","name":"Enable/Disable Multistrike","enabled":true,"id":43,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"if (get_variable('useMultistrike')) {\n    set_variable('useMultistrike', false)\n    SNCI.useMultistrike = false\n    SNCI.log('MULTISTRIKE OFF', 'white')\n} else {\n    set_variable('useMultistrike', true)\n    SNCI.useMultistrike = true\n    SNCI.log('MULTISTRIKE ON', 'white')\n}"}],"text":"^hmulti(strike)?$","items":[]},{"type":"alias","name":"Enable/Disable Frenzy","enabled":true,"id":45,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"if (get_variable('useFrenzy')) {\n    set_variable('useFrenzy', false)\n    SNCI.useFrenzy = false\n    SNCI.log('FRENZY OFF', 'white')\n} else {\n    set_variable('useFrenzy', true)\n    SNCI.useFrenzy = true\n    SNCI.log('FRENZY ON', 'white')\n}"}],"text":"hfrenzy","items":[]},{"type":"alias","name":"Enable/Disable Delay Swarm","enabled":true,"id":55,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"if (get_variable('useDelay')) {\n    set_variable('useDelay', false)\n    SNCI.useDelay = false\n    SNCI.log('DELAY OFF', 'white')\n} else if (args[1] == '' && get_variable('delayAttack') == '') {\n    SNCI.alert('Delayed attack is not configured. Please provide a delayed attack to use\\nUsage: hdelay <attack>', 'red', 'black')\n    return\n} else {\n    if (args[1] != '') {set_variable('delayAttack', args[1])}\n    set_variable('useDelay', true)\n    SNCI.useDelay = true\n    SNCI.log('DELAY ON', 'white')\n}"}],"text":"hdelay[ ]?(.*)","items":[]},{"type":"alias","name":"Enable/Disable Point Zero","enabled":true,"id":162,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"if (get_variable('usePointZero')) {\n    set_variable('usePointZero', false)\n    SNCI.usePointZero = false\n    SNCI.log('Point Zero Disabled', 'white')\n} else {\n    set_variable('usePointZero', true)\n    SNCI.usePointZero = true\n    SNCI.log('Point Zero Enabled', 'white')\n}"}],"text":"hpointzero"},{"type":"alias","name":"Enable/Disable Speedup","enabled":true,"id":163,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"if (get_variable('useSpeedup')) {\n    set_variable('useSpeedup', false)\n    SNCI.useSpeedup = false\n    SNCI.log('Speedup Disabled', 'white')\n} else {\n    set_variable('useSpeedup', true)\n    SNCI.useSpeedup = true\n    SNCI.log('Speedup Enabled', 'white')\n}"}],"text":"hspeedup"},{"type":"alias","name":"Enable/Disable Negation","enabled":true,"id":164,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"if (get_variable('useNegation')) {\n    set_variable('useNegation', false)\n    SNCI.useNegation = false\n    SNCI.log('Negation Disabled', 'white')\n} else {\n    set_variable('useNegation', true)\n    SNCI.useNegation = true\n    SNCI.log('Negation Enabled', 'white')\n}"}],"text":"hnegation"},{"type":"alias","name":"Nano Abilities - hnano","enabled":true,"id":90,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"var abilities = ''\nabilities += 'Freeze: ' + get_variable('useFreeze') + '\\n'\nabilities += 'Multistrike: ' + get_variable('useMultistrike') + '\\n'\nabilities += 'DelaySwarm: ' + get_variable('useDelay') + '\\n'\nabilities += 'UseFrenzy: ' + get_variable('useFrenzy') + '\\n'\nabilities += 'Frenzy Status: ' + SNCI.frenzy + '\\n'\nabilities += 'Use Point Zero: ' + get_variable('usePointZero') + '\\n'\nabilities += 'Point Zero Status: ' + SNCI.pointZero + '\\n'\nabilities += 'Use Speedup: ' + get_variable('useSpeedup') + '\\n'\nabilities += 'Speedup Status: ' + SNCI.speedUp + '\\n'\nabilities += 'Use Negation: ' + get_variable('useNegation') + '\\n'\nabilities += 'Negation Status: ' + SNCI.negation + '\\n'\n\nSNCI.log(abilities, 'white')"}],"text":"hnano","items":[]}],"actions":[]},{"type":"group","name":"Shortcut","enabled":true,"id":154,"items":[{"type":"alias","name":"Void Soothe","enabled":true,"id":46,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"command","command":"Void Soothe","prefix_suffix":true}],"text":"vs","items":[]},{"type":"alias","name":"Channel/Swap Empyreal","enabled":true,"id":22,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"var empyreal = {\n    a: \"architect\",\n    c: \"conqueror\",\n    p: \"progenitor\",\n    s: \"sunderer\",\n    t: \"traveller\"\n}\n\nvar command = {\n    ch: \"oblivion channel \",\n    sw: \"oblivion swap \"\n}\n\nsend_command(command[args[1]] + empyreal[args[2]])"}],"text":"^(ch|sw)(a|c|p|s|t)$","items":[]},{"type":"alias","name":"Limb drain","enabled":true,"id":53,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"limbs = {\n    ll: 'left leg',\n    rl: 'right leg',\n    ra: 'right arm',\n    la: 'left arm'\n}\n\nsend_command('limbdrain ' + get_variable('tar') + ' ' + limbs[args[1]])"}],"text":"l(ll|rl|la|ra)","items":[]},{"type":"alias","name":"Fly","enabled":true,"id":44,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"command","command":"levitate","prefix_suffix":true}],"text":"fly","items":[]},{"type":"alias","name":"Heal","enabled":true,"id":152,"matching":"exact","whole_words":false,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"command","command":"nano repair","prefix_suffix":false}],"text":"heal"},{"type":"alias","name":"Delay","enabled":true,"id":47,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"var command = {\n    s: 'swarm'\n}\n\nsend_command('delay ' + command[args[1]])"}],"text":"^d(s)$","items":[]}],"actions":[]},{"type":"group","name":"Ability Activations","enabled":true,"id":161,"items":[{"type":"trigger","name":"Leaving Room","enabled":true,"id":156,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^You walk to the","actions":[{"action":"script","script":"SNCI.speedup = false\nSNCI.pointZero = false"}]},{"type":"trigger","name":"Delay Swarm On","enabled":true,"id":54,"matching":"substring","whole_words":true,"case_sensitive":true,"text":"Quickly, you program a delayed swarm attack","actions":[{"action":"script","script":"SNCI.delaySwarm = true"}],"items":[]},{"type":"trigger","name":"Freeze on","enabled":true,"id":29,"matching":"substring","whole_words":true,"case_sensitive":true,"text":"You brush your fingertips across","actions":[{"action":"script","script":"SNCI.freeze = true"}],"items":[]},{"type":"trigger","name":"Freeze off","enabled":false,"id":30,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^.+has cured the effects of Frozen.$","actions":[{"action":"script","script":"SNCI.freeze = false\nSNCI.huntingAttack()"}],"items":[]},{"type":"trigger","name":"Frenzy Active","enabled":true,"id":39,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^A dark wave of madness rolls through your thoughts.*$|^You have already descended into a frenzy","actions":[{"action":"script","script":"SNCI.frenzy = true\nSNCI.huntingAttack()"}],"items":[]},{"type":"trigger","name":"Rage off","enabled":false,"id":40,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"You break out of your frenzy.","actions":[{"action":"script","script":"SNCI.frenzy = false"}],"items":[]},{"type":"trigger","name":"Frenzy Down","enabled":false,"id":38,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"You break out of your frenzy.","actions":[{"action":"script","script":"SNCI.alert('Frenzy Down', 'white', 'red')"}],"items":[]},{"type":"trigger","name":"Negation Active","enabled":true,"id":166,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"aura descends over you like a giant, protective shadow.$|^You are already prepared to negate damage.$","actions":[{"action":"script","script":"SNCI.negation = true\nSNCI.huntingAttack()"}]},{"type":"trigger","name":"Negation Down","enabled":false,"id":36,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"The shadow of the Progenitor's protection springs to life around you, absorbing the damaging attack before lifting away from you, the air around you growing subtly lighter.","actions":[{"action":"script","script":"SNCI.alert('Negation Down', 'white', 'red')"}],"items":[]},{"type":"trigger","name":"Multistrike Active","enabled":true,"id":20,"matching":"substring","whole_words":true,"case_sensitive":true,"text":"You focus intently to direct a portion of your swarm towards","actions":[{"action":"script","script":"SNCI.multistrike = true\nSNCI.huntingAttack()"}],"items":[]},{"type":"trigger","name":"Multistrike Return","enabled":true,"id":19,"matching":"regexp","whole_words":false,"case_sensitive":true,"text":"^The group of nanites returns back to you.$|^The nanites disperse. no longer striking","actions":[{"action":"script","script":"SNCI.multistrike = false\nSNCI.huntingAttack()"}],"items":[]},{"type":"trigger","name":"Speedup Active","enabled":true,"id":157,"matching":"regexp","whole_words":false,"case_sensitive":true,"text":"^You snap your fingers, and time starts flowing faster|^Time has already been distorted|^Time has been strangely distorted here.$","actions":[{"action":"script","script":"SNCI.speedup = true\nSNCI.huntingAttack()"}]},{"type":"trigger","name":"Speedup Inactive","enabled":true,"id":159,"matching":"exact","whole_words":false,"case_sensitive":true,"text":"The time distortion effect ends.","actions":[{"action":"script","script":"SNCI.speedUp = false\nSNCI.huntingAttack()"}]},{"type":"trigger","name":"Point Zero Active","enabled":true,"id":158,"matching":"regexp","whole_words":false,"case_sensitive":true,"text":"^The air crackles and contracts|^Lifting your hand, you call upon the void within|^Air swirls around a point of absolute coldness here.$","actions":[{"action":"script","script":"SNCI.pointZero = true\nSNCI.huntingAttack()"}]},{"type":"trigger","name":"Point Zero Inactive","enabled":true,"id":160,"matching":"regexp","whole_words":false,"case_sensitive":true,"text":"^The swirling point zero suddenly collapses","actions":[{"action":"script","script":"SNCI.pointZero = false"}]},{"type":"trigger","name":"Empyreal Channeling","enabled":true,"id":165,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^You reach into your connection to the void","actions":[{"action":"script","script":"if (get_variable('my_combat')) {\n    SNCI.huntingAttack()\n}"}]},{"type":"trigger","name":"Repair Used","enabled":true,"id":167,"matching":"regexp","whole_words":false,"case_sensitive":true,"text":"^You inhale a cloud of your swarm","actions":[{"action":"script","script":"SNCI.healReady = false\nSNCI.huntingAttack()"}]},{"type":"trigger","name":"Repair Available","enabled":true,"id":168,"matching":"regexp","whole_words":false,"case_sensitive":true,"text":"^Your nanites can again repair your body.$","actions":[{"action":"script","script":"SNCI.healReady = true\nSNCI.huntingAttack()"},{"action":"highlight","highlight":"line","highlight_backref":"1","highlight_fg":"#82ea81","highlight_bg":"#000000"}]}],"actions":[]},{"type":"alias","name":"Wakeup Nanoseer","enabled":true,"id":155,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"command","command":"nano charge","prefix_suffix":true},{"action":"waitfor","text":"^You start generating nanites.$|^You're already repairing your nanites.$","matching":"regexp","whole_words":false,"case_sensitive":false,"expire":"6"},{"action":"command","command":"nano rush on","prefix_suffix":true},{"action":"waitfor","text":"^Inhaling a cloud of your swarm|^Your nanites are already boosting|haven.t learned","matching":"regexp","whole_words":false,"case_sensitive":false,"expire":"6"},{"action":"command","command":"nano protect on","prefix_suffix":true}],"text":"wakeup"},{"type":"trigger","name":"Queue Attack Nano","enabled":true,"id":9,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^You brush your fingertips across|^Focusing on becoming more attuned","actions":[{"action":"script","script":"SNCI.huntingAttack()"}],"items":[]}],"actions":[]},{"type":"group","name":"Combat","enabled":true,"id":64,"items":[{"type":"group","name":"Chat","enabled":true,"id":65,"items":[{"type":"alias","name":"Target call - tt <name>","enabled":false,"id":67,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"SNCI.target = args[1]\nset_variable('tar', args[1])\nsend_command('st ' + args[1])\nsend_command('crt Target: ' + args[1])"}],"text":"tt (.+)","items":[]}],"actions":[]}],"actions":[]}],"description":"SNCI v1.2"}