{"type":"group","name":"msysengineer","enabled":true,"id":1,"items":[{"type":"function","name":"onLoad","enabled":true,"id":2,"code":"if (MSys == undefined || MSys.coreVersion == undefined || MSys.coreVersion < 1.3) {\n    display_notice('Starwraith Engineer Combat Implant v1.3 requires MSysCore v1.3 or later','gold');\n    return;\n}\n\n//Fury\nMSys.shortname = 'SECI'\nMSys.parts = 0\nMSys.repeat = true\nMSys.turretUnpowered = false\nMSys.repeatAvailable = true\nMSys.magnotronActivated = false\nMSys.flightCommand = 'operate hoverboard'\nMSys.huntingAttack = function() {\n    if (!MSys.systemEnabled) {return}\n    var command = ''    \n    \n    //Engineer\n    if (MSys.health / MSys.maxHealth < .8 && MSys.healReady && MSys.useHeal) {\n        MSys.debugMessage('Activating stimjector')\n        send_command('operate stimjector')\n        \n    } else if (MSys.escaping) {\n        return\n\n    } else if (get_variable('tar') == '' || MSys.offenseEnabled == false) {\n        return;\n\n    } else if (MSys.interrupt) {\n        MSys.debugMessage('Executing interrupt')\n        command = 'bot swing '\n        \n    } else if (MSys.targetHealth > 90 && MSys.repeatAvailable && get_variable('useRepeat') && get_variable('engineerRepeatAttack') != '') {\n        MSys.debugMessage('Initiating repeat')\n        command =  'bot repeat '\n        command += get_variable('engineerRepeatAttack')\n        command += ' '\n\n    } else if (MSys.turretUnpowered) {\n        MSys.debugMessage('Recharging turret')\n        command = 'qpcboost'\n     \n    } else if (!MSys.magnotronActivated && get_variable('useMagnotron') && MSys.targetHealth < 50) {\n        MSys.debugMessage('Firing magnotron!')\n        command = 'magnotron '\n        \n    } else if (get_variable('useJunkjet') && MSys.parts > 0) {\n        MSys.debugMessage('Firing junkjet')\n        command = 'junkjet '\n        \n    } else {\n        command = 'bot claw '\n    }\n\n    if (command[command.length - 1] == ' ') {\n        MSys.debugMessage('Appending target')\n    \tcommand += get_variable('tar')\n    }\n    \n    MSys.debugMessage('Attempting command: ' + command)\n    send_command(command)\n}\n\nMSys.loaded(\"Starwraith Engineer Combat Implant v1.3\");\nsend_command('wakeup')","items":[]},{"type":"function","name":"onGMCP","enabled":true,"id":3,"code":"// Place any code here you'd like to run when a GMCP message is received\n// - The GMCP message is received as \"args.gmcp_method\" and \"args.gmcp_args\"\n\nGMCP[args.gmcp_method] = args.gmcp_args\n\n/* ------------------------------------------ CHARACTER STUFF ----------------------------------- */\n\nif (args.gmcp_method == \"Char.Vitals\") {\n    MSys.parts = args.gmcp_args.pt\n}\n\n/* ----------------------------------- DEFENCES AND BUFFS --------------------------------------- */\n\n//if (args.gmcp_method == 'Char.Defences.Add') {\n    //if (args.gmcp_args.name == 'Oblivion: Conqueror')  {\n    //    SECI.empyreal = 'Conqueror'\n    //}\n//}","items":[]},{"type":"group","name":"Engineer","enabled":true,"id":109,"items":[{"type":"group","name":"Configuration","enabled":true,"id":152,"items":[{"type":"alias","name":"List Ability Configuration","enabled":true,"id":113,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"var abilities = ''\nabilities += 'Heal:          ' + get_variable('useHeal') + '\\n'\nabilities += 'Use Repeat:    ' + get_variable('useRepeat') + '\\n'\nabilities += 'Repeat Attack: ' + get_variable('engineerRepeatAttack') + '\\n'\nabilities += 'QPC Boost:     ' + get_variable('useQPCBoost') + '\\n'\nabilities += 'Magnotron:     ' + get_variable('useMagnotron') + '\\n'\n\nvar debugMessages = ''\ndebugMessages += 'Repeat Avail:   ' + MSys.repeatAvailable + '\\n'\ndebugMessages += 'Target Bleeding:' + MSys.targetBleeding + '\\n'\ndebugMessages += 'Magnotron Avail:' + MSys.magnotronAvailable + '\\n'\n\nMSys.log(abilities, 'white')\nMSys.debugMessage(debugMessages)"}],"text":"hengineer","items":[]},{"type":"alias","name":"Enable/Disable Repeat","enabled":true,"id":135,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"if (args[1] != '') {\n    set_variable('engineerRepeatAttack', args[1])\n    set_variable('useRepeat', true)\n    MSys.notice('Enabled bot repeat with attack: ' + args[1])\n} else {\n    set_variable('engineerRepeatAttack', '')\n    set_variable('useRepeat', false)\n    MSys.notice('Disabled bot repeat command', 'white')\n}"}],"text":"hrepeat[ ]?(.*)","items":[]},{"type":"alias","name":"Enable/Disable QPCBoost","enabled":true,"id":151,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"MSys.toggle('useQPCBoost','QPC Boost after kill');"}],"text":"hqpcboost"},{"type":"alias","name":"Enable/Disable Magnotron","enabled":true,"id":160,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"MSys.toggle('useMagnotron','Activating magnotron!');"}],"text":"hmagnotron"},{"type":"alias","name":"Enable/Disable Junkjet","enabled":true,"id":162,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"MSys.toggle('useJunkjet','Use junkjet as default attack');"}],"text":"hjunkjet"}],"actions":[]},{"type":"group","name":"Ability Activations","enabled":true,"id":153,"items":[{"type":"trigger","name":"Stimjector Used","enabled":true,"id":111,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"You activate your stimjector, feeling a rush of vitality as it releases healing nanites into your bloodstream.","actions":[{"action":"script","script":"MSys.healReady = false"}],"items":[]},{"type":"trigger","name":"Stimjector Ready","enabled":true,"id":112,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"You can again use a stimjector.","actions":[{"action":"script","script":"MSys.healReady = true\nMSys.huntingAttack()"},{"action":"highlight","highlight":"line","highlight_backref":"1","highlight_fg":"#00efff","highlight_bg":"#000000"}],"items":[]},{"type":"trigger","name":"Repeat Active","enabled":true,"id":137,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^You build an instruction loop","actions":[{"action":"script","script":"MSys.repeatAvailable = false\nMSys.huntingAttack()"}],"items":[]},{"type":"trigger","name":"Repeat Available","enabled":true,"id":138,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^You can again order a repeated attack.$","actions":[{"action":"script","script":"MSys.repeatAvailable = true"},{"action":"highlight","highlight":"line","highlight_backref":"1","highlight_fg":"#fbbe80","highlight_bg":"#000000"}],"items":[]},{"type":"trigger","name":"Turret Powered","enabled":true,"id":158,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^This turret is already charged to max.$|^The turret is fully charged.$","actions":[{"action":"script","script":"MSys.turretUnpowered = false\nMSys.huntingAttack()"}]},{"type":"trigger","name":"Turret Unpowered","enabled":true,"id":150,"matching":"regexp","whole_words":false,"case_sensitive":true,"text":"doesn't have enough power to attack.$","actions":[{"action":"highlight","highlight":"line","highlight_backref":"1","highlight_fg":"#f863df","highlight_bg":"#000000"},{"action":"script","script":"MSys.turretUnpowered = true"}]},{"type":"trigger","name":"Magnotron Fired","enabled":true,"id":161,"matching":"regexp","whole_words":false,"case_sensitive":true,"text":"^You point a gently humming magnotron","actions":[{"action":"script","script":"MSys.magnotronActivated = true\nMSys.huntingAttack()"}]}],"actions":[]},{"type":"group","name":"Turret Construction","enabled":true,"id":129,"items":[{"type":"alias","name":"Construct Turret","enabled":true,"id":128,"matching":"regexp","whole_words":false,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"if (args[1] == '' || args[2] == '') {\n    MSys.log('Usage: hturret <mod> <weapon> <follow up command>', 'darkyellow')\n} else {\n    set_variable('turretMod', args[1])\n    set_variable('turretWeapon', args[2])\n    set_variable('turretFollowup', args[3])\n    set_variable('turretAlias', true)\n    send_command('turret construct turret')\n}\n"}],"text":"hturret ([a-z]+) ([a-z]+)[ ]?(.*)","items":[]},{"type":"trigger","name":"Frame Constructed","enabled":true,"id":130,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^Circuitboards, robotic servos, power sources, and an operating system come together under your capable hands to form a modular weapons turret","actions":[{"action":"script","script":"if (get_variable('turretAlias') == true) {\n    send_command('turret install ' + get_variable('turretWeapon'))\n}"}],"items":[]},{"type":"trigger","name":"Weapon Mounted","enabled":true,"id":131,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^Smoothly, you socket the .* barrel|That barrel is already installed on the turret","actions":[{"action":"script","script":"if (get_variable('turretAlias') != true) {return;}\n\nif (get_variable('turretMod').toUpperCase() == 'QPC') {\n    send_command('gadget construct qpc')\n} else {\n    send_command('turret mod ' + get_variable('turretMod'))\n    if (get_variable('turretFollowup') != '') {send_command(get_variable('turretFollowup'))}\n}"}],"items":[]},{"type":"trigger","name":"QPC Ready","enabled":true,"id":132,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^Using your vast engineering knowledge, you effortlessly construct a cylindrical quantum power cell","actions":[{"action":"script","script":"if (get_variable('turretAlias') != true) {\n    return;\n} else if (get_variable('turretMod').toUpperCase() == 'QPC') {\n    send_command('turret mod qpc')\n}"}],"items":[]},{"type":"trigger","name":"Mod Mounted","enabled":true,"id":133,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^Metal ratchets satisfyingly into place and code whirrs down","actions":[{"action":"script","script":"if (get_variable('turretAlias') != true) {return;}\nsend_command(get_variable('turretFollowup'))\nset_variable('turretAlias', false)\nMSys.log('Turret ready!', 'white')"}],"items":[]},{"type":"alias","name":"Deploy Sentry Turret","enabled":true,"id":134,"matching":"regexp","whole_words":false,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"send_command('turret deploy ' + args[1])"},{"action":"waitfor","text":"Dropping a turret with a mounted flamethrower barrel","matching":"substring","whole_words":false,"case_sensitive":false,"expire":"10"},{"action":"command","command":"workstation deploy","prefix_suffix":false},{"action":"waitfor","text":"You fold down the legs of your workstation","matching":"substring","whole_words":false,"case_sensitive":false,"expire":"10"},{"action":"command","command":"turret sentrymode","prefix_suffix":true},{"action":"waitfor","text":"Fingers whirring across the holokeyboard","matching":"substring","whole_words":false,"case_sensitive":false,"expire":"10"},{"action":"command","command":"workstation pack","prefix_suffix":true}],"text":"^deploysentry[ ]?([0-9]*)$","items":[]}],"actions":[]},{"type":"group","name":"Utility","enabled":true,"id":136,"items":[{"type":"trigger","name":"Airdrop Return","enabled":true,"id":123,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^An aerodynamic drone flies in, decelerating rapidly. It drops a supply of spare parts into your hands.$","actions":[{"action":"highlight","highlight":"line","highlight_backref":"1","highlight_fg":"#00c7ff","highlight_bg":"#000000"},{"action":"script","script":"if (get_variable('refillParts') == true) {\n    if (MSys.parts < 60) {\n        send_command('bot airdrop')\n    } else {\n        set_variable('refillParts', false)\n    }\n}"}],"items":[]},{"type":"alias","name":"Refill Parts","enabled":true,"id":127,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"set_variable('refillParts', true)\nsend_command('bot airdrop')\n"}],"text":"^hfillParts$","items":[]},{"type":"alias","name":"Wakeup Engineer","enabled":true,"id":154,"matching":"exact","whole_words":false,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"command","command":"operate stimjector on","prefix_suffix":true}],"text":"wakeup"}],"actions":[]},{"type":"trigger","name":"Queue Attack Engineer","enabled":true,"id":114,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^A crane-armed carrybot claws .* shredding .* skin.$|^You set the polarity to positive","actions":[{"action":"script","script":"MSys.huntingAttack()"}],"items":[]}],"actions":[]}],"description":"Starwraith Engineer Combat Implant v1.3"}