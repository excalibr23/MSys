{"type":"group","name":"starwraith fury combat implant","enabled":true,"id":1,"items":[{"type":"function","name":"onLoad","enabled":true,"id":2,"code":"// Changelog\n// 20190113T1503EST: Copied main system to separate class systems\n\n// Place any code here you'd like to autorun when the system is loaded\nsend_command('wakeup')\nSFCI = {\n// Core Implant Code\n    noticecolor: 'gold',\n    packagename: 'starwraith fury combat implant',\n    shortname: 'SFCI',\n    notice: function(text) {\n        display_notice(\"[\" + this.shortname + \"] \" + text, this.noticecolor);\n    },\n    loaded: function() {\n        //Send implant to browser log for debugging\n        console.log(this)\n        this.notice(\"Starwraith Fury Combat Implant v1.0 Loaded. Good hunting, and good death.\\n\");\n    },\n    helpbox: function(title,text) {\n        var helptext = \"<div class=\\\"mono\\\"><span style=\\\"color: #ffffff; \\\"><span style=\\\"background-color: #0000a0 \\\">\" + title + \"</span></span></div>\";\n        helptext += \"<div class=\\\"mono\\\">\" + text.replace(\"\\n\",\"</div><div class=\\\"mono\\\">\") + \"</div>\";\n        client.display_help_window(helptext);\n    },\n    disableGroup: function(name) {\n        var group = reflex_find_by_name('group', name, false, false, this.packagename)\n        reflex_disable(group)\n    },\n    enableGroup: function(name) {\n        var group = reflex_find_by_name('group', name, false, false, this.packagename)\n        reflex_enable(group)\n    },\n    log: function (x, fgcolor, bgcolor) {\n        let type = typeof x\n        switch(type) {\n          case 'number':\n          case 'string':\n          case 'boolean':\n            display_notice(x.toString(), fgcolor, bgcolor)\n            break;\n          case 'object':\n            for (var prop in x) {\n              display_notice(`${prop}: ${x[prop]}`, fgcolor, bgcolor)\n            }\n            break;\n          case 'undefined':\n            display_notice('undefined', fgcolor, bgcolor)\n            break;\n          default:\n            display_notice('wtf is this')\n        }\n    },\n    alert: function (text, fgcolor, bgcolor) {\n        text = text.toUpperCase()\n        let fullText = '-'.repeat(text.length+1) + '-------\\n--  '+ text + '  --\\n-------' + '-'.repeat(text.length+1)\n        display_notice(fullText, fgcolor, bgcolor)\n    },\n    debugMessage: function (text) {\n        if (get_variable('debug')) {\n            this.log(text, 'white', 'black')\n        }\n    },\n//System Variables\n    goal: 'hunt2',\n    matchList: get_variable('matchList'),\n    systemEnabled: true,\n    offenseEnabled: false,\n    break: get_variable('break'),\n    itemsInRoom: [],\n    damageThisFight: 0,\n    ttk: 0,\n    targetHealth: 0,\n    interrupt: false,\n//Character    \n    attack: get_variable('huntingAttack') + ' ',\n    class: '',\n    health: 0,\n    maxHealth: 0,\n    useHeal: get_variable('useHeal'),\n    healReady: true,\n//Fury\n    stance: '',\n    bladeshape: false,\n    rage: 0,\n    maxRage: 0,\n    unstoppable: false,\n    berserk: false,\n    useBerserk: get_variable('useBerserk'),\n    fever: false,\n    useFever: get_variable('useFever'),\n    hypertension: false,\n    infernoCharging: false,\n//Combat functions \n    findTarget: function() {\n        var itemList = this.itemsInRoom\n        var killList = get_variable('killList')\n        var targetFound = false\n        \n        //Match room order\n        if (!this.matchList) {\n            for (i=0; i<itemList.length; i++) {\n                for (x=0; x<killList.length; x++) {\n                    if (itemList[i].name.includes(killList[x]) && itemList[i].attrib === 'm' && targetFound === false) {\n                        set_variable('tar', itemList[i].id)\n                        send_command('settarget ' + itemList[i].id)\n                        targetFound = true\n                        display_notice('New target: '+itemList[i].name, 'red', 'black')\n                    }\n                }\n            }\n        } else { //Match priority/list order\n            for (i=0; i<killList.length; i++) {\n                for (x=0; x<itemList.length; x++) {\n                    if (itemList[x].name.includes(killList[i]) && itemList[x].attrib === 'm' && targetFound === false) {\n                        set_variable('tar', itemList[x].id)\n                        send_command('settarget ' + itemList[x].id)\n                        targetFound = true\n                        display_notice('New target: '+itemList[x].name, 'red', 'black')\n                    }\n                }\n            }\n        }\n\n        if (!targetFound) {\n            //display_notice('No Target Found', 'red', 'black')\n            set_variable('tar', '')\n        }\n    },\n    huntingAttack: function() {\n        \n        if (!this.systemEnabled) {return}\n        var command = ''\n        \n        command += 'combo '\n            \n        if (this.interrupt && this.offenseEnabled) {\n            send_command('kith fever ' + get_variable('tar'))\n            return;\n        }\n            \n        if (this.health / this.maxHealth < .8 && this.healReady  && this.useHeal) {\n            send_command('kith suffuse')\n            return;\n        }else if (!this.bladeshape && get_variable('kithbladeshape') !== undefined && get_variable('kithbladeshape') !== '') {\n            send_command(get_variable('kithbladeshape'))\n            return;\n        }else if (get_variable('tar') == '' || this.offenseEnabled == false) {\n            return;\n        }else if (!this.fever && this.useFever) {\n            command = 'kith fever ';\n        }else if (this.goal == 'hunt1') {\n            //Battleflow attack\n            if (this.stance == 'Symmetry') {\n                command += 'swiftcut '\n            } else if (this.stance == 'Flare') {\n                command += 'wound '\n            } else if (this.stance == 'Eruption') {\n                if (this.hypertension) {\n                    command += 'bloodburn '\n                } else {\n                    command += 'hypertension '\n                }\n            } else if (this.stance == 'Ember') {\n                command += 'legspike '\n            }\n\n            //Rage Attack\n            if (this.unstoppable) {\n                command += 'slice '\n            } else if (this.stance == 'Symmetry') {\n                if (this.rage / this.maxRage > .13 && !this.berserk && this.useBerserk) {\n                    command += 'berserk '\n                } else {\n                    command += 'flyinglash '\n                }\n            } else if (this.stance == 'Flare') {\n                command += 'rend '\n            } else if (this.stance == 'Eruption') {\n                if (this.health / this.maxHealth < .7) {\n                    command += 'resistant '\n                } else {\n                    command += 'upperlash '\n                }\n            } else if (this.stance == 'Ember') {\n                if (this.rage / this.maxRage > .73  && this.unstoppable == false) {\n                    command += 'unstoppable '\n                } else {\n                    command += 'strike '\n                }\n            }\n        }else if (this.goal == 'hunt2') {\n            //Battleflow attack\n            if (this.stance == 'Symmetry') {\n                command += 'swiftcut '\n            } else if (this.stance == 'Flare') {\n                command += 'wound '\n            } else if (this.stance == 'Eruption') {\n                command += 'rupture '\n            }\n\n            //Rage Attack\n            if (this.unstoppable) {\n                command += 'slice '\n            } else if (this.stance == 'Symmetry') {\n                if (this.rage / this.maxRage > .13 && !this.berserk && this.useBerserk) {\n                    command += 'berserk '\n                } else {\n                    command += 'flyinglash '\n                }\n            } else if (this.stance == 'Flare') {\n                command += 'rend '\n            } else if (this.stance == 'Eruption') {\n                if (this.rage / this.maxRage > .73  && this.unstoppable == false) {\n                    command += 'unstoppable '\n                } else {\n                    command += 'strike '\n                }\n            }\n        }else if (this.goal == 'hunt3') {\n            var next = ''\n            command = 'combo '\n                \n            //Battleflow attack\n            if (this.stance == 'Symmetry') {\n                command += 'gutrend '\n                next = 'Ember'\n            } else if (this.stance == 'Ember') {\n                command += 'legspike '\n                next = 'Symmetry'\n            } else if (this.stance == 'Flare') {\n                command += 'sear '\n                next = 'Symmetry'\n            }\n\n            //Rage Attack\n            if (this.unstoppable) {\n                command += 'slice '\n            } else if (next == 'Symmetry') {\n                if (this.rage / this.maxRage > .8  && this.unstoppable == false) {\n                    command += 'unstoppable '\n                } else {\n                    command += 'deflect '\n                }\n            } else if (next == 'Ember') {\n                command += 'resistant '\n            } else if (next == 'Flare') {\n                command += 'reel '\n            }\n        }\n        \n        command += get_variable('tar')\n        send_command(command)\n    }\n}\n\nSFCI.loaded();","items":[]},{"type":"function","name":"onGMCP","enabled":true,"id":3,"code":"// Place any code here you'd like to run when a GMCP message is received\n// - The GMCP message is received as \"args.gmcp_method\" and \"args.gmcp_args\"\n\nGMCP[args.gmcp_method] = args.gmcp_args\n\n/* ------------------------------------------ CHARACTER STUFF ----------------------------------- */\n\nif (args.gmcp_method == \"Char.Vitals\") {\n\n    // Track health changes\n    var change = SFCI.health - args.gmcp_args.hp;\n   \n    if (change > 0) {\n        SFCI.log('Damage taken: ' + change, 'yellow')\n    } else if (change < 0) {\n        SFCI.log('Damage healed: ' + Math.abs(change), '#6bdaee')\n    }\n    \n    SFCI.health = args.gmcp_args.hp\n    SFCI.maxHealth = args.gmcp_args.maxhp\n\n    SFCI.stance = args.gmcp_args.st\n    SFCI.rage = args.gmcp_args.rg\n    SFCI.maxRage = args.gmcp_args.maxrg\n}\n\n/* ----------------------------------- DEFENCES AND BUFFS --------------------------------------- */\n\nif (args.gmcp_method == 'Char.Defences.Add') {\n    \n    //Fury\n    //if (args.gmcp_args.name == 'Oblivion: Conqueror')  {\n    //    SFCI.empyreal = 'Conqueror'\n    //}\n\n}\n\n/* -------------------------------------------- ITEMS IN ROOM ----------------------------------- */\n\n//Get Items In Room\nif (args.gmcp_method == \"Char.Items.List\") {\n    SFCI.itemsInRoom = args.gmcp_args['items']\n}\n\n//Remove items when items leave\nif (args.gmcp_method == \"Char.Items.Remove\") {\n    let itemLeaving = args.gmcp_args['item']\n    \n    //Find index of item\n    SFCI.itemsInRoom = SFCI.itemsInRoom.filter(item => item.id !== itemLeaving.id);\n    \n}\n\n//Add items when items enter\nif (args.gmcp_method == \"Char.Items.Add\") {\n    let itemJoining = args.gmcp_args['item']\n    \n    //Find index of item\n    SFCI.itemsInRoom.push(itemJoining);\n    \n    if (SFCI.systemEnabled === true) {\n        if (!get_variable('tar')) {\n            SFCI.findTarget()\n        }\n    }\n    \n    if (SFCI.infernoCharging && itemJoining.attrib === 'm') {\n        send_command('asdf')\n        SFCI.infernoCharging = false\n        SFCI.alert('mob entered - inferno cancelled', 'white', 'red')\n    }\n}\n\n/* -------------------------------------------- PLAYERS IN ROOM ----------------------------------- */\nif (args.gmcp_method == \"Room.Players\") {\n    SFCI.playersInRoom = args.gmcp_args\n}\n\n/* --------------------------------------------- HELPERS --------------------------------- */\nif (args.gmcp_method == \"Room.Info\") {\n    if (SFCI.systemEnabled === true) {\n        SFCI.findTarget()\n    }\n}\n\nif (args.gmcp_method == \"IRE.Target.Info\") {\n    SFCI.targetHealth = args.gmcp_args['hpperc'].slice(0, -1)\n}\n","items":[]},{"type":"group","name":"Auto Hunt","enabled":true,"id":8,"items":[{"type":"group","name":"Setup","enabled":true,"id":41,"items":[{"type":"alias","name":"Combat Implant Setup - hsetup","enabled":true,"id":25,"matching":"begins","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"SFCI.log('-- Hunting List Setup.  Use \\'hsave\\' to keep a backup.  \\'hload\\' will load your backup.', 'white', 'black')\nSFCI.log('-- Use \\'hadd\\' <name> to add to the list and \\'hremove\\' <name> to remove items from this list. \\'hshow\\' will show the items on your list.', 'white', 'black')\nSFCI.log('-- Use \\'hattack\\' <attackName> to make it your primary attack that will be auto used.', 'white')\nSFCI.log('-- Use \\'hlist\\' to switch between room and priority list. Use \\'hup\\' or \\'hdown\\' <name> to increase or decrease an item on the priority list.', 'white')\nSFCI.log('-- Make sure you use \\'config usequeueing on\\'.  Then you can use other attacks to overwrite auto attacks.', 'white')\n\nif (get_variable('killList')       == undefined) {set_variable('killList', ['rockhopper'])}\nif (get_variable('debug')          == undefined) {set_variable('debug', false)}\nif (get_variable('matchList')      == undefined) {set_variable('matchList', true)}\nif (get_variable('break')          == undefined) {set_variable('break', true)}\nif (get_variable('useHeal')        == undefined) {set_variable('useHeal', true)}\nif (get_variable('useFreeze')      == undefined) {set_variable('useFreeze', false)}\nif (get_variable('useMultistrike') == undefined) {set_variable('useMultistrike', false)}\nif (get_variable('useFrenzy')      == undefined) {set_variable('useFrenzy', false)}\nif (get_variable('useDelay')       == undefined) {set_variable('useDelay', false)}\nif (get_variable('useBerserk')     == undefined) {set_variable('useBerserk', false)}\nif (get_variable('useFever')       == undefined) {set_variable('useFever', false)}\nif (get_variable('useAmbush')      == undefined) {set_variable('useAmbush', false)}\nif (get_variable('useRapidfire')   == undefined) {set_variable('useRapidfire', false)}"}],"text":"hsetup","items":[]},{"type":"alias","name":"System Reset","enabled":true,"id":126,"matching":"regexp","whole_words":false,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"SFCI.log('-- Combat Implant has been reset to factory settings.', 'white', 'black')\nSFCI.log('-- If you have previously backed up your kill list you may use \\'hload\\' to reload it', 'white', 'black')\n\nset_variable('killList', ['rockhopper'])\nset_variable('debug', false)\nset_variable('useFreeze', false)\nset_variable('useMultistrike', false)\nset_variable('useFrenzy', false)\nset_variable('useDelay', false)\nset_variable('useBerserk', false)\nset_variable('useFever', false)\nset_variable('useAmbush', false)\nset_variable('useRapidfire', false)\nset_variable('useHeal', true)\nset_variable('matchList', true)\nset_variable('break', true)"}],"text":"^hreset$","items":[]},{"type":"alias","name":"Change Auto Attack","enabled":true,"id":26,"matching":"regexp","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"SFCI.attack = args[1] + ' '\nset_variable('huntingAttack', args[1] + ' ')\ndisplay_notice('Attack set to: ' + args[1], 'white', 'black')"}],"text":"hattack (.+)","items":[]},{"type":"alias","name":"Enable/Disable List Mode - hlist","enabled":true,"id":56,"matching":"begins","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"if (get_variable('matchList')) {\n    SFCI.matchList = false\n    set_variable('matchList', false)\n    SFCI.log('Will match room listing', 'white')\n} else {\n    SFCI.matchList = true\n    set_variable('matchList', true)\n    SFCI.log('Will match priority listing', 'white')\n}"}],"text":"hlist","items":[]},{"type":"alias","name":"Enable/Disable Break After Kill Mode - hbreak","enabled":true,"id":82,"matching":"begins","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"if (get_variable('break')) {\n    SFCI.break = false\n    set_variable('break', false)\n    SFCI.log('Will continue after kill.', 'white')\n} else {\n    SFCI.break = true\n    set_variable('break', true)\n    SFCI.log('Will break after kill.', 'white')\n}"}],"text":"hbreak","items":[]},{"type":"alias","name":"Enable/Disable Break Threshold","enabled":true,"id":169,"matching":"regexp","whole_words":false,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"set_variable('breakThreshold', args[1])\nSFCI.breakThreshold = args[1]"}],"text":"^hbreakthreshold ([0-9]*)$"}],"actions":[]},{"type":"trigger","name":"Slain","enabled":true,"id":5,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^(You) have slain a.*$|^.*has been slain by (.+)\\.$","actions":[{"action":"script","script":"SFCI.freeze = false\nSFCI.frenzy = false\nSFCI.negation = false\nSFCI.delaySwarm = false\nSFCI.fever = false\nSFCI.hypertension = false\nSFCI.ambush = false\nSFCI.backhand = false\n\nvar a = new Audio('https://freesound.org/people/adcbicycle/sounds/13934/download/13934__adcbicycle__6.wav')\n//a.play()\n\nvar autoList = ['You', 'Chronoxi Starwraith', 'Feraluna Starwraith', 'Mee', 'Casimar', 'Albion', 'Mykel']\nvar onList = ''\n\nif (args[1]) {\n    onList = autoList.includes(args[1])\n} else {\n    onList = autoList.includes(args[2])\n}\n\nif (SFCI.systemEnabled === true && onList) {\n    SFCI.targetHealth = 0\n    send_command('clearqueue')\n    SFCI.findTarget()\n\n    if (SFCI.class == 'Engineer' && get_variable('useQPCBoost')) {\n        send_command('qpcboost')\n    }\n\n    if (SFCI.break) {\n        SFCI.offenseEnabled = false\n    }\n    \n    SFCI.huntingAttack()\n}\n\nvar slainMessage = ''\nvar now = new Date()\nif (SFCI.damageThisFight > 0 && SFCI.ttk > 0){\n    slainMessage = SFCI.damageThisFight + ' damage done this fight. | TTK: ' + (now.getTime() - SFCI.ttk)/1000 + 's | DPS: ' + Math.round(SFCI.damageThisFight / ((now.getTime() - SFCI.ttk)/1000))\n} else if (SFCI.damageThisFight > 0) {\n    slainMessage = SFCI.damageThisFight + ' damage done this fight.'\n} else if (SFCI.ttk > 0) {\n    slainMessage = 'TTK: ' + (now.getTime() - SFCI.ttk)/1000 + 's'\n}\n\nif (SFCI.damageThisFight > 0 || SFCI.ttk > 0){\n    SFCI.alert(slainMessage, 'lightgreen', 'darkblue')\n}\n\nSFCI.ttk = 0\nSFCI.damageThisFight = 0\nSFCI.interrupt = false"}],"items":[]},{"type":"trigger","name":"Crash - AUTO OFF","enabled":true,"id":18,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^You prepare to crash out of the room.*$|^\\[Queue\\]: You will attempt to do CRASH .{1,4} when you recover balance.$","actions":[{"action":"script","script":"SFCI.systemEnabled = false\ndisplay_notice('AUTO OFF', 'white', 'black')"}],"items":[]},{"type":"keybind","name":"","enabled":true,"id":10,"key":96,"actions":[{"action":"script","script":"if (get_variable('debug') == true) {SFCI.log('I am attacking ' + get_variable('tar'), 'white')}\nSFCI.systemEnabled = true\nSFCI.offenseEnabled = true\nSFCI.huntingAttack()"}],"key_alt":false,"key_ctrl":false,"key_shift":false,"items":[]},{"type":"keybind","name":"","enabled":true,"id":32,"key":111,"actions":[{"action":"script","script":"if (SFCI.systemEnabled === true) {\n  SFCI.systemEnabled = false\n  display_notice(\"Combat implant disabled\", 'white', 'black')\n} else {\n  SFCI.systemEnabled = true\n  display_notice(\"Combat implant enabled\", 'white', 'black')\n}"}],"key_alt":false,"key_ctrl":false,"key_shift":false,"items":[]},{"type":"alias","name":"Heal","enabled":true,"id":115,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"if (SFCI.class == 'Nanoseer') {\n  send_command('NANO REPAIR')\n} else if (SFCI.class == 'Fury') {\n  send_command('KITH SUFFUSE')\n} else if (SFCI.class == 'Scoundrel') {\n  send_command('STIM')\n} else if (SFCI.class == 'B.E.A.S.T.') {\n  send_command('suit support')\n} else if (SFCI.class == 'Engineer') {\n  send_command('operate stimjector')\n}"}],"text":"h","items":[]},{"type":"alias","name":"Add to hunting list - hadd <mob>","enabled":true,"id":13,"matching":"regexp","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"display_notice('Adding: ' + args[1] + ' to list', 'white', 'black')\nlet newList = get_variable('killList')\nnewList.push(args[1])\nset_variable('killList', newList)"}],"text":"hadd (.+)","items":[]},{"type":"alias","name":"Remove from hunting list - hremove <mob>","enabled":true,"id":14,"matching":"regexp","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"display_notice('Removing: ' + args[1] + ' from list', 'white', 'black')\n\nlet newList = get_variable('killList')\nnewList = newList.filter(item => item !== args[1]);\n\nset_variable('killList', newList)"}],"text":"hremove (.+)","items":[]},{"type":"alias","name":"Save Hunting List To Backup - hsave","enabled":true,"id":15,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"let newSave = get_variable('killList')\nset_variable('killListBackup', newSave)\ndisplay_notice('Hunt List Saved', 'white', 'black')\n"}],"text":"hsave","items":[]},{"type":"alias","name":"Load Hunting List From Backup - hload","enabled":true,"id":16,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"let backupList = get_variable('killListBackup')\nset_variable('killList', backupList)\ndisplay_notice('Hunt List Loaded from Backup', 'white', 'black')"}],"text":"hload","items":[]},{"type":"alias","name":"Show Hunting Targets - hshow","enabled":true,"id":17,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"let killList = get_variable('killList')\nfor (i=0; i<killList.length; i++) {\n    display_notice(killList[i], 'white', 'black')\n}"}],"text":"hshow","items":[]},{"type":"alias","name":"Item Priority - hup/hdown <mob>","enabled":true,"id":52,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"var list = get_variable('killList')\nvar nameIndex = list.indexOf(args[2])\nvar name = list[nameIndex]\n\nif (list[nameIndex-1] && nameIndex && args[1] === 'hup') {\n    list[nameIndex] = list[nameIndex - 1]\n    list[nameIndex-1] = name\n} else if (list[nameIndex+1] && nameIndex && args[1] === 'hdown') {\n    list[nameIndex] = list[nameIndex + 1]\n    list[nameIndex+1] = name\n}\n\nset_variable('killList', list)\n\nfor (i=0; i<list.length; i++) {\n    if(list[i] === name){\n        display_notice(list[i], 'gold', 'black')\n    } else {\n        display_notice(list[i])\n    }\n}"}],"text":"^(hup|hdown) (.+)$","items":[]},{"type":"alias","name":"Heal Toggle - hheal","enabled":true,"id":81,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"if (get_variable('useHeal')) {\n    set_variable('useHeal', false)\n    SFCI.useHeal = false\n    SFCI.log('HEAL OFF', 'white')\n} else {\n    set_variable('useHeal', true)\n    SFCI.useHeal = true\n    SFCI.log('HEAL ON', 'white')\n}"}],"text":"hheal","items":[]},{"type":"alias","name":"Kill","enabled":true,"id":120,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"if (get_variable('debug') == true) {SFCI.log('I am attacking ' + get_variable('tar'), 'white')}\nSFCI.systemEnabled = true\nSFCI.offenseEnabled = true\nSFCI.huntingAttack()"}],"text":"k","items":[]}],"actions":[]},{"type":"group","name":"Generic","enabled":true,"id":4,"items":[{"type":"group","name":"Interrupts","enabled":true,"id":147,"items":[{"type":"trigger","name":"Super - Interrupt","enabled":true,"id":148,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^Throwing back its grizzled head, a sly cania lets out a high-pitched, wavering howl.$|^A sluggish atzaparaki shakes off some of its torpor and draws in a deep breath, its sides beginning to swell alarmingly.$|^Light begins to focus deep within the body of a salt-crusted quartz creeper, growing to an almost painful radiance.$","actions":[{"action":"script","script":"SFCI.interrupt = true\n\nSFCI.alert('interrupting super', 'white', 'blue')\nSFCI.huntingAttack()\n"}],"items":[]}],"actions":[]},{"type":"trigger","name":"Left battle","enabled":true,"id":6,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"You are no longer in the throes of battle.","actions":[{"action":"highlight","highlight":"match","highlight_backref":"1","highlight_fg":"#9488f6","highlight_bg":"#000000"}],"items":[]},{"type":"trigger","name":"Hide Queue","enabled":false,"id":7,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^\\[Queue\\]: You will attempt to do.*$|^Your swarm is already focused upon a multistrike.*$","actions":[{"action":"gag"}],"items":[]},{"type":"trigger","name":"Add Damage Per Kill","enabled":true,"id":57,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"Damage Dealt: (.+) .+","actions":[{"action":"script","script":"if (SFCI.ttk == 0) {\n    var now = new Date()\n    SFCI.ttk = now.getTime()\n}\nSFCI.damageThisFight += parseInt(args[1])"},{"action":"highlight","highlight":"match","highlight_backref":"1","highlight_fg":"#ff0000","highlight_bg":"#000000"}],"items":[]},{"type":"trigger","name":"Not following","enabled":true,"id":87,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"(.+) is no longer following you.","actions":[{"action":"script","script":"SFCI.log(args[1] + ' Stopped Following!', 'darkred')"}],"items":[]},{"type":"alias","name":"Crash + Direction - c<dir>","enabled":true,"id":33,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"send_command('cq')\nsend_command('crash ' + args[1])"}],"text":"c(nw|ne|se|sw|n|s|e|w|u|d|in|out)","items":[]},{"type":"alias","name":"Javascript - js","enabled":true,"id":31,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"SFCI.log(eval(args[1]))"}],"text":"^js (.+)$","items":[]}],"actions":[]},{"type":"group","name":"Spaceship","enabled":true,"id":11,"items":[{"type":"alias","name":"Ship Beacon - sb","enabled":true,"id":12,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"command","command":"SHIP BEACON","prefix_suffix":true}],"text":"sb","items":[]},{"type":"alias","name":"Incursion List - il","enabled":true,"id":60,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"command","command":"Incursion List","prefix_suffix":true}],"text":"il","items":[]},{"type":"alias","name":"Incursion Map - im","enabled":true,"id":62,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"command","command":"Incursion Map","prefix_suffix":true}],"text":"im","items":[]},{"type":"alias","name":"Starchart - sc <place>","enabled":true,"id":61,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"send_command('starchart ' + args[1])"}],"text":"^sc (.*)$","items":[]},{"type":"alias","name":"Cargo Recover - cr <dir>","enabled":true,"id":63,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"command","command":"cargo recover @1","prefix_suffix":true}],"text":"^cr (.+)$","items":[]},{"type":"alias","name":"Cosmpiercer map - cpm","enabled":true,"id":51,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"command","command":"Cosmpiercer map","prefix_suffix":true}],"text":"cpm","items":[]},{"type":"alias","name":"Cosmpiecer Liberate - cpl","enabled":true,"id":68,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"command","command":"cosmpiercer liberate","prefix_suffix":true}],"text":"cpl","items":[]},{"type":"alias","name":"Cosmpiercer list - cp","enabled":true,"id":50,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"command","command":"Cosmpiercer list","prefix_suffix":true}],"text":"cp","items":[]}],"actions":[]},{"type":"group","name":"Fury","enabled":true,"id":69,"items":[{"type":"trigger","name":"Kithblade Shaped","enabled":true,"id":70,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"Resting your hand on the hilt of","actions":[{"action":"script","script":"SFCI.bladeshape = true\nif (SFCI.systemEnabled === true) {\n    SFCI.huntingAttack()\n}"}],"items":[]},{"type":"trigger","name":"Kithblade Unshaped","enabled":true,"id":86,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"The blade of .+ shimmers and warps.+","actions":[{"action":"script","script":"SFCI.alert('bladeshape off', 'white', 'lightred')\nSFCI.bladeshape = false\n\nvar a = new Audio('https://freesound.org/people/Stopmotionbros/sounds/438991/download/438991__stopmotionbros__wind.m4a')\na.play()"},{"action":"highlight","highlight":"line","highlight_backref":"1","highlight_fg":"#ffbc78","highlight_bg":"#000000"}],"items":[]},{"type":"trigger","name":"Fever On","enabled":true,"id":79,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"Your mind extends towards the vulnerabilities of .+ body, and with your connection to the universe's energy, you begin to increase the heat in every cell, flushing .+ with a raging fever.","actions":[{"action":"script","script":"SFCI.fever = true\nSFCI.interrupt = false"}],"items":[]},{"type":"trigger","name":"Unstoppable On","enabled":true,"id":71,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"Your rage overwhelms you, you become unstoppable!","actions":[{"action":"script","script":"SFCI.unstoppable = true\n\nvar reflexOn = reflex_find_by_name('trigger', 'Queue Attack Fury', false, false, 'SFCI').enabled\n\nif (SFCI.systemEnabled && reflexOn) {\n    SFCI.huntingAttack()\n}"}],"items":[]},{"type":"trigger","name":"Unstoppable Off","enabled":true,"id":72,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"You no longer feel unstoppable!","actions":[{"action":"script","script":"SFCI.unstoppable = false\nSFCI.log('NO UNSTOPPABLE', 'red')\n\nvar reflexOn = reflex_find_by_name('trigger', 'Queue Attack Fury', false, false, 'SFCI').enabled\n\nif (SFCI.systemEnabled && reflexOn) {\n    SFCI.huntingAttack()\n}"}],"items":[]},{"type":"trigger","name":"Hypertension On","enabled":true,"id":85,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^Tossing .+ to your off hand, you extend a bloodied palm towards .+ and then clench it into a fist, feeling .+ heart spasm and beat more quickly within .+ chest.$","actions":[{"action":"script","script":"SFCI.hypertension = true"}],"items":[]},{"type":"trigger","name":"Heal Ready","enabled":true,"id":77,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"It is safe to suffuse yourself with kith energy again.","actions":[{"action":"script","script":"SFCI.healReady = true\n\nvar reflexOn = reflex_find_by_name('trigger', 'Queue Attack Fury', false, false, 'SFCI').enabled\n\nif (SFCI.systemEnabled && reflexOn) {\n    SFCI.huntingAttack()\n}"},{"action":"highlight","highlight":"line","highlight_backref":"1","highlight_fg":"#51d051","highlight_bg":"#000000"}],"items":[]},{"type":"trigger","name":"Heal Used","enabled":true,"id":78,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"The heart of distant stars and the fire at the center of every planet shimmers in your mind, and you draw upon that power, filling your body with an energy that heals your wounds and suffuses you with a flush of health.","actions":[{"action":"script","script":"SFCI.healReady = false\n\nvar reflexOn = reflex_find_by_name('trigger', 'Queue Attack Fury', false, false, 'SFCI').enabled\n\nif (SFCI.systemEnabled && reflexOn) {\n    SFCI.huntingAttack()\n}"}],"items":[]},{"type":"trigger","name":"Berserk On","enabled":true,"id":74,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^You go berserk, flailing .*$","actions":[{"action":"script","script":"SFCI.berserk = true\n\nvar reflexOn = reflex_find_by_name('trigger', 'Queue Attack Fury', false, false, 'SFCI').enabled\n\nif (SFCI.systemEnabled && reflexOn) {\n    SFCI.huntingAttack()\n}"}],"items":[]},{"type":"trigger","name":"Berserk Off","enabled":true,"id":75,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"You are no longer berserk.","actions":[{"action":"script","script":"SFCI.berserk = false\n\nvar reflexOn = reflex_find_by_name('trigger', 'Queue Attack Fury', false, false, 'SFCI').enabled\n\nif (SFCI.systemEnabled && reflexOn) {\n    SFCI.huntingAttack()\n}"}],"items":[]},{"type":"trigger","name":"Attack after Inferno","enabled":true,"id":118,"matching":"substring","whole_words":true,"case_sensitive":true,"text":"The searing wave of your inferno engulfs","actions":[{"action":"script","script":"SFCI.systemEnabled = true\nSFCI.offenseEnabled = true\nSFCI.infernoCharging = false\n\nSFCI.huntingAttack()"}],"items":[]},{"type":"trigger","name":"Queue Attack Fury","enabled":true,"id":73,"matching":"regexp","whole_words":false,"case_sensitive":true,"text":"^You flow smoothly into the.+stance.+|^You flow out of your stance.+|^Your mind extends towards the vulnerabilities of.*$","actions":[{"action":"script","script":"SFCI.huntingAttack()\n"}],"items":[]},{"type":"alias","name":"Awaken Fury","enabled":true,"id":143,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"command","command":"kith harden","prefix_suffix":true},{"action":"waitfor","text":"^You focus on hardening your skin|^Your internals are already hardened","matching":"regexp","whole_words":false,"case_sensitive":false,"expire":"10"},{"action":"command","command":"kith warmth","prefix_suffix":true},{"action":"waitfor","text":"^You focus on warming up your skin|^You're already protected","matching":"regexp","whole_words":false,"case_sensitive":false,"expire":"10"},{"action":"command","command":"kith balancing","prefix_suffix":true},{"action":"waitfor","text":"^You focus on your kith to prevent falling.|^You're already balancing","matching":"regexp","whole_words":false,"case_sensitive":false,"expire":"10"},{"action":"command","command":"kith firewreathe","prefix_suffix":true}],"text":"wakeup","items":[]},{"type":"alias","name":"Berserk Toggle - hberserk","enabled":true,"id":76,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"if (get_variable('useBerserk')) {\n    set_variable('useBerserk', false)\n    SFCI.useBerserk = false\n    SFCI.log('BERSERK OFF', 'white')\n} else {\n    set_variable('useBerserk', true)\n    SFCI.useBerserk = true\n    SFCI.log('BERSERK ON', 'white')\n}"}],"text":"hberserk","items":[]},{"type":"alias","name":"Fever Toggle - hfever","enabled":true,"id":80,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"if (get_variable('useFever')) {\n    set_variable('useFever', false)\n    SFCI.useFever = false\n    SFCI.log('FEVER OFF', 'white')\n} else {\n    set_variable('useFever', true)\n    SFCI.useFever = true\n    SFCI.log('FEVER ON', 'white')\n}"}],"text":"hfever","items":[]},{"type":"alias","name":"Fury Abilities - hfury","enabled":true,"id":84,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"var abilities = ''\nabilities += 'Berserk: ' + get_variable('useBerserk') + '\\n'\nabilities += 'Fever: ' + get_variable('useFever') + '\\n'\nabilities += 'Heal: ' + get_variable('useHeal') + '\\n'\nabilities += 'Bladeshape: ' + SFCI.bladeshape + '\\n'\nabilities += 'Desired blade shape set to: ' + get_variable('kithbladeshape') + '\\n'\nabilities += 'Goal: ' + SFCI.goal + '\\n'\n\nSFCI.log(abilities, 'white')"}],"text":"hfury","items":[]},{"type":"alias","name":"Set Bladeshape","enabled":true,"id":121,"matching":"regexp","whole_words":false,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"set_variable('kithbladeshape', args[1])\nSFCI.log('Set desired kithblade shape to: ' + get_variable('kithbladeshape'))"}],"text":"^hblade (.+)","items":[]},{"type":"alias","name":"Inferno - inf","enabled":true,"id":116,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"command","command":"KITH INFERNO","prefix_suffix":true}],"text":"inf","items":[]},{"type":"keybind","name":"","enabled":true,"id":117,"key":110,"actions":[{"action":"script","script":"var dt = new Date()\nSFCI.ttk = dt.getTime()\n\nSFCI.infernoCharging = true\n\nsend_command('kith inferno')"}],"key_alt":false,"key_ctrl":false,"key_shift":false,"items":[]},{"type":"keybind","name":"","enabled":true,"id":122,"key":106,"actions":[{"action":"command","command":"kith suffuse"}],"key_alt":false,"key_ctrl":false,"key_shift":false,"items":[]}],"actions":[]},{"type":"group","name":"Combat","enabled":true,"id":64,"items":[{"type":"group","name":"Chat","enabled":true,"id":65,"items":[{"type":"alias","name":"Target call - tt <name>","enabled":false,"id":67,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"SFCI.target = args[1]\nset_variable('tar', args[1])\nsend_command('st ' + args[1])\nsend_command('crt Target: ' + args[1])"}],"text":"tt (.+)","items":[]}],"actions":[]}],"actions":[]}],"description":"SFCI v1.0"}